{"version":3,"sources":["webpack:///./src/app/dialog.service.ts","webpack:///./src/app/model/attribute-meta/attribute-meta.component.css","webpack:///./src/app/model/attribute-meta/attribute-meta.component.html","webpack:///./src/app/model/attribute-meta/attribute-meta.component.ts","webpack:///./src/app/model/data-domain/data-domain-detail/data-domain-detail.component.css","webpack:///./src/app/model/data-domain/data-domain-detail/data-domain-detail.component.html","webpack:///./src/app/model/data-domain/data-domain-detail/data-domain-detail.component.ts","webpack:///./src/app/model/data-domain/data-domain.component.css","webpack:///./src/app/model/data-domain/data-domain.component.html","webpack:///./src/app/model/data-domain/data-domain.component.ts","webpack:///./src/app/model/data-element/data-element-detail/data-element-detail.component.css","webpack:///./src/app/model/data-element/data-element-detail/data-element-detail.component.html","webpack:///./src/app/model/data-element/data-element-detail/data-element-detail.component.ts","webpack:///./src/app/model/data-element/data-element.component.css","webpack:///./src/app/model/data-element/data-element.component.html","webpack:///./src/app/model/data-element/data-element.component.ts","webpack:///./src/app/model/entity-type/entity-type-detail/entity-type-detail.component.css","webpack:///./src/app/model/entity-type/entity-type-detail/entity-type-detail.component.html","webpack:///./src/app/model/entity-type/entity-type-detail/entity-type-detail.component.ts","webpack:///./src/app/model/entity-type/entity-type.component.css","webpack:///./src/app/model/entity-type/entity-type.component.html","webpack:///./src/app/model/entity-type/entity-type.component.ts","webpack:///./src/app/model/model-routing.module.ts","webpack:///./src/app/model/model-validators.ts","webpack:///./src/app/model/model.component.css","webpack:///./src/app/model/model.component.html","webpack:///./src/app/model/model.component.ts","webpack:///./src/app/model/model.module.ts","webpack:///./src/app/model/model.service.ts","webpack:///./src/app/model/relation/relation-detail/relation-detail.component.css","webpack:///./src/app/model/relation/relation-detail/relation-detail.component.html","webpack:///./src/app/model/relation/relation-detail/relation-detail.component.ts","webpack:///./src/app/model/relation/relation.component.css","webpack:///./src/app/model/relation/relation.component.html","webpack:///./src/app/model/relation/relation.component.ts","webpack:///./src/app/model/relationship/relationship-detail/relationship-detail.component.css","webpack:///./src/app/model/relationship/relationship-detail/relationship-detail.component.html","webpack:///./src/app/model/relationship/relationship-detail/relationship-detail.component.ts","webpack:///./src/app/model/relationship/relationship.component.css","webpack:///./src/app/model/relationship/relationship.component.html","webpack:///./src/app/model/relationship/relationship.component.ts","webpack:///./src/app/model/role/role-detail/role-detail.component.css","webpack:///./src/app/model/role/role-detail/role-detail.component.html","webpack:///./src/app/model/role/role-detail/role-detail.component.ts","webpack:///./src/app/model/role/role.component.css","webpack:///./src/app/model/role/role.component.html","webpack:///./src/app/model/role/role.component.ts","webpack:///./src/app/model/work-protection.guard.ts"],"names":[],"mappings":"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","file":"model-model-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport {Observable, of} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DialogService {\n\n  /**\n   * Ask user to confirm an action. `message` explains the action and choices.\n   * Returns observable resolving to `true`=confirm or `false`=cancel\n   */\n  confirm(message?: string): Observable<boolean> {\n    const confirmation = window.confirm(message || 'Is it OK?');\n\n    return of(confirmation);\n  }\n}\n","module.exports = \".dk-table {\\n  display: block;\\n  overflow-x: auto;\\n  white-space: nowrap;\\n  border: none;\\n}\\n.dk-actions{\\n  width: 3rem;\\n  min-width: 3rem;\\n  max-width: 3rem;\\n}\\n.dk-description{\\n  width: 15rem;\\n  min-width: 15rem;\\n  max-width: 15rem;\\n}\\n.dk-number{\\n  width: 6rem;\\n  min-width: 6rem;\\n  max-width: 6rem;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kZWwvYXR0cmlidXRlLW1ldGEvYXR0cmlidXRlLW1ldGEuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQWM7RUFDZCxnQkFBZ0I7RUFDaEIsbUJBQW1CO0VBQ25CLFlBQVk7QUFDZDtBQUNBO0VBQ0UsV0FBVztFQUNYLGVBQWU7RUFDZixlQUFlO0FBQ2pCO0FBQ0E7RUFDRSxZQUFZO0VBQ1osZ0JBQWdCO0VBQ2hCLGdCQUFnQjtBQUNsQjtBQUNBO0VBQ0UsV0FBVztFQUNYLGVBQWU7RUFDZixlQUFlO0FBQ2pCIiwiZmlsZSI6InNyYy9hcHAvbW9kZWwvYXR0cmlidXRlLW1ldGEvYXR0cmlidXRlLW1ldGEuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kay10YWJsZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBvdmVyZmxvdy14OiBhdXRvO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICBib3JkZXI6IG5vbmU7XG59XG4uZGstYWN0aW9uc3tcbiAgd2lkdGg6IDNyZW07XG4gIG1pbi13aWR0aDogM3JlbTtcbiAgbWF4LXdpZHRoOiAzcmVtO1xufVxuLmRrLWRlc2NyaXB0aW9ue1xuICB3aWR0aDogMTVyZW07XG4gIG1pbi13aWR0aDogMTVyZW07XG4gIG1heC13aWR0aDogMTVyZW07XG59XG4uZGstbnVtYmVye1xuICB3aWR0aDogNnJlbTtcbiAgbWluLXdpZHRoOiA2cmVtO1xuICBtYXgtd2lkdGg6IDZyZW07XG59XG4iXX0= */\"","module.exports = \"<div class=\\\"card mt-2\\\">\\n  <div class=\\\"card-header\\\"><span class=\\\"fab fa-elementor\\\"></span> Attribute</div>\\n  <div class=\\\"card-body\\\">\\n    <table class=\\\"table table-bordered table-sm dk-table\\\" [formGroup]=\\\"parentForm\\\">\\n      <thead class=\\\"thead-light\\\">\\n        <tr>\\n          <th scope=\\\"col\\\">Action</th>\\n          <th scope=\\\"col\\\">Attribute Name</th>\\n          <th scope=\\\"col\\\">Description</th>\\n          <th scope=\\\"col\\\">Data Element</th>\\n          <th scope=\\\"col\\\">Data Type</th>\\n          <th scope=\\\"col\\\">Length</th>\\n          <th scope=\\\"col\\\">Decimal</th>\\n          <th scope=\\\"col\\\" title=\\\"Primary Key\\\" [hidden]=\\\"relationID.substring(0,2) !== 'r_'\\\">PK</th>\\n          <th scope=\\\"col\\\" title=\\\"Auto Incremental\\\" [hidden]=\\\"relationID.substring(0,2) !== 'r_'\\\">AI</th>\\n        </tr>\\n      </thead>\\n\\n      <tbody formArrayName=\\\"ATTRIBUTES\\\">\\n        <tr *ngFor=\\\"let attrFormGroup of formArray.controls; let i = index\\\">\\n          <td class=\\\"dk-actions\\\">\\n            <button class=\\\"btn btn-sm\\\" type=\\\"button\\\" [disabled]=\\\"readonly || isFieldGray(attrFormGroup.value)\\\"\\n                    (click)=\\\"deleteAttribute(i)\\\" title=\\\"Delete\\\">\\n              <span class=\\\"far fa-trash-alt\\\"></span>\\n            </button>\\n          </td>\\n          <td [formGroup]=\\\"attrFormGroup\\\">\\n            <input type=\\\"text\\\" formControlName=\\\"ATTR_NAME\\\" [readonly]=\\\"readonly || isFieldGray(attrFormGroup.value)\\\"\\n                   class=\\\"form-control form-control-sm\\\" (change)=\\\"onChangeAttributeName(i)\\\">\\n          </td>\\n          <td [formGroup]=\\\"attrFormGroup\\\">\\n            <input type=\\\"text\\\" formControlName=\\\"ATTR_DESC\\\" class=\\\"form-control form-control-sm dk-description\\\"\\n                   [readonly]=\\\"readonly || isFieldGray(attrFormGroup.value)\\\">\\n          </td>\\n          <td [formGroup]=\\\"attrFormGroup\\\">\\n            <input type=\\\"text\\\" formControlName=\\\"DATA_ELEMENT\\\" [readonly]=\\\"readonly || isFieldGray(attrFormGroup.value)\\\"\\n                   class=\\\"form-control form-control-sm\\\">\\n          </td>\\n          <td [formGroup]=\\\"attrFormGroup\\\">\\n            <select formControlName=\\\"DATA_TYPE\\\" (change)=\\\"onChangeDataType(attrFormGroup)\\\" class=\\\"form-control form-control-sm\\\">\\n              <option *ngFor=\\\"let opt of dataTypes\\\" [value]=\\\"opt.key\\\">{{opt.value}}</option>\\n            </select>\\n          </td>\\n          <td [formGroup]=\\\"attrFormGroup\\\">\\n            <input type=\\\"number\\\" formControlName=\\\"DATA_LENGTH\\\" class=\\\"dk-number\\\"\\n                   class=\\\"form-control form-control-sm\\\"\\n                   [readonly]=\\\"(+attrFormGroup.value.DATA_TYPE !== 1 && +attrFormGroup.value.DATA_TYPE !== 4) || readonly || isFieldGray(attrFormGroup.value)\\\">\\n          </td>\\n          <td [formGroup]=\\\"attrFormGroup\\\">\\n            <input type=\\\"number\\\" formControlName=\\\"DECIMAL\\\" class=\\\"dk-number\\\"\\n                   class=\\\"form-control form-control-sm\\\" [readonly]=\\\"+attrFormGroup.value.DATA_TYPE !== 4 || readonly || isFieldGray(attrFormGroup.value)\\\">\\n          </td>\\n          <td [formGroup]=\\\"attrFormGroup\\\" [hidden]=\\\"relationID.substring(0,2) !== 'r_'\\\">\\n            <input type=\\\"checkbox\\\" formControlName=\\\"PRIMARY_KEY\\\">\\n          </td>\\n          <td [formGroup]=\\\"attrFormGroup\\\" [hidden]=\\\"relationID.substring(0,2) !== 'r_'\\\">\\n            <input type=\\\"checkbox\\\" formControlName=\\\"AUTO_INCREMENT\\\">\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</div>\\n\"","import {Component, Input, OnChanges, OnInit} from '@angular/core';\nimport {AbstractControl, FormArray, FormBuilder, FormGroup} from '@angular/forms';\nimport {Attribute} from 'jor-angular';\n\n@Component({\n  selector: 'app-attribute-meta',\n  templateUrl: './attribute-meta.component.html',\n  styleUrls: ['./attribute-meta.component.css']\n})\nexport class AttributeMetaComponent implements OnInit, OnChanges {\n  dataTypes = [\n    {key: 1, value: 'Char'},\n    {key: 2, value: 'Integer'},\n    {key: 3, value: 'Boolean'},\n    {key: 4, value: 'Decimal'},\n    {key: 5, value: 'String'},\n    {key: 6, value: 'Binary'},\n    {key: 7, value: 'Date'},\n    {key: 8, value: 'Timestamp'}\n  ];\n  formArray: FormArray;\n  deletedAttributes = [];\n\n  constructor(private fb: FormBuilder) { }\n\n  @Input() parentForm: FormGroup;\n  @Input() attributes: Attribute[];\n  @Input() readonly: boolean;\n  @Input() relationID: string;\n  @Input() isNewMode: boolean;\n\n  ngOnInit() { }\n\n  ngOnChanges() {\n    this.generateFormArray();\n    this.formArray = this.parentForm.get('ATTRIBUTES') as FormArray;\n  }\n\n  deleteAttribute(index: number): void {\n    if (index !== this.formArray.length - 1) {\n      this.deletedAttributes.push(this.formArray.at(index).get('ATTR_GUID').value);\n      this.formArray.removeAt(index);\n      this.formArray.markAsDirty();\n    }\n  }\n\n  onChangeDataType(attrFormGroup: AbstractControl): void {\n    switch (attrFormGroup.get('DATA_TYPE').value) {\n      case '1': // char\n        attrFormGroup.get('DATA_LENGTH').setValue(10);\n        attrFormGroup.get('DECIMAL').setValue(null);\n        break;\n      case '4': // decimal\n        attrFormGroup.get('DATA_LENGTH').setValue(23);\n        attrFormGroup.get('DECIMAL').setValue(2);\n        break;\n      default:\n        attrFormGroup.get('DATA_LENGTH').setValue(null);\n        attrFormGroup.get('DECIMAL').setValue(null);\n    }\n    attrFormGroup.get('DATA_LENGTH').markAsDirty();\n  }\n\n  onChangeAttributeName(index: number): void {\n    if (index === this.formArray.length - 1 && !this.formArray.controls[index].value.ATTR_GUID) {\n      // Only work for the last New line\n      this.formArray.push(\n        this.fb.group({\n          ATTR_GUID: [''],\n          RELATION_ID: [''],\n          ATTR_NAME: [''],\n          ATTR_DESC: [''],\n          DATA_ELEMENT: [''],\n          DATA_TYPE: [1],\n          DATA_LENGTH: [10],\n          DECIMAL: [null],\n          PRIMARY_KEY: [false],\n          AUTO_INCREMENT: [false]\n        }));\n    }\n  }\n\n  processChangedAttributes(): any[] {\n    const changedAttributes = [];\n    let changedAttribute;\n    let order = 0;\n    if (this.formArray.dirty) {\n      this.formArray.controls.forEach((attribute, index) => {\n        const currentOrder = attribute.get('ORDER') ? attribute.get('ORDER').value : index;\n        order = order <= currentOrder ? currentOrder + 1 : order + 1;\n        if (attribute.get('ATTR_NAME').value.trim() === '') { return; }\n        if (attribute.dirty) {\n          changedAttribute = { ORDER: order };\n          if (attribute.get('ATTR_GUID').value) { // Update Case\n            changedAttribute['action'] = 'update';\n            changedAttribute['ATTR_GUID'] = attribute.get('ATTR_GUID').value;\n            const attrFormGroup = attribute as FormGroup;\n            Object.keys(attrFormGroup.controls).forEach(key => {\n              const formControl = attrFormGroup.controls[key];\n              if (formControl.dirty) {\n                changedAttribute[key] = formControl.value;\n              }\n            });\n          } else { // New Add Case\n            changedAttribute['action'] = 'add';\n            const attrFormGroup = attribute as FormGroup;\n            Object.keys(attrFormGroup.controls).forEach(key => {\n              const formControl = attrFormGroup.controls[key];\n              changedAttribute[key] = formControl.value;\n            });\n          }\n        } else {\n          changedAttribute = null;\n        }\n        if (changedAttribute) {\n          changedAttributes.push(changedAttribute);\n        }\n      });\n\n      // Deletion Case\n      this.deletedAttributes.forEach(attributeGUID => {\n        changedAttribute = {action: 'delete', ATTR_GUID: attributeGUID};\n        changedAttributes.push(changedAttribute);\n      });\n\n      return changedAttributes;\n    }\n  }\n\n  generateFormArray(): void {\n    const formArray = [];\n    if (this.attributes) {\n      this.attributes.forEach( attribute => {\n        formArray.push(this.fb.group({\n          ATTR_GUID: [attribute.ATTR_GUID],\n          RELATION_ID: [attribute.RELATION_ID],\n          ATTR_NAME: [attribute.ATTR_NAME],\n          ATTR_DESC: [attribute.ATTR_DESC],\n          DATA_ELEMENT: [attribute.DATA_ELEMENT],\n          DATA_TYPE: [{value: attribute.DATA_TYPE, disabled: this.readonly || this.isFieldGray(attribute)}],\n          DATA_LENGTH: [attribute.DATA_LENGTH],\n          DECIMAL: [attribute.DECIMAL],\n          ORDER: [attribute.ORDER],\n          PRIMARY_KEY: [{value: attribute.PRIMARY_KEY, disabled: this.readonly || this.isFieldGray(attribute)}],\n          AUTO_INCREMENT: [{value: attribute.AUTO_INCREMENT, disabled: this.readonly || this.isFieldGray(attribute)}]\n        }));\n      });\n    }\n    if (this.isNewMode) {\n      formArray.push(this.fb.group({\n        ATTR_GUID: [''],\n        RELATION_ID: [''],\n        ATTR_NAME: [''],\n        ATTR_DESC: [''],\n        DATA_ELEMENT: [''],\n        DATA_TYPE: [1],\n        DATA_LENGTH: [10],\n        DECIMAL: [null],\n        PRIMARY_KEY: [false],\n        AUTO_INCREMENT: [false]\n      }));\n    }\n    this.parentForm.addControl('ATTRIBUTES', new FormArray(formArray));\n  }\n\n  switchEditDisplay(readonly: boolean) {\n    if (!readonly) { // Edit Mode\n      this.formArray.controls.forEach(attrFormGroup => {\n        if (!this.isFieldGray(attrFormGroup.value)) {\n          attrFormGroup.get('DATA_TYPE').enable();\n          attrFormGroup.get('PRIMARY_KEY').enable();\n          attrFormGroup.get('AUTO_INCREMENT').enable();\n        }\n      });\n      this.formArray.push(this.fb.group({\n        ATTR_GUID: [''],\n        RELATION_ID: [this.relationID],\n        ATTR_NAME: [''],\n        ATTR_DESC: [''],\n        DATA_ELEMENT: [''],\n        DATA_TYPE: [1],\n        DATA_LENGTH: [10],\n        DECIMAL: [null],\n        PRIMARY_KEY: [false],\n        AUTO_INCREMENT: [false]\n      }));\n    } else { // Display Mode\n      let lastIndex = this.formArray.length - 1;\n      while (lastIndex >= 0 && this.formArray.controls[lastIndex].get('ATTR_NAME').value.trim() === '') {\n        this.formArray.removeAt(lastIndex);\n        lastIndex--;\n      }\n      this.formArray.controls.forEach(attrFormGroup => {\n        attrFormGroup.get('DATA_TYPE').disable();\n        attrFormGroup.get('PRIMARY_KEY').disable();\n        attrFormGroup.get('AUTO_INCREMENT').disable();\n      });\n    }\n  }\n\n  isFieldGray(attribute: Attribute): boolean {\n    return this.relationID.substr(0, 3) === 'rs_' &&\n        attribute && attribute.ATTR_NAME &&\n       (attribute.ATTR_NAME === 'VALID_FROM' ||\n        attribute.ATTR_NAME === 'VALID_TO' ||\n        attribute.ATTR_NAME.substr(-14, 14) === '_INSTANCE_GUID' ||\n        attribute.ATTR_NAME.substr(-10, 10) === '_ENTITY_ID');\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZGVsL2RhdGEtZG9tYWluL2RhdGEtZG9tYWluLWRldGFpbC9kYXRhLWRvbWFpbi1kZXRhaWwuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\n  data-domain-detail works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-data-domain-detail',\n  templateUrl: './data-domain-detail.component.html',\n  styleUrls: ['./data-domain-detail.component.css']\n})\nexport class DataDomainDetailComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZGVsL2RhdGEtZG9tYWluL2RhdGEtZG9tYWluLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\n  Under Construction!!!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-data-domain',\n  templateUrl: './data-domain.component.html',\n  styleUrls: ['./data-domain.component.css']\n})\nexport class DataDomainComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZGVsL2RhdGEtZWxlbWVudC9kYXRhLWVsZW1lbnQtZGV0YWlsL2RhdGEtZWxlbWVudC1kZXRhaWwuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\n  data-element-detail works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-data-element-detail',\n  templateUrl: './data-element-detail.component.html',\n  styleUrls: ['./data-element-detail.component.css']\n})\nexport class DataElementDetailComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZGVsL2RhdGEtZWxlbWVudC9kYXRhLWVsZW1lbnQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\n  Under Construction!!!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-data-element',\n  templateUrl: './data-element.component.html',\n  styleUrls: ['./data-element.component.css']\n})\nexport class DataElementComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".dk-table {\\n  display: block;\\n  overflow-x: auto;\\n  white-space: nowrap;\\n  border: none;\\n}\\n.dk-actions{\\n  width: 3rem;\\n  min-width: 3rem;\\n  max-width: 3rem;\\n}\\n.dk-description{\\n  width: 20rem;\\n  min-width: 20rem;\\n  max-width: 20rem;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kZWwvZW50aXR5LXR5cGUvZW50aXR5LXR5cGUtZGV0YWlsL2VudGl0eS10eXBlLWRldGFpbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsY0FBYztFQUNkLGdCQUFnQjtFQUNoQixtQkFBbUI7RUFDbkIsWUFBWTtBQUNkO0FBQ0E7RUFDRSxXQUFXO0VBQ1gsZUFBZTtFQUNmLGVBQWU7QUFDakI7QUFDQTtFQUNFLFlBQVk7RUFDWixnQkFBZ0I7RUFDaEIsZ0JBQWdCO0FBQ2xCIiwiZmlsZSI6InNyYy9hcHAvbW9kZWwvZW50aXR5LXR5cGUvZW50aXR5LXR5cGUtZGV0YWlsL2VudGl0eS10eXBlLWRldGFpbC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmRrLXRhYmxlIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG92ZXJmbG93LXg6IGF1dG87XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIGJvcmRlcjogbm9uZTtcbn1cbi5kay1hY3Rpb25ze1xuICB3aWR0aDogM3JlbTtcbiAgbWluLXdpZHRoOiAzcmVtO1xuICBtYXgtd2lkdGg6IDNyZW07XG59XG4uZGstZGVzY3JpcHRpb257XG4gIHdpZHRoOiAyMHJlbTtcbiAgbWluLXdpZHRoOiAyMHJlbTtcbiAgbWF4LXdpZHRoOiAyMHJlbTtcbn1cbiJdfQ== */\"","module.exports = \"<div class=\\\"btn-toolbar justify-content-end  mb-2\\\" role=\\\"toolbar\\\">\\n  <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n    <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Edit/Display\\\" (click)=\\\"switchEditDisplay()\\\">\\n      <span *ngIf=\\\"readonly\\\" class=\\\"fas fa-edit\\\"></span>\\n      <span *ngIf=\\\"!readonly\\\" class=\\\"fas fa-glasses\\\"></span>\\n    </button>\\n    <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Save\\\" (click)=\\\"save()\\\">\\n      <span class=\\\"fas fa-save\\\"></span>\\n    </button>\\n  </div>\\n</div>\\n\\n<dk-message></dk-message>\\n<form *ngIf=\\\"entityMeta\\\" [formGroup]=\\\"entityTypeForm\\\">\\n  <div class=\\\"form-group\\\" [class.dk-invalid]=\\\"entityTypeForm.get('ENTITY_ID').invalid && (entityTypeForm.touched || entityTypeForm.dirty)\\\">\\n    <label for=\\\"entity-type\\\" class=\\\"col-form-label form-control-sm\\\">Entity Type:\\n      <span class=\\\"dk-invalid-feedback\\\">\\n        {{entityTypeForm.get('ENTITY_ID').errors?.message}}\\n      </span>\\n    </label>\\n    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"entity-type\\\" [readonly]=\\\"readonly || !isNewMode\\\"\\n           name=\\\"entity-type\\\" formControlName=\\\"ENTITY_ID\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"entity-desc\\\" class=\\\"col-form-label form-control-sm\\\">Entity Description:</label>\\n    <textarea class=\\\"form-control\\\" id=\\\"entity-desc\\\" name=\\\"entity-desc\\\" rows=\\\"2\\\"\\n              formControlName=\\\"ENTITY_DESC\\\" [readonly]=\\\"readonly\\\" (change)=\\\"onChangeEntityDesc()\\\"></textarea>\\n  </div>\\n\\n  <app-attribute-meta [readonly]=\\\"readonly\\\" [parentForm]=\\\"entityTypeForm\\\" [attributes]=\\\"attributes\\\"\\n                      [relationID]=\\\"entityMeta.ENTITY_ID\\\" [isNewMode]=\\\"isNewMode\\\">\\n  </app-attribute-meta>\\n\\n  <div class=\\\"card mt-2\\\">\\n    <div class=\\\"card-header\\\"><span class=\\\"fas fa-user-check\\\"></span> Role</div>\\n    <div class=\\\"card-body\\\">\\n      <table class=\\\"table table-bordered table-sm dk-table\\\">\\n        <thead class=\\\"thead-light\\\">\\n          <tr>\\n            <th scope=\\\"col\\\">Action</th>\\n            <th scope=\\\"col\\\">Role</th>\\n            <th scope=\\\"col\\\">Description</th>\\n          </tr>\\n        </thead>\\n\\n        <tbody formArrayName=\\\"ROLES\\\">\\n        <tr *ngFor=\\\"let roleFormGroup of roleFormArray.controls; let i = index\\\">\\n          <td class=\\\"dk-actions\\\">\\n            <button class=\\\"btn btn-sm\\\" type=\\\"button\\\" [disabled]=\\\"readonly\\\" (click)=\\\"deleteRole(i)\\\" title=\\\"Delete\\\">\\n              <span class=\\\"far fa-trash-alt\\\"></span>\\n            </button>\\n          </td>\\n          <td [formGroup]=\\\"roleFormGroup\\\"\\n              [class.dk-invalid]=\\\"roleFormGroup.get('ROLE_ID').invalid && (roleFormGroup.touched || roleFormGroup.dirty)\\\">\\n            <div class=\\\"input-group\\\">\\n              <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" formControlName=\\\"ROLE_ID\\\"\\n                     [readonly]=\\\"readonly || oldRole(roleFormGroup) && roleFormGroup.valid\\\" (change)=\\\"onChangeRoleID(i)\\\">\\n              <div class=\\\"input-group-append\\\">\\n                <button class=\\\"btn btn-outline-secondary btn-light btn-sm\\\" type=\\\"button\\\" id=\\\"button-addon2\\\">\\n                  <span class=\\\"fas fa-search\\\"></span>\\n                </button>\\n              </div>\\n              <div class=\\\"invalid-tooltip\\\">\\n                {{roleFormGroup.get('ROLE_ID').errors?.message}}\\n              </div>\\n            </div>\\n          </td>\\n          <td [formGroup]=\\\"roleFormGroup\\\">\\n            <input type=\\\"text\\\" formControlName=\\\"ROLE_DESC\\\" readonly class=\\\"form-control form-control-sm dk-description\\\">\\n          </td>\\n        </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n</form>\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute, ParamMap, Router} from '@angular/router';\nimport {switchMap} from 'rxjs/operators';\nimport {EntityService} from '../../../entity.service';\nimport {Attribute, EntityMeta} from 'jor-angular';\nimport {AbstractControl, FormArray, FormBuilder, FormControl, FormGroup} from '@angular/forms';\nimport {Message, MessageService} from 'ui-message-angular';\nimport {msgStore} from '../../../msgStore';\nimport {forkJoin, Observable, of} from 'rxjs';\nimport {AttributeMetaComponent} from '../../attribute-meta/attribute-meta.component';\nimport {ModelService} from '../../model.service';\nimport {DialogService} from '../../../dialog.service';\nimport {UniqueEntityTypeValidator} from '../../model-validators';\n\n@Component({\n  selector: 'app-entity-type-detail',\n  templateUrl: './entity-type-detail.component.html',\n  styleUrls: ['./entity-type-detail.component.css']\n})\nexport class EntityTypeDetailComponent implements OnInit {\n  entityMeta: EntityMeta;\n  attributes: Attribute[];\n  readonly = true;\n  isNewMode = false;\n  entityTypeForm: FormGroup;\n  changedEntityType = {};\n  bypassProtection = false;\n\n  @ViewChild(AttributeMetaComponent)\n  private attrComponent: AttributeMetaComponent;\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private fb: FormBuilder,\n              private uniqueEntityTypeValidator: UniqueEntityTypeValidator,\n              private messageService: MessageService,\n              private modelService: ModelService,\n              private dialogService: DialogService,\n              private entityService: EntityService) {\n    this.messageService.setMessageStore(msgStore, 'EN');\n  }\n\n  get roleFormArray() {\n    return this.entityTypeForm.get('ROLES') as FormArray;\n  }\n\n  ngOnInit() {\n    this.route.paramMap.pipe(\n      switchMap((params: ParamMap) => {\n        const entityID = params.get('entityID');\n        if (entityID === 'new') {\n          const entityType = new EntityMeta();\n          entityType.ENTITY_ID = '';\n          entityType.ENTITY_DESC = '';\n          entityType.ROLES = [];\n          this.isNewMode = true;\n          this.readonly = false;\n          this.bypassProtection = false;\n          return forkJoin(of(entityType), of([]));\n        } else {\n          this.readonly = true;\n          this.isNewMode = false;\n          return forkJoin(\n            this.entityService.getEntityMeta(entityID),\n            this.entityService.getRelationMeta(entityID));\n        }\n      })\n    ).subscribe(data => {\n      if ( 'ENTITY_ID' in data[0]) {\n        this.messageService.clearMessages();\n        this.entityMeta = <EntityMeta>data[0];\n        this.attributes = 'RELATION_ID' in data[1] ? data[1]['ATTRIBUTES'] : [];\n        this._generateEntityTypeForm();\n      } else {\n        this.messageService.clearMessages();\n        this.entityMeta = null;\n        this.entityTypeForm = null;\n        if (data[0] instanceof Array) {\n          data[0].forEach(err => this.messageService.add(err));\n        } else {\n          this.messageService.report(<Message>data[0]);\n        }\n      }\n    });\n  }\n\n  _generateEntityTypeForm(): void {\n    this.entityTypeForm = this.fb.group({});\n    this.entityTypeForm.addControl('ENTITY_ID', new FormControl(this.entityMeta.ENTITY_ID, {updateOn: 'blur'}));\n    if (this.isNewMode) {\n      this.entityTypeForm.get('ENTITY_ID').setValidators(this._validateEntityId);\n      this.entityTypeForm.get('ENTITY_ID').setAsyncValidators(this.uniqueEntityTypeValidator.validate.bind(this.uniqueEntityTypeValidator));\n    }\n    this.entityTypeForm.addControl('ENTITY_DESC', new FormControl(this.entityMeta.ENTITY_DESC));\n\n    // Compose roles\n    const formArray = [];\n    this.entityMeta.ROLES.forEach( role => {\n      formArray.push(this.fb.group({\n        ROLE_ID: [role.ROLE_ID],\n        ROLE_DESC: [role.ROLE_DESC],\n      }));\n    });\n    if (this.isNewMode) {\n      formArray.push(\n        this.fb.group({\n          ROLE_ID: [''],\n          ROLE_DESC: ['']\n        }));\n    }\n    this.entityTypeForm.addControl('ROLES', new FormArray(formArray));\n  }\n\n  _validateEntityId(c: FormControl) {\n    if (c.value.trim() === '') {\n      return {message: 'Entity ID is mandatory'};\n    }\n\n    if (c.value.toString().toLowerCase() === 'new') {\n      return {message: '\"NEW/new\" is reserved, thus is not allowed to use!'};\n    }\n\n    if (c.value.toString().toLowerCase().substr(0, 2) === 'r_' ||\n        c.value.toString().toLowerCase().substr(0, 3) === 'rs_') {\n      return {message: 'Entity ID cannot be started with \"r_\" or \"rs_\"!'};\n    }\n    return null;\n  }\n\n  switchEditDisplay() {\n    if (this.isNewMode) {\n      this.dialogService.confirm('Discard the new Entity Type?').subscribe(confirm => {\n        if (confirm) {\n          this._switch2DisplayMode();\n          this.entityMeta = null;\n          this.modelService.sendDialogAnswer('OK');\n        } else {\n          this.modelService.sendDialogAnswer('CANCEL');\n        }\n      });\n      return;\n    }\n\n    if (!this.readonly) { // In Change Mode -> Display Mode\n      if (this.entityTypeForm.dirty) {\n        this.dialogService.confirm('Discard changes?').subscribe(confirm => {\n          if (confirm) { // Discard changes and switch to Display Mode\n            this._generateEntityTypeForm();\n            this.entityTypeForm.reset(this.entityTypeForm.value);\n            this._switch2DisplayMode();\n          }\n        });\n      } else { // Switch to display mode\n        this._switch2DisplayMode();\n      }\n    } else { // In Display Mode -> Change Mode\n      this.readonly = false;\n      this.attrComponent.switchEditDisplay(this.readonly);\n      this.roleFormArray.push(\n        this.fb.group({\n          ROLE_ID: [''],\n          ROLE_DESC: ['']\n        })\n      );\n    }\n  }\n\n  _switch2DisplayMode(): void {\n    this.readonly = true;\n    this.attrComponent.switchEditDisplay(this.readonly);\n    let lastIndex = this.roleFormArray.length - 1;\n    while (lastIndex >= 0 && this.roleFormArray.controls[lastIndex].get('ROLE_ID').value.trim() === '') {\n      this.roleFormArray.removeAt(lastIndex);\n      lastIndex--;\n    }\n  }\n\n  onChangeEntityID(): void {\n    this.modelService.updateEntityID(this.entityTypeForm.get('ENTITY_ID').value);\n  }\n\n  onChangeEntityDesc(): void {\n    this.modelService.updateEntityDesc(this.entityTypeForm.get('ENTITY_DESC').value);\n  }\n\n  deleteRole(index: number): void {\n    if (index !== this.roleFormArray.length - 1) {\n      this.roleFormArray.removeAt(index);\n      this.roleFormArray.markAsDirty();\n    }\n  }\n\n  onChangeRoleID(index: number): void {\n    const currentRoleFormGroup = this.roleFormArray.controls[index];\n    if (this.roleFormArray.controls.findIndex((roleCtrl, i) =>\n      i !== index && roleCtrl.get('ROLE_ID').value === currentRoleFormGroup.get('ROLE_ID').value\n    ) !== -1) {\n      currentRoleFormGroup.get('ROLE_ID').setErrors({message: 'Duplicate roles'});\n      return;\n    }\n\n    if (index === this.roleFormArray.length - 1 && currentRoleFormGroup.value.ROLE_ID.trim() !== '') {\n      // Only work for the last New line\n      this.roleFormArray.push(\n        this.fb.group({\n          ROLE_ID: [''],\n          ROLE_DESC: ['']\n        })\n      );\n    }\n\n    this.entityService.getRoleDesc(currentRoleFormGroup.value.ROLE_ID).subscribe(data => {\n      if (data['msgCat']) {\n        currentRoleFormGroup.get('ROLE_ID').setErrors({message: data['msgShortText']});\n      } else {\n        currentRoleFormGroup.get('ROLE_DESC').setValue(data);\n      }\n    });\n  }\n\n  oldRole(formGroup: AbstractControl): boolean {\n    return this.entityMeta.ROLES ?\n      this.entityMeta.ROLES.findIndex(\n        role => role.ROLE_ID === formGroup.get('ROLE_ID').value ) !== -1 :\n      false;\n  }\n\n  canDeactivate(): Observable<boolean> | boolean {\n    if (this.isNewMode || (!this.bypassProtection && this.entityTypeForm && this.entityTypeForm.dirty)) {\n      const dialogAnswer = this.dialogService.confirm('Discard changes?');\n      dialogAnswer.subscribe(confirm => {\n        if (confirm) {\n          this.modelService.sendDialogAnswer('OK');\n        } else {\n          this.modelService.sendDialogAnswer('CANCEL');\n        }\n      });\n      return dialogAnswer;\n    } else {\n      return true;\n    }\n  }\n\n  save(): void {\n    if (!this.entityTypeForm.dirty) {\n      return this.messageService.reportMessage('MODEL', 'NO_CHANGE', 'S');\n    }\n\n    if (!this.entityTypeForm.valid) {\n      return this.messageService.reportMessage('MODEL', 'INVALID_DATA', 'E');\n    }\n\n    if (this.isNewMode) {\n      this.changedEntityType['action'] = 'add';\n      this.changedEntityType['ENTITY_ID'] = this.entityTypeForm.controls['ENTITY_ID'].value;\n    } else {\n      this.changedEntityType['action'] = 'update';\n      this.changedEntityType['ENTITY_ID'] = this.entityMeta.ENTITY_ID;\n    }\n    if (this.entityTypeForm.controls['ENTITY_DESC'].dirty) {\n      this.changedEntityType['ENTITY_DESC'] = this.entityTypeForm.controls['ENTITY_DESC'].value;\n    }\n\n    this.changedEntityType['ATTRIBUTES'] = this.attrComponent.processChangedAttributes();\n    this._processChangedRoles();\n\n    this.entityService.saveEntityType(this.changedEntityType)\n      .subscribe(data => this._postActivityAfterSavingEntityType(data));\n  }\n\n  _processChangedRoles(): void {\n    const changedRoles = [];\n    if (this.roleFormArray.dirty) {\n      this.changedEntityType['ROLES'] = changedRoles;\n\n      // New Add Case\n      this.roleFormArray.controls.forEach(role => {\n        if (role.get('ROLE_ID').value.trim() === '') { return; }\n        if (role.dirty) {\n          const newAddedRole = { action: 'add', ROLE_ID: role.value.ROLE_ID };\n          changedRoles.push(newAddedRole);\n        }\n      });\n\n      // Deletion Case\n      this.entityMeta.ROLES.forEach(role => {\n        const index = this.roleFormArray.controls.findIndex(\n          roleControl => roleControl.get('ROLE_ID').value === role.ROLE_ID);\n        if (index === -1) { // The attribute must be deleted\n          const deletedRole = {action: 'delete', ROLE_ID: role.ROLE_ID};\n          changedRoles.push(deletedRole);\n        }\n      });\n    }\n  }\n\n  _postActivityAfterSavingEntityType(data: any) {\n    if (data[0] && data[0]['ENTITY_ID']) {\n      if (this.isNewMode) {\n        this.isNewMode = false;\n        this.bypassProtection = true;\n        this.router.navigate(['/model/entity-type/' + data[0]['ENTITY_ID']]);\n      } else {\n        this.readonly = true;\n        this.entityMeta = data[0];\n        this.attributes = data[1].ATTRIBUTES;\n        this.changedEntityType = {};\n        this._generateEntityTypeForm();\n        this.messageService.reportMessage('MODEL', 'ENTITY_TYPE_SAVED', 'S', this.entityMeta.ENTITY_ID);\n      }\n    } else {\n      if (data instanceof Array) {\n        data.forEach(err => this.messageService.add(err));\n      } else {\n        this.messageService.report(<Message>data);\n      }\n    }\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZGVsL2VudGl0eS10eXBlL2VudGl0eS10eXBlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-4\\\">\\n    <div class=\\\"btn-toolbar justify-content-between mb-2\\\" role=\\\"toolbar\\\">\\n      <div class=\\\"input-group\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\" #searchBox (keyup)=\\\"searchEntityType(searchBox.value)\\\" >\\n      </div>\\n      <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Add\\\" (click)=\\\"newEntityType()\\\">\\n        <span class=\\\"fas fa-plus\\\"></span>\\n      </button>\\n    </div>\\n    <div class=\\\"list-group\\\">\\n      <a *ngFor=\\\"let entityType of entityTypeList\\\" routerLink=\\\"/model/entity-type/{{entityType.ENTITY_ID}}\\\" routerLinkActive=\\\"active\\\"\\n        (click)=\\\"onSelect(entityType)\\\" class=\\\"list-group-item list-group-item-action flex-column align-items-start\\\">\\n        <div class=\\\"d-flex w-100 justify-content-between\\\">\\n          <h5 class=\\\"mb-1\\\">{{entityType.ENTITY_ID}}</h5>\\n          <small>version: {{entityType.VERSION_NO}}</small>\\n        </div>\\n        <p class=\\\"mb-1\\\">{{entityType.ENTITY_DESC}}</p>\\n        <!--<small>created by: {{entityType.CREATE_BY}} @{{entityType.CREATE_TIME}}</small> <br/>-->\\n        <small>last changed by: {{entityType.LAST_CHANGE_BY}} @{{entityType.LAST_CHANGE_TIME}}</small>\\n      </a>\\n    </div>\\n  </div>\\n  <div class=\\\"col-8\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {EntityService} from '../../entity.service';\nimport {EntityType} from 'jor-angular';\nimport { debounceTime, distinctUntilChanged, switchMap} from 'rxjs/operators';\nimport {Subject} from 'rxjs';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {ModelService} from '../model.service';\nimport {MessageService} from 'ui-message-angular';\nimport {msgStore} from '../../msgStore';\n\n@Component({\n  selector: 'app-entity-type',\n  templateUrl: './entity-type.component.html',\n  styleUrls: ['./entity-type.component.css']\n})\nexport class EntityTypeComponent implements OnInit {\n  entityTypeList: EntityType[];\n  private searchTerms = new Subject<string>();\n  private theSelectedEntityType: EntityType;\n\n  constructor(private entityService: EntityService,\n              private modelService: ModelService,\n              private messageService: MessageService,\n              private route: ActivatedRoute,\n              private router: Router) {\n    this.messageService.setMessageStore(msgStore, 'EN');\n  }\n\n  ngOnInit() {\n    this.searchTerms.pipe(\n      debounceTime(300),\n      distinctUntilChanged(),\n      switchMap((term: string) => this.entityService.listEntityType(term)),\n    ).subscribe(data => {\n      this.entityTypeList = data;\n      let entityID;\n      if (this.route.snapshot.firstChild) {\n        entityID = this.route.snapshot.firstChild.paramMap.get('entityID');\n      }\n      if (entityID ) {\n        if (entityID === 'new') {\n          this._newEntityType();\n        } else {\n          this.onSelect(this.entityTypeList.find(entityType => entityType.ENTITY_ID === entityID));\n        }\n      }\n    });\n    this.searchEntityType(''); // The initial list\n\n    this.modelService.theSelectedEntityType$.subscribe( data => {\n      if (this.theSelectedEntityType) {\n        this.theSelectedEntityType.ENTITY_ID = data.ENTITY_ID;\n        this.theSelectedEntityType.ENTITY_DESC = data.ENTITY_DESC;\n      }\n    });\n\n    this.modelService.dialogAnswer$.subscribe( answer => {\n      if (answer === 'OK' && !this.entityTypeList[0].CREATE_TIME) {\n        this.entityTypeList.splice(0, 1); // Remove the first one.\n      } else if (answer === 'CANCEL') {\n        const entityID = this.route.snapshot.firstChild.paramMap.get('entityID');\n        if (entityID) {\n          if (entityID === 'new') {\n            this.onSelect(this.entityTypeList[0]);\n          } else {\n            this.onSelect(this.entityTypeList.find(entityType => entityType.ENTITY_ID === entityID));\n          }\n        }\n      }\n    });\n  }\n\n  onSelect(entityType: EntityType): void {\n    if (entityType) {\n      this.theSelectedEntityType = entityType;\n      this.modelService.setSelectedEntityType(entityType);\n    }\n  }\n\n  searchEntityType(term: string): void {\n    this.searchTerms.next(term);\n  }\n\n  newEntityType(): void {\n    if (this.route.snapshot.firstChild && this.route.snapshot.firstChild.paramMap.get('entityID') === 'new') {\n      this.messageService.reportMessage('MODEL', 'UNSAVED_NEW', 'E');\n    } else {\n      this._newEntityType();\n      this.router.navigate(['/model/entity-type/new']);\n    }\n  }\n\n  _newEntityType(): void {\n    this.theSelectedEntityType = new EntityType();\n    this.theSelectedEntityType.ENTITY_ID = 'new';\n    this.theSelectedEntityType.ENTITY_DESC = 'description';\n    this.theSelectedEntityType.VERSION_NO = 1;\n    this.theSelectedEntityType.LAST_CHANGE_BY = 'DH001';\n    this.theSelectedEntityType.LAST_CHANGE_TIME = new Date().toDateString();\n    this.modelService.setSelectedEntityType(this.theSelectedEntityType);\n    this.entityTypeList.splice(0, 0, this.theSelectedEntityType);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {ModelComponent} from './model.component';\nimport {EntityTypeComponent} from './entity-type/entity-type.component';\nimport {EntityTypeDetailComponent} from './entity-type/entity-type-detail/entity-type-detail.component';\nimport {RelationComponent} from './relation/relation.component';\nimport {RelationDetailComponent} from './relation/relation-detail/relation-detail.component';\nimport {WorkProtectionGuard} from './work-protection.guard';\nimport {RelationshipComponent} from './relationship/relationship.component';\nimport {RelationshipDetailComponent} from './relationship/relationship-detail/relationship-detail.component';\nimport {RoleComponent} from './role/role.component';\nimport {RoleDetailComponent} from './role/role-detail/role-detail.component';\nimport {DataElementComponent} from './data-element/data-element.component';\nimport {DataDomainComponent} from './data-domain/data-domain.component';\nimport {DataDomainDetailComponent} from './data-domain/data-domain-detail/data-domain-detail.component';\nimport {DataElementDetailComponent} from './data-element/data-element-detail/data-element-detail.component';\n\nconst routes: Routes = [\n  { path: '',\n    component: ModelComponent,\n    children: [\n      { path: 'entity-type', component: EntityTypeComponent,\n        children: [{ path: ':entityID', canDeactivate: [WorkProtectionGuard], component: EntityTypeDetailComponent }] },\n      { path: 'role', component: RoleComponent,\n        children: [{ path: ':roleID', canDeactivate: [WorkProtectionGuard], component: RoleDetailComponent }] },\n      { path: 'relation', component: RelationComponent,\n        children: [{ path: ':relationID', canDeactivate: [WorkProtectionGuard], component: RelationDetailComponent }] },\n      { path: 'relationship', component: RelationshipComponent,\n        children: [{ path: ':relationshipID', canDeactivate: [WorkProtectionGuard], component: RelationshipDetailComponent }] },\n      { path: 'data-element', component: DataElementComponent,\n        children: [{ path: ':relationshipID', canDeactivate: [WorkProtectionGuard], component: DataElementDetailComponent }] },\n      { path: 'data-domain', component: DataDomainComponent,\n        children: [{ path: ':relationshipID', canDeactivate: [WorkProtectionGuard], component: DataDomainDetailComponent }] },\n      { path: '**', redirectTo: '/model/entity-type', pathMatch: 'full' },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [ RouterModule ]\n})\nexport class ModelRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport {AbstractControl, AsyncValidator, ValidationErrors} from '@angular/forms';\nimport {EntityService} from '../entity.service';\nimport {Observable, of} from 'rxjs';\nimport {catchError, map} from 'rxjs/operators';\nimport {ModelService} from './model.service';\n\n// noinspection JSAnnotator\n@Injectable({\n  providedIn: 'root'\n})\nexport class UniqueRoleValidator implements AsyncValidator {\n  constructor(private entityService: EntityService,\n              private modelService: ModelService) {}\n\n  validate(\n    ctrl: AbstractControl\n  ): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> {\n    return this.entityService.getRoleDesc(ctrl.value).pipe(\n      map(data => {\n        if (data['msgName'] && data['msgName'] === 'ROLE_NOT_EXIST') {\n          this.modelService.updateRoleID(ctrl.value);\n          return null;\n        } else {\n          return { message: '\"' + ctrl.value + '\" already exists' };\n        }\n      }),\n      catchError(() => null)\n    );\n  }\n}\n\n// noinspection JSAnnotator\n@Injectable({\n  providedIn: 'root'\n})\nexport class UniqueRelationValidator implements AsyncValidator {\n  constructor(private entityService: EntityService,\n              private modelService: ModelService) {}\n\n  validate(\n    ctrl: AbstractControl\n  ): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> {\n    if (ctrl.value === 'r_') { return of(null); }\n    return this.entityService.getRelationDesc(ctrl.value).pipe(\n      map(data => {\n        if (data['msgName'] && data['msgName'] === 'RELATION_NOT_EXIST') {\n          this.modelService.updateRelationID(ctrl.value);\n          return null;\n        } else {\n          return { message: '\"' + ctrl.value + '\" already exists' };\n        }\n      }),\n      catchError(() => null)\n    );\n  }\n}\n\n// noinspection JSAnnotator\n@Injectable({\n  providedIn: 'root'\n})\nexport class UniqueRelationshipValidator implements AsyncValidator {\n  constructor(private entityService: EntityService,\n              private modelService: ModelService) {}\n\n  validate(\n    ctrl: AbstractControl\n  ): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> {\n    if (ctrl.value === 'rs_') { return of(null); }\n    return this.entityService.getRelationshipDesc(ctrl.value).pipe(\n      map(data => {\n        if (data['msgName'] && data['msgName'] === 'RELATIONSHIP_NOT_EXIST') {\n          this.modelService.updateRelationshipID(ctrl.value);\n          return null;\n        } else {\n          return { message: '\"' + ctrl.value + '\" already exists' };\n        }\n      }),\n      catchError(() => null)\n    );\n  }\n}\n\n// noinspection JSAnnotator\n@Injectable({\n  providedIn: 'root'\n})\nexport class UniqueEntityTypeValidator implements AsyncValidator {\n  constructor(private entityService: EntityService,\n              private modelService: ModelService) {}\n\n  validate(\n    ctrl: AbstractControl\n  ): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> {\n    return this.entityService.getEntityTypeDesc(ctrl.value).pipe(\n      map(data => {\n        if (data['msgName'] && data['msgName'] === 'ENTITY_TYPE_NOT_EXIST') {\n          this.modelService.updateEntityID(ctrl.value);\n          return null;\n        } else {\n          return { message: '\"' + ctrl.value + '\" already exists' };\n        }\n      }),\n      catchError(() => null)\n    );\n  }\n}\n","module.exports = \".dk-model-content {\\n  margin-top: .5rem;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kZWwvbW9kZWwuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGlCQUFpQjtBQUNuQiIsImZpbGUiOiJzcmMvYXBwL21vZGVsL21vZGVsLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZGstbW9kZWwtY29udGVudCB7XG4gIG1hcmdpbi10b3A6IC41cmVtO1xufVxuIl19 */\"","module.exports = \"<ul class=\\\"nav nav-tabs mt-1\\\">\\n  <li class=\\\"nav-item active\\\">\\n    <a class=\\\"nav-link\\\" routerLink=\\\"/model/entity-type\\\" routerLinkActive=\\\"active\\\">Entity</a>\\n  </li>\\n  <li class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link\\\" routerLink=\\\"/model/role\\\" routerLinkActive=\\\"active\\\">Role</a>\\n  </li>\\n  <li class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link\\\" routerLink=\\\"/model/relation\\\" routerLinkActive=\\\"active\\\">Relation</a>\\n  </li>\\n  <li class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link\\\" routerLink=\\\"/model/relationship\\\" routerLinkActive=\\\"active\\\">Relationship</a>\\n  </li>\\n  <li class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link\\\" routerLink=\\\"/model/data-element\\\">Data Element</a>\\n  </li>\\n  <li class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link\\\" routerLink=\\\"/model/data-domain\\\">Data Domain</a>\\n  </li>\\n</ul>\\n\\n<div class=\\\"dk-model-content\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-model',\n  templateUrl: './model.component.html',\n  styleUrls: ['./model.component.css']\n})\nexport class ModelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ModelComponent } from './model.component';\nimport { ModelRoutingModule } from './model-routing.module';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport { EntityTypeComponent } from './entity-type/entity-type.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport { EntityTypeDetailComponent } from './entity-type/entity-type-detail/entity-type-detail.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { AttributeMetaComponent } from './attribute-meta/attribute-meta.component';\nimport {MessageModule} from 'ui-message-angular';\nimport { RelationComponent } from './relation/relation.component';\nimport {RelationDetailComponent} from './relation/relation-detail/relation-detail.component';\nimport { RelationshipComponent } from './relationship/relationship.component';\nimport { RelationshipDetailComponent } from './relationship/relationship-detail/relationship-detail.component';\nimport { RoleComponent } from './role/role.component';\nimport { RoleDetailComponent } from './role/role-detail/role-detail.component';\nimport { DataElementComponent } from './data-element/data-element.component';\nimport { DataDomainComponent } from './data-domain/data-domain.component';\nimport { DataDomainDetailComponent } from './data-domain/data-domain-detail/data-domain-detail.component';\nimport { DataElementDetailComponent } from './data-element/data-element-detail/data-element-detail.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ModelRoutingModule,\n    MessageModule,\n    NgbModule\n  ],\n  declarations: [\n    ModelComponent,\n    EntityTypeComponent,\n    EntityTypeDetailComponent,\n    AttributeMetaComponent,\n    RelationComponent,\n    RelationDetailComponent,\n    RelationshipComponent,\n    RelationshipDetailComponent,\n    RoleComponent,\n    RoleDetailComponent,\n    DataElementComponent,\n    DataElementDetailComponent,\n    DataDomainComponent,\n    DataDomainDetailComponent\n  ]\n})\nexport class ModelModule { }\n","import { Injectable } from '@angular/core';\nimport {EntityType, Relation, RelationshipH, RoleH} from 'jor-angular';\nimport {Subject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModelService {\n  private dialogAnswer = new Subject<string>();\n  dialogAnswer$ = this.dialogAnswer.asObservable();\n\n  private theSelectedEntityType: EntityType;\n  private selectedEntityTypeSource = new Subject<EntityType>();\n  theSelectedEntityType$ = this.selectedEntityTypeSource.asObservable();\n\n  private theSelectedRelation: Relation;\n  private selectedRelationSource = new Subject<Relation>();\n  theSelectedRelation$ = this.selectedRelationSource.asObservable();\n\n  private theSelectedRelationship: RelationshipH;\n  private selectedRelationshipSource = new Subject<RelationshipH>();\n  theSelectedRelationship$ = this.selectedRelationshipSource.asObservable();\n\n  private theSelectedRole: RoleH;\n  private selectedRoleSource = new Subject<RoleH>();\n  theSelectedRole$ = this.selectedRoleSource.asObservable();\n\n  updateEntityID(entityID: string) {\n    this.theSelectedEntityType.ENTITY_ID = entityID;\n    this.selectedEntityTypeSource.next(this.theSelectedEntityType);\n  }\n\n  updateEntityDesc(entityDesc: string) {\n    this.theSelectedEntityType.ENTITY_DESC = entityDesc;\n    this.selectedEntityTypeSource.next(this.theSelectedEntityType);\n  }\n\n  setSelectedEntityType(entityType: EntityType): void {\n    this.theSelectedEntityType = entityType;\n  }\n\n  updateRelationID(relationID: string) {\n    this.theSelectedRelation.RELATION_ID = relationID;\n    this.selectedRelationSource.next(this.theSelectedRelation);\n  }\n\n  updateRelationDesc(relationDesc: string) {\n    this.theSelectedRelation.RELATION_DESC = relationDesc;\n    this.selectedRelationSource.next(this.theSelectedRelation);\n  }\n\n  setSelectedRelation(relation: Relation): void {\n    this.theSelectedRelation = relation;\n  }\n\n  updateRelationshipID(relationshipID: string) {\n    this.theSelectedRelationship.RELATIONSHIP_ID = relationshipID;\n    this.selectedRelationshipSource.next(this.theSelectedRelationship);\n  }\n\n  updateRelationshipDesc(relationshipDesc: string) {\n    this.theSelectedRelationship.RELATIONSHIP_DESC = relationshipDesc;\n    this.selectedRelationshipSource.next(this.theSelectedRelationship);\n  }\n\n  setSelectedRelationship(relationship: RelationshipH): void {\n    this.theSelectedRelationship = relationship;\n  }\n\n  updateRoleID(roleID: string) {\n    this.theSelectedRole.ROLE_ID = roleID;\n    this.selectedRoleSource.next(this.theSelectedRole);\n  }\n\n  updateRoleDesc(roleDesc: string) {\n    this.theSelectedRole.ROLE_DESC = roleDesc;\n    this.selectedRoleSource.next(this.theSelectedRole);\n  }\n\n  setSelectedRole(role: RoleH): void {\n    this.theSelectedRole = role;\n  }\n\n  sendDialogAnswer(answer: string): void {\n    this.dialogAnswer.next(answer);\n  }\n}\n","module.exports = \".dk-actions{\\n  width: 5rem;\\n  min-width: 5rem;\\n  max-width: 5rem;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kZWwvcmVsYXRpb24vcmVsYXRpb24tZGV0YWlsL3JlbGF0aW9uLWRldGFpbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVztFQUNYLGVBQWU7RUFDZixlQUFlO0FBQ2pCIiwiZmlsZSI6InNyYy9hcHAvbW9kZWwvcmVsYXRpb24vcmVsYXRpb24tZGV0YWlsL3JlbGF0aW9uLWRldGFpbC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmRrLWFjdGlvbnN7XG4gIHdpZHRoOiA1cmVtO1xuICBtaW4td2lkdGg6IDVyZW07XG4gIG1heC13aWR0aDogNXJlbTtcbn1cbiJdfQ== */\"","module.exports = \"<div class=\\\"btn-toolbar justify-content-end  mb-2\\\" role=\\\"toolbar\\\">\\n  <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n    <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Edit/Display\\\" (click)=\\\"switchEditDisplay()\\\">\\n      <span *ngIf=\\\"readonly\\\" class=\\\"fas fa-edit\\\"></span>\\n      <span *ngIf=\\\"!readonly\\\" class=\\\"fas fa-glasses\\\"></span>\\n    </button>\\n    <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Save\\\" (click)=\\\"save()\\\">\\n      <span class=\\\"fas fa-save\\\"></span>\\n    </button>\\n  </div>\\n</div>\\n\\n<dk-message></dk-message>\\n<form *ngIf=\\\"relationMeta\\\" [formGroup]=\\\"relationForm\\\">\\n  <div class=\\\"form-group\\\" [class.dk-invalid]=\\\"relationForm.get('RELATION_ID').invalid && (relationForm.touched || relationForm.dirty)\\\">\\n    <label for=\\\"relation\\\" class=\\\"col-form-label form-control-sm\\\">Relation:\\n      <span class=\\\"dk-invalid-feedback\\\">\\n        {{relationForm.get('RELATION_ID').errors?.message}}\\n      </span>\\n    </label>\\n    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"relation\\\" [readonly]=\\\"readonly || !isNewMode\\\"\\n          name=\\\"relation\\\" formControlName=\\\"RELATION_ID\\\" >\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"relation-desc\\\" class=\\\"col-form-label form-control-sm\\\">Relation Description:</label>\\n    <textarea class=\\\"form-control\\\" id=\\\"relation-desc\\\" name=\\\"relation-desc\\\" rows=\\\"2\\\"\\n              (change)=\\\"onChangeRelationDesc()\\\" formControlName=\\\"RELATION_DESC\\\" [readonly]=\\\"readonly\\\"></textarea>\\n  </div>\\n\\n  <app-attribute-meta [readonly]=\\\"readonly\\\" [parentForm]=\\\"relationForm\\\" [attributes]=\\\"relationMeta.ATTRIBUTES\\\"\\n                      [relationID]=\\\"relationMeta.RELATION_ID\\\" [isNewMode]=\\\"isNewMode\\\">\\n  </app-attribute-meta>\\n\\n  <div class=\\\"card mt-2\\\">\\n    <div class=\\\"card-header\\\"><span class=\\\"fas fa-atlas\\\"></span> Association</div>\\n    <div class=\\\"card-body\\\">\\n      <table class=\\\"table table-bordered table-sm dk-table\\\">\\n        <thead class=\\\"thead-light\\\">\\n        <tr>\\n          <th scope=\\\"col\\\">Action</th>\\n          <th scope=\\\"col\\\">Right Relation</th>\\n          <th scope=\\\"col\\\">Cardinality</th>\\n          <th scope=\\\"col\\\" title=\\\"Foreign Key Check\\\">FC</th>\\n        </tr>\\n        </thead>\\n\\n        <tbody formArrayName=\\\"ASSOCIATIONS\\\">\\n        <tr *ngFor=\\\"let associationFormGroup of associationFormArray.controls; let i = index\\\">\\n          <td class=\\\"dk-actions\\\">\\n            <button class=\\\"btn btn-sm\\\" type=\\\"button\\\" [disabled]=\\\"readonly\\\" (click)=\\\"deleteAssociation(i)\\\" title=\\\"Delete\\\">\\n              <span class=\\\"far fa-trash-alt\\\"></span>\\n            </button>\\n            <button class=\\\"btn btn-sm\\\" type=\\\"button\\\" (click)=\\\"openFieldMapModal(i)\\\" title=\\\"Fields Mapping\\\">\\n              <span class=\\\"fas fa-map-signs\\\"></span>\\n            </button>\\n          </td>\\n          <td [formGroup]=\\\"associationFormGroup\\\"\\n              [class.dk-invalid]=\\\"associationFormGroup.get('RIGHT_RELATION_ID').invalid && (associationFormGroup.touched || associationFormGroup.dirty)\\\">\\n            <div class=\\\"input-group\\\">\\n              <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" formControlName=\\\"RIGHT_RELATION_ID\\\"\\n                     [readonly]=\\\"readonly || oldRightRelation(associationFormGroup) && associationFormGroup.valid\\\" (change)=\\\"onChangeRightRelationID(i)\\\">\\n              <div class=\\\"input-group-append\\\">\\n                <button class=\\\"btn btn-outline-secondary btn-light btn-sm\\\" type=\\\"button\\\" id=\\\"button-addon2\\\">\\n                  <span class=\\\"fas fa-search\\\"></span>\\n                </button>\\n              </div>\\n              <div class=\\\"invalid-tooltip\\\">\\n                {{associationFormGroup.get('RIGHT_RELATION_ID').errors?.message}}\\n              </div>\\n            </div>\\n          </td>\\n          <td [formGroup]=\\\"associationFormGroup\\\">\\n            <select class=\\\"form-control form-control-sm\\\" formControlName=\\\"CARDINALITY\\\">\\n              <option>[0..1]</option>\\n              <option>[1..1]</option>\\n              <option>[0..n]</option>\\n              <option>[1..n]</option>\\n            </select>\\n          </td>\\n          <td [formGroup]=\\\"associationFormGroup\\\">\\n            <input type=\\\"checkbox\\\" formControlName=\\\"FOREIGN_KEY_CHECK\\\">\\n          </td>\\n        </tr>\\n\\n        <div *ngIf=\\\"currentAssociationForm\\\" class=\\\"modal fade dk-modal-open\\\" [ngClass]=\\\"{'show': isFieldMapShown}\\\"\\n             [ngStyle]=\\\"{'display': displayFieldMapModal}\\\" id=\\\"detailModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\">\\n          <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n            <div class=\\\"modal-content\\\">\\n              <div class=\\\"modal-header\\\">\\n                <h5 class=\\\"modal-title\\\" id=\\\"detail\\\">Fields Mapping</h5>\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"closeFieldMapModal()\\\">\\n                  <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n              </div>\\n              <div class=\\\"modal-body\\\">\\n                <table class=\\\"table table-bordered table-sm dk-table\\\" [formGroup]=\\\"currentAssociationForm\\\">\\n                  <thead class=\\\"thead-light\\\">\\n                  <tr>\\n                    <th scope=\\\"col\\\">Action</th>\\n                    <th scope=\\\"col\\\">Left Table Field</th>\\n                    <th scope=\\\"col\\\">Right Table Field</th>\\n                  </tr>\\n                  </thead>\\n\\n                  <tbody formArrayName=\\\"FIELDS_MAPPING\\\">\\n                    <tr *ngFor=\\\"let fieldMapFormGroup of fieldMapFormArray.controls; let i = index\\\">\\n                      <td class=\\\"dk-actions\\\">\\n                        <button class=\\\"btn btn-sm\\\" type=\\\"button\\\" [disabled]=\\\"readonly\\\" (click)=\\\"deleteFieldMap(i)\\\" title=\\\"Delete\\\">\\n                          <span class=\\\"far fa-trash-alt\\\"></span>\\n                        </button>\\n                      </td>\\n                      <td [formGroup]=\\\"fieldMapFormGroup\\\"\\n                          [class.dk-invalid]=\\\"fieldMapFormGroup.get('LEFT_FIELD').invalid && (fieldMapFormGroup.touched || fieldMapFormGroup.dirty)\\\">\\n                        <div class=\\\"input-group\\\">\\n                          <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" formControlName=\\\"LEFT_FIELD\\\"\\n                                 [readonly]=\\\"readonly || oldFieldMap(fieldMapFormGroup) && fieldMapFormGroup.valid\\\" (change)=\\\"onChangeLeftField(i)\\\">\\n                          <div class=\\\"invalid-tooltip\\\">\\n                            {{fieldMapFormGroup.get('LEFT_FIELD').errors?.message}}\\n                          </div>\\n                        </div>\\n                      </td>\\n                      <td [formGroup]=\\\"fieldMapFormGroup\\\"\\n                          [class.dk-invalid]=\\\"fieldMapFormGroup.get('RIGHT_FIELD').invalid && (fieldMapFormGroup.touched || fieldMapFormGroup.dirty)\\\">\\n                        <div class=\\\"input-group\\\">\\n                          <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" formControlName=\\\"RIGHT_FIELD\\\"\\n                                 [readonly]=\\\"readonly || oldFieldMap(fieldMapFormGroup) && fieldMapFormGroup.valid\\\" (change)=\\\"onChangeRightField(i)\\\">\\n                          <div class=\\\"invalid-tooltip\\\">\\n                            {{fieldMapFormGroup.get('RIGHT_FIELD').errors?.message}}\\n                          </div>\\n                        </div>\\n                      </td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n              </div>\\n              <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary\\\" (click)=\\\"closeFieldMapModal()\\\">OK</button>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n</form>\\n\\n\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {Association, RelationMeta} from 'jor-angular';\nimport {AbstractControl, FormArray, FormBuilder, FormControl, FormGroup} from '@angular/forms';\nimport {ActivatedRoute, ParamMap, Router} from '@angular/router';\nimport {Message, MessageService} from 'ui-message-angular';\nimport {EntityService} from '../../../entity.service';\nimport {msgStore} from '../../../msgStore';\nimport {switchMap} from 'rxjs/operators';\nimport {Observable, of} from 'rxjs';\nimport {AttributeMetaComponent} from '../../attribute-meta/attribute-meta.component';\nimport {ModelService} from '../../model.service';\nimport {DialogService} from '../../../dialog.service';\nimport {UniqueRelationValidator} from '../../model-validators';\n\n@Component({\n  selector: 'app-relation-detail',\n  templateUrl: './relation-detail.component.html',\n  styleUrls: ['./relation-detail.component.css']\n})\nexport class RelationDetailComponent implements OnInit {\n  relationMeta: RelationMeta;\n  readonly = true;\n  isNewMode = false;\n  isFieldMapShown = false;\n  relationForm: FormGroup;\n  currentAssociationForm: AbstractControl;\n  currentAssociation: Association;\n  currentRightRelationMeta: RelationMeta;\n  changedRelation = {};\n  bypassProtection = false;\n\n  @ViewChild(AttributeMetaComponent)\n  private attrComponent: AttributeMetaComponent;\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private fb: FormBuilder,\n              private uniqueRelationValidator: UniqueRelationValidator,\n              private messageService: MessageService,\n              private modelService: ModelService,\n              private dialogService: DialogService,\n              private entityService: EntityService) {\n    this.messageService.setMessageStore(msgStore, 'EN');\n  }\n\n  get associationFormArray() {\n    return this.relationForm.get('ASSOCIATIONS') as FormArray;\n  }\n  get fieldMapFormArray() {\n    if (this.currentAssociationForm) {\n      return this.currentAssociationForm.get('FIELDS_MAPPING') as FormArray;\n    } else {\n      return null;\n    }\n  }\n  get displayFieldMapModal() {\n    return this.isFieldMapShown ? 'block' : 'none';\n  }\n\n  ngOnInit() {\n    this.route.paramMap.pipe(\n      switchMap((params: ParamMap) => {\n        const relationID = params.get('relationID');\n        if (relationID === 'new') {\n          const relation = new RelationMeta();\n          relation.RELATION_ID = 'r_';\n          relation.RELATION_DESC = '';\n          relation.ATTRIBUTES = [];\n          this.isNewMode = true;\n          this.readonly = false;\n          this.bypassProtection = false;\n          return of(relation);\n        } else {\n          this.readonly = true;\n          this.isNewMode = false;\n          return this.entityService.getRelationMeta(params.get('relationID'));\n        }\n      })\n    ).subscribe(data => {\n      if ( 'RELATION_ID' in data) { // If the return data is a message\n        this.messageService.clearMessages();\n        this.relationMeta = <RelationMeta>data;\n        this._generateRelationForm();\n      } else {\n        this.messageService.clearMessages();\n        this.relationMeta = null;\n        this.relationForm = null;\n        if (data instanceof Array) {\n          data.forEach(err => this.messageService.add(err));\n        } else {\n          this.messageService.report(<Message>data);\n        }\n      }\n    });\n  }\n\n  _generateRelationForm(): void {\n    this.relationForm = this.fb.group({});\n    this.relationForm.addControl('RELATION_ID', new FormControl(this.relationMeta.RELATION_ID, {updateOn: 'blur'}));\n    if (this.isNewMode) {\n      this.relationForm.get('RELATION_ID').setValidators(this._validateRelationId);\n      this.relationForm.get('RELATION_ID').setAsyncValidators(this.uniqueRelationValidator.validate.bind(this.uniqueRelationValidator));\n    }\n    this.relationForm.addControl('RELATION_DESC', new FormControl(this.relationMeta.RELATION_DESC));\n\n    // Compose Associations\n    const formArray = [];\n    if (this.relationMeta.ASSOCIATIONS) {\n      this.relationMeta.ASSOCIATIONS.forEach( association => {\n        const fieldsMapArray = [];\n        association.FIELDS_MAPPING.forEach( fieldsMap => {\n          fieldsMapArray.push(this.fb.group({\n            LEFT_FIELD: [fieldsMap.LEFT_FIELD],\n            RIGHT_FIELD: [fieldsMap.RIGHT_FIELD]\n          }));\n        });\n        formArray.push(this.fb.group({\n          RIGHT_RELATION_ID: [association.RIGHT_RELATION_ID],\n          CARDINALITY: [{value: association.CARDINALITY, disabled: this.readonly}],\n          FOREIGN_KEY_CHECK: [{value: association.FOREIGN_KEY_CHECK, disabled: this.readonly}],\n          FIELDS_MAPPING: this.fb.array(fieldsMapArray)\n        }));\n      });\n    }\n\n    if (this.isNewMode) {\n      formArray.push(\n        this.fb.group({\n          RIGHT_RELATION_ID: [''],\n          CARDINALITY: ['[0..1]'],\n          FOREIGN_KEY_CHECK: [0],\n          FIELDS_MAPPING: this.fb.array([\n            this.fb.group({\n              LEFT_FIELD: [''],\n              RIGHT_FIELD: ['']\n            })])\n        }));\n    }\n    this.relationForm.addControl('ASSOCIATIONS', new FormArray(formArray));\n  }\n\n  _validateRelationId(c: FormControl) {\n    if (c.value.trim() === '') {\n      return {message: 'Relation ID is mandatory'};\n    }\n\n    if (c.value.toString().toLowerCase() === 'new') {\n      return {message: '\"NEW/new\" is reserved, thus is not allowed to use!'};\n    }\n\n    if (c.value.toString().toLowerCase().substr(0, 2) !== 'r_') {\n      return {message: 'Relation name must be started with \"r_\"!'};\n    }\n\n    if (c.value.toString().length < 3) {\n      return {message: 'Relation name must have length larger than 2!'};\n    }\n\n    return null;\n  }\n\n  switchEditDisplay() {\n    if (this.isNewMode) {\n      this.dialogService.confirm('Discard the new Entity Type?').subscribe(confirm => {\n        if (confirm) {\n          this._switch2DisplayMode();\n          this.relationMeta = null;\n          this.modelService.sendDialogAnswer('OK');\n        } else {\n          this.modelService.sendDialogAnswer('CANCEL');\n        }\n      });\n      return;\n    }\n\n    if (!this.readonly) { // In Change Mode -> Display Mode\n      if (this.relationForm.dirty) {\n        this.dialogService.confirm('Discard changes?').subscribe(confirm => {\n          if (confirm) { // Discard changes and switch to Display Mode\n            this._generateRelationForm();\n            this.relationForm.reset(this.relationForm.value);\n            this._switch2DisplayMode();\n          }\n        });\n      } else { // Switch to display mode\n        this._switch2DisplayMode();\n      }\n    } else { // In Display Mode -> Change Mode\n      this.readonly = false;\n      this.associationFormArray.controls.forEach(associationFormGroup => {\n        associationFormGroup.get('CARDINALITY').enable();\n        associationFormGroup.get('FOREIGN_KEY_CHECK').enable();\n      });\n      this.associationFormArray.push(\n        this.fb.group({\n          RIGHT_RELATION_ID: [''],\n          CARDINALITY: ['[0..1]'],\n          FOREIGN_KEY_CHECK: [0],\n          FIELDS_MAPPING: this.fb.array([])\n        }));\n      this.attrComponent.switchEditDisplay(this.readonly);\n    }\n  }\n\n  _switch2DisplayMode(): void {\n    this.readonly = true;\n    let lastIndex = this.associationFormArray.length - 1;\n    while (lastIndex >= 0 && this.associationFormArray.controls[lastIndex].get('RIGHT_RELATION_ID').value.trim() === '') {\n      this.associationFormArray.removeAt(lastIndex);\n      lastIndex--;\n    }\n    this.associationFormArray.controls.forEach(associationFormGroup => {\n      associationFormGroup.get('CARDINALITY').disable();\n      associationFormGroup.get('FOREIGN_KEY_CHECK').disable();\n    });\n    this.attrComponent.switchEditDisplay(this.readonly);\n  }\n\n  onChangeRelationID(): void {\n    this.modelService.updateRelationID(this.relationForm.get('RELATION_ID').value);\n  }\n\n  onChangeRelationDesc(): void {\n    this.modelService.updateRelationDesc(this.relationForm.get('RELATION_DESC').value);\n  }\n\n  deleteAssociation(index: number): void {\n    if (index !== this.associationFormArray.length - 1) {\n      this.associationFormArray.removeAt(index);\n      this.associationFormArray.markAsDirty();\n    }\n  }\n\n  openFieldMapModal(index: number): void {\n    this.currentAssociationForm = this.associationFormArray.controls[index];\n    if (this.currentAssociationForm.get('RIGHT_RELATION_ID').value.trim() === '') {\n      return;\n    }\n\n    this.entityService.getRelationMeta(this.currentAssociationForm.get('RIGHT_RELATION_ID').value)\n      .subscribe( data => {\n        this.currentRightRelationMeta = <RelationMeta>data;\n      });\n\n    if (this.readonly === false) {\n      this.fieldMapFormArray.push(this.fb.group({LEFT_FIELD: [''], RIGHT_FIELD: ['']}));\n    }\n    this.currentAssociation = this.relationMeta.ASSOCIATIONS ? this.relationMeta.ASSOCIATIONS[index] : null;\n    this.isFieldMapShown = true;\n  }\n\n  closeFieldMapModal(): void {\n    // this.currentAssociationForm.setValue(this.currentAssociationForm.value); // Or the value won't be updated.\n    let lastIndex = this.fieldMapFormArray.length - 1;\n    while (lastIndex >= 0 && this.fieldMapFormArray.controls[lastIndex].get('RIGHT_FIELD').value.trim() === '') {\n      this.fieldMapFormArray.removeAt(lastIndex);\n      lastIndex--;\n    }\n    this.isFieldMapShown = false;\n  }\n\n  deleteFieldMap(index: number): void {\n    if (index !== this.fieldMapFormArray.length - 1) {\n      this.fieldMapFormArray.removeAt(index);\n      this.fieldMapFormArray.markAsDirty();\n    }\n  }\n\n  onChangeRightRelationID(index: number): void {\n    const currentAssocFormGroup = this.associationFormArray.controls[index];\n\n    if (currentAssocFormGroup.get('RIGHT_RELATION_ID').value === this.relationMeta.RELATION_ID) {\n      currentAssocFormGroup.get('RIGHT_RELATION_ID').setErrors({message: 'Self association is not allowed'});\n      return;\n    }\n\n    if (this.associationFormArray.controls.findIndex((assocCtrl, i) =>\n      i !== index && assocCtrl.get('RIGHT_RELATION_ID').value === currentAssocFormGroup.get('RIGHT_RELATION_ID').value\n    ) !== -1) {\n      currentAssocFormGroup.get('RIGHT_RELATION_ID').setErrors({message: 'Duplicate associated relation'});\n      return;\n    }\n\n    if (index === this.associationFormArray.length - 1 && currentAssocFormGroup.value.RIGHT_RELATION_ID.trim() !== '') {\n      // Only work for the last New line\n      this.associationFormArray.push(\n        this.fb.group({\n          RIGHT_RELATION_ID: [''],\n          CARDINALITY: ['[0..1]'],\n          FOREIGN_KEY_CHECK: [0],\n          FIELDS_MAPPING: this.fb.array([])\n        })\n      );\n    }\n\n    this.entityService.getRelationDesc(currentAssocFormGroup.value.RIGHT_RELATION_ID)\n      .subscribe(data => {\n        if (data['msgCat']) {\n          currentAssocFormGroup.get('RIGHT_RELATION_ID').setErrors({message: data['msgShortText']});\n        }\n    });\n  }\n\n  onChangeLeftField(index: number): void {\n    const currentFieldMapFormGroup = this.fieldMapFormArray.controls[index];\n    if (this.relationMeta.ATTRIBUTES.findIndex( attribute =>\n        attribute.ATTR_NAME === currentFieldMapFormGroup.get('LEFT_FIELD').value) === -1) {\n      currentFieldMapFormGroup.get('LEFT_FIELD').setErrors({message: 'Field Not Exist'});\n      return;\n    }\n\n    if (this.fieldMapFormArray.controls.findIndex((fieldMapCtrl, i) =>\n      i !== index && fieldMapCtrl.get('LEFT_FIELD') && fieldMapCtrl.get('RIGHT_FIELD') &&\n      fieldMapCtrl.get('LEFT_FIELD').value === currentFieldMapFormGroup.get('LEFT_FIELD').value &&\n      fieldMapCtrl.get('RIGHT_FIELD').value === currentFieldMapFormGroup.get('RIGHT_FIELD').value\n    ) !== -1) {\n      currentFieldMapFormGroup.get('LEFT_FIELD').setErrors({message: 'Duplicate Fields Mapping'});\n      return;\n    }\n\n    if (index === this.fieldMapFormArray.length - 1 && currentFieldMapFormGroup.value.LEFT_FIELD.trim() !== '') {\n      this.fieldMapFormArray.push(\n        this.fb.group( {LEFT_FIELD: [''], RIGHT_FIELD: ['']})\n      );\n    }\n  }\n\n  onChangeRightField(index: number): void {\n    const currentFieldMapFormGroup = this.fieldMapFormArray.controls[index];\n    if (this.currentRightRelationMeta &&\n        this.currentRightRelationMeta.ATTRIBUTES.findIndex( attribute =>\n          attribute.ATTR_NAME === currentFieldMapFormGroup.get('RIGHT_FIELD').value) === -1) {\n      currentFieldMapFormGroup.get('RIGHT_FIELD').setErrors({message: 'Field Not Exist'});\n      return;\n    }\n\n    if (this.fieldMapFormArray.controls.findIndex((fieldMapCtrl, i) =>\n      i !== index && fieldMapCtrl.get('LEFT_FIELD') && fieldMapCtrl.get('RIGHT_FIELD') &&\n      fieldMapCtrl.get('LEFT_FIELD').value === currentFieldMapFormGroup.get('LEFT_FIELD').value &&\n      fieldMapCtrl.get('RIGHT_FIELD').value === currentFieldMapFormGroup.get('RIGHT_FIELD').value\n    ) !== -1) {\n      currentFieldMapFormGroup.get('RIGHT_FIELD').setErrors({message: 'Duplicate Fields Mapping'});\n      return;\n    }\n\n    if (index === this.fieldMapFormArray.length - 1 && currentFieldMapFormGroup.value.RIGHT_FIELD.trim() !== '') {\n      this.fieldMapFormArray.push(\n        this.fb.group( {LEFT_FIELD: [''], RIGHT_FIELD: ['']})\n      );\n    }\n  }\n\n  oldRightRelation(formGroup: AbstractControl): boolean {\n    return this.relationMeta.ASSOCIATIONS ?\n      this.relationMeta.ASSOCIATIONS.findIndex(\n      association => association.RIGHT_RELATION_ID === formGroup.get('RIGHT_RELATION_ID').value ) !== -1 :\n      false;\n  }\n\n  oldFieldMap(formGroup: AbstractControl): boolean {\n    return this.currentAssociation ?\n      this.currentAssociation.FIELDS_MAPPING.findIndex(\n      fieldMap => fieldMap.LEFT_FIELD === formGroup.get('LEFT_FIELD').value &&\n                            fieldMap.RIGHT_FIELD === formGroup.get('RIGHT_FIELD').value ) !== -1 :\n      false;\n  }\n\n  canDeactivate(): Observable<boolean> | boolean {\n    if (this.isNewMode || (!this.bypassProtection && this.relationForm && this.relationForm.dirty)) {\n      const dialogAnswer = this.dialogService.confirm('Discard changes?');\n      dialogAnswer.subscribe(confirm => {\n        if (confirm) {\n          this.modelService.sendDialogAnswer('OK');\n        } else {\n          this.modelService.sendDialogAnswer('CANCEL');\n        }\n      });\n      return dialogAnswer;\n    } else {\n      return true;\n    }\n  }\n\n  save(): void {\n    if (!this.relationForm.dirty) {\n      return this.messageService.reportMessage('MODEL', 'NO_CHANGE', 'S');\n    }\n\n    if (!this.relationForm.valid) {\n      return this.messageService.reportMessage('MODEL', 'INVALID_DATA', 'E');\n    }\n\n    if (this.isNewMode) {\n      this.changedRelation['action'] = 'add';\n      this.changedRelation['RELATION_ID'] = this.relationForm.controls['RELATION_ID'].value;\n    } else {\n      this.changedRelation['action'] = 'update';\n      this.changedRelation['RELATION_ID'] = this.relationMeta.RELATION_ID;\n    }\n    if (this.relationForm.controls['RELATION_DESC'].dirty) {\n      this.changedRelation['RELATION_DESC'] = this.relationForm.controls['RELATION_DESC'].value;\n    }\n\n    this.changedRelation['ATTRIBUTES'] = this.attrComponent.processChangedAttributes();\n    this._processChangedAssociation();\n\n    this.entityService.saveRelation(this.changedRelation)\n      .subscribe(data => this._postActivityAfterSavingRelation(data));\n  }\n\n  _processChangedAssociation(): void {\n    const changedAssociations = [];\n    if (!this.associationFormArray.dirty) { return; }\n\n    this.changedRelation['ASSOCIATIONS'] = changedAssociations;\n\n    this.associationFormArray.controls.forEach(associationControl => {\n      if (associationControl.get('RIGHT_RELATION_ID').value.trim() === '') { return; }\n      const changedAssociation = {};\n      const associationMeta = this.relationMeta.ASSOCIATIONS.find(\n        association => associationControl.get('RIGHT_RELATION_ID').value === association.RIGHT_RELATION_ID);\n      if (!associationMeta) {// New Add Case\n        changedAssociation['action'] = 'add';\n        changedAssociation['RIGHT_RELATION_ID'] = associationControl.get('RIGHT_RELATION_ID').value;\n        changedAssociation['CARDINALITY'] = associationControl.get('CARDINALITY').value;\n        changedAssociation['FOREIGN_KEY_CHECK'] = associationControl.get('FOREIGN_KEY_CHECK').value;\n        changedAssociation['FIELDS_MAPPING'] = [];\n        const fieldMapArray = associationControl.get('FIELDS_MAPPING') as FormArray;\n        fieldMapArray.controls.forEach(fieldMap => {\n          changedAssociation['FIELDS_MAPPING'].push(\n            {action: 'add', RIGHT_FIELD: fieldMap.get('RIGHT_FIELD').value, LEFT_FIELD: fieldMap.get('LEFT_FIELD').value});\n        });\n        changedAssociations.push(changedAssociation);\n      } else {\n        if (associationControl.dirty) {// Change Case\n          changedAssociation['action'] = 'update';\n          changedAssociation['RIGHT_RELATION_ID'] = associationControl.get('RIGHT_RELATION_ID').value;\n          if (associationControl.get('CARDINALITY').dirty) {\n            changedAssociation['CARDINALITY'] = associationControl.get('CARDINALITY').value;\n          }\n          if (associationControl.get('FOREIGN_KEY_CHECK').dirty) {\n            changedAssociation['FOREIGN_KEY_CHECK'] = associationControl.get('FOREIGN_KEY_CHECK').value;\n          }\n          if (associationControl.get('FIELDS_MAPPING').dirty) {\n            changedAssociation['FIELDS_MAPPING'] = [];\n            const fieldMapArray = associationControl.get('FIELDS_MAPPING') as FormArray;\n            fieldMapArray.controls.forEach(fieldMap => {\n              if (fieldMap.dirty) {\n                changedAssociation['FIELDS_MAPPING'].push(\n                  {action: 'add', RIGHT_FIELD: fieldMap.get('RIGHT_FIELD').value, LEFT_FIELD: fieldMap.get('LEFT_FIELD').value});\n              }\n            });\n            associationMeta.FIELDS_MAPPING.forEach( oldFieldMap => {\n              const index = fieldMapArray.controls.findIndex(fieldMap =>\n                fieldMap.get('LEFT_FIELD').value === oldFieldMap.LEFT_FIELD &&\n                fieldMap.get('RIGHT_FIELD').value === oldFieldMap.RIGHT_FIELD);\n              if (index === -1) {\n                changedAssociation['FIELDS_MAPPING'].push(\n                  {action: 'delete', RIGHT_FIELD: oldFieldMap.LEFT_FIELD, LEFT_FIELD: oldFieldMap.RIGHT_FIELD});\n              }\n            });\n          }\n          changedAssociations.push(changedAssociation);\n        }\n      }\n    });\n\n    // Deletion Case\n    this.relationMeta.ASSOCIATIONS.forEach(associationMeta => {\n      const index = this.associationFormArray.controls.findIndex(\n        associationControl => associationControl.get('RIGHT_RELATION_ID').value === associationMeta.RIGHT_RELATION_ID);\n      if (index === -1) { // The association must be deleted\n        changedAssociations.push({action: 'delete', RIGHT_RELATION_ID: associationMeta.RIGHT_RELATION_ID});\n      }\n    });\n  }\n\n\n  _postActivityAfterSavingRelation(data: any) {\n    if (data['RELATION_ID']) {\n      if (this.isNewMode) {\n        this.isNewMode = false;\n        this.bypassProtection = true;\n        this.router.navigate(['/model/relation/' + data['RELATION_ID']]);\n      } else {\n        this.readonly = true;\n        this.relationMeta = data;\n        this.changedRelation = {};\n        this._generateRelationForm();\n        this.messageService.reportMessage('MODEL', 'RELATION_SAVED', 'S', this.relationMeta.RELATION_ID);\n      }\n    } else {\n      if (data instanceof Array) {\n        data.forEach(err => this.messageService.add(err));\n      } else {\n        this.messageService.report(<Message>data);\n      }\n    }\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZGVsL3JlbGF0aW9uL3JlbGF0aW9uLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-4\\\">\\n    <div class=\\\"btn-toolbar justify-content-between mb-2\\\" role=\\\"toolbar\\\">\\n      <div class=\\\"input-group\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\" #searchBox (keyup)=\\\"searchRelation(searchBox.value)\\\" >\\n      </div>\\n      <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Add\\\" (click)=\\\"newRelation()\\\">\\n        <span class=\\\"fas fa-plus\\\"></span>\\n      </button>\\n    </div>\\n    <div class=\\\"list-group\\\">\\n      <a *ngFor=\\\"let relation of relationList\\\" routerLink=\\\"/model/relation/{{relation.RELATION_ID}}\\\" routerLinkActive=\\\"active\\\"\\n         (click)=\\\"onSelect(relation)\\\" class=\\\"list-group-item list-group-item-action flex-column align-items-start\\\">\\n        <div class=\\\"d-flex w-100 justify-content-between\\\">\\n          <h5 class=\\\"mb-1\\\">{{relation.RELATION_ID}}</h5>\\n          <small>version: {{relation.VERSION_NO}}</small>\\n        </div>\\n        <p class=\\\"mb-1\\\">{{relation.RELATION_DESC}}</p>\\n        <!--<small>created by: {{entityType.CREATE_BY}} @{{entityType.CREATE_TIME}}</small> <br/>-->\\n        <small>last changed by: {{relation.LAST_CHANGE_BY}} @{{relation.LAST_CHANGE_TIME}}</small>\\n      </a>\\n    </div>\\n  </div>\\n  <div class=\\\"col-8\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Relation} from 'jor-angular';\nimport {Subject} from 'rxjs';\nimport {EntityService} from '../../entity.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {debounceTime, distinctUntilChanged, switchMap} from 'rxjs/operators';\nimport {ModelService} from '../model.service';\nimport {MessageService} from 'ui-message-angular';\nimport {msgStore} from '../../msgStore';\n\n@Component({\n  selector: 'app-relation',\n  templateUrl: './relation.component.html',\n  styleUrls: ['./relation.component.css']\n})\nexport class RelationComponent implements OnInit {\n\n  relationList: Relation[];\n  private searchTerms = new Subject<string>();\n  private theSelectedRelation: Relation;\n\n  constructor(private entityService: EntityService,\n              private modelService: ModelService,\n              private messageService: MessageService,\n              private route: ActivatedRoute,\n              private router: Router) {\n    this.messageService.setMessageStore(msgStore, 'EN');\n  }\n\n  ngOnInit() {\n    this.searchTerms.pipe(\n      debounceTime(300),\n      distinctUntilChanged(),\n      switchMap((term: string) => this.entityService.listRelation(term)),\n    ).subscribe(data => {\n      this.relationList = data;\n      let relationID;\n      if (this.route.snapshot.firstChild) {\n        relationID = this.route.snapshot.firstChild.paramMap.get('relationID');\n      }\n      if (relationID) {\n        if (relationID === 'new') {\n          this._newRelation();\n        } else {\n          this.onSelect(this.relationList.find(relation => relation.RELATION_ID === relationID));\n        }\n      }\n    });\n    this.searchRelation(''); // The initial list\n\n    this.modelService.theSelectedRelation$.subscribe( data => {\n      if (this.theSelectedRelation) {\n        this.theSelectedRelation.RELATION_ID = data.RELATION_ID;\n        this.theSelectedRelation.RELATION_DESC = data.RELATION_DESC;\n      }\n    });\n\n    this.modelService.dialogAnswer$.subscribe( answer => {\n      if (answer === 'OK' && !this.relationList[0].CREATE_TIME) {\n        this.relationList.splice(0, 1); // Remove the first one.\n      } else if (answer === 'CANCEL') {\n        const relationID = this.route.snapshot.firstChild.paramMap.get('relationID');\n        if (relationID) {\n          if (relationID === 'new') {\n            this.onSelect(this.relationList[0]);\n          } else {\n            this.onSelect(this.relationList.find(relation => relation.RELATION_ID === relationID));\n          }\n        }\n      }\n    });\n  }\n\n  searchRelation(term: string): void {\n    this.searchTerms.next(term);\n  }\n\n  onSelect(relation: Relation): void {\n    if (relation) {\n      this.theSelectedRelation = relation;\n      this.modelService.setSelectedRelation(relation);\n    }\n  }\n\n  newRelation(): void {\n    if (this.route.snapshot.firstChild && this.route.snapshot.firstChild.paramMap.get('relationID') === 'new') {\n      this.messageService.reportMessage('MODEL', 'UNSAVED_NEW', 'E');\n    } else {\n      this._newRelation();\n      this.router.navigate(['/model/relation/new']);\n    }\n  }\n\n  _newRelation(): void {\n    this.theSelectedRelation = new Relation();\n    this.theSelectedRelation.RELATION_ID = 'r_new';\n    this.theSelectedRelation.RELATION_DESC = 'description';\n    this.theSelectedRelation.VERSION_NO = 1;\n    this.theSelectedRelation.LAST_CHANGE_BY = 'DH001';\n    this.theSelectedRelation.LAST_CHANGE_TIME = new Date().toDateString();\n    this.modelService.setSelectedRelation(this.theSelectedRelation);\n    this.relationList.splice(0, 0, this.theSelectedRelation);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZGVsL3JlbGF0aW9uc2hpcC9yZWxhdGlvbnNoaXAtZGV0YWlsL3JlbGF0aW9uc2hpcC1kZXRhaWwuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"btn-toolbar justify-content-end  mb-2\\\" role=\\\"toolbar\\\">\\n  <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n    <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Edit/Display\\\" (click)=\\\"switchEditDisplay()\\\">\\n      <span *ngIf=\\\"readonly\\\" class=\\\"fas fa-edit\\\"></span>\\n      <span *ngIf=\\\"!readonly\\\" class=\\\"fas fa-glasses\\\"></span>\\n    </button>\\n    <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Save\\\" (click)=\\\"save()\\\">\\n      <span class=\\\"fas fa-save\\\"></span>\\n    </button>\\n  </div>\\n</div>\\n\\n<dk-message></dk-message>\\n<form *ngIf=\\\"relationshipMeta\\\" [formGroup]=\\\"relationshipForm\\\">\\n  <div class=\\\"form-group\\\"\\n       [class.dk-invalid]=\\\"relationshipForm.get('RELATIONSHIP_ID').invalid && (relationshipForm.touched || relationshipForm.dirty)\\\">\\n    <label for=\\\"relationship\\\" class=\\\"col-form-label form-control-sm\\\">Relationship:\\n      <span class=\\\"dk-invalid-feedback\\\">\\n        {{relationshipForm.get('RELATIONSHIP_ID').errors?.message}}\\n      </span>\\n    </label>\\n    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"relationship\\\" [readonly]=\\\"readonly || !isNewMode\\\"\\n           name=\\\"relationship\\\" formControlName=\\\"RELATIONSHIP_ID\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"relationship-desc\\\" class=\\\"col-form-label form-control-sm\\\">Relationship Description:</label>\\n    <textarea class=\\\"form-control\\\" id=\\\"relationship-desc\\\" name=\\\"relationship-desc\\\" rows=\\\"2\\\"\\n              formControlName=\\\"RELATIONSHIP_DESC\\\" [readonly]=\\\"readonly\\\" (change)=\\\"onChangeRelationshipDesc()\\\"></textarea>\\n  </div>\\n  <div class=\\\"row ml-2\\\">\\n    <div class=\\\"col-3 form-group row\\\" >\\n      <label for=\\\"timeDependent\\\" class=\\\"col-form-label form-control-sm\\\">Time Dependent: </label>\\n      <input type=\\\"checkbox\\\" class=\\\"form-control ml-2\\\" id=\\\"timeDependent\\\" name=\\\"timeDependent\\\"\\n             formControlName=\\\"TIME_DEPENDENT\\\" (change)=\\\"onChangeTimeDependency()\\\">\\n    </div>\\n    <div class=\\\"col-4 form-group row ml-3\\\"\\n         [class.dk-invalid]=\\\"relationshipForm.get('VALID_PERIOD').invalid && (relationshipForm.touched || relationshipForm.dirty)\\\">\\n      <label for=\\\"valid_period\\\" class=\\\"col-form-label form-control-sm\\\">Valid Period(seconds):\\n        <span class=\\\"dk-invalid-feedback\\\" *ngIf=\\\"!relationshipForm.get('VALID_PERIOD').valid\\\">\\n        {{relationshipForm.get('VALID_PERIOD').errors?.message}}\\n      </span>\\n      </label>\\n      <input type=\\\"number\\\" class=\\\"form-control form-control-sm\\\" id=\\\"valid_period\\\" [readonly]=\\\"readonly\\\"\\n             name=\\\"valid_period\\\" formControlName=\\\"VALID_PERIOD\\\">\\n    </div>\\n  </div>\\n\\n  <app-attribute-meta [readonly]=\\\"readonly\\\" [parentForm]=\\\"relationshipForm\\\" [attributes]=\\\"attributes\\\"\\n                      [relationID]=\\\"relationshipMeta.RELATIONSHIP_ID\\\" [isNewMode]=\\\"isNewMode\\\">\\n  </app-attribute-meta>\\n\\n  <div class=\\\"card mt-2\\\">\\n    <div class=\\\"card-header\\\"><span class=\\\"fas fa-user-check\\\"></span> Involved Roles</div>\\n    <div class=\\\"card-body\\\">\\n      <table class=\\\"table table-bordered table-sm dk-table\\\">\\n        <thead class=\\\"thead-light\\\">\\n        <tr>\\n          <th scope=\\\"col\\\">Action</th>\\n          <th scope=\\\"col\\\">Role</th>\\n          <th scope=\\\"col\\\">Description</th>\\n          <th scope=\\\"col\\\">Cardinality</th>\\n          <th scope=\\\"col\\\">Direction</th>\\n        </tr>\\n        </thead>\\n\\n        <tbody formArrayName=\\\"INVOLVES\\\">\\n        <tr *ngFor=\\\"let involveFormGroup of involveFormArray.controls; let i = index\\\">\\n          <td class=\\\"dk-actions\\\">\\n            <button class=\\\"btn btn-sm\\\" type=\\\"button\\\" [disabled]=\\\"readonly\\\" (click)=\\\"deleteInvolve(i)\\\" title=\\\"Delete\\\">\\n              <span class=\\\"far fa-trash-alt\\\"></span>\\n            </button>\\n          </td>\\n          <td [formGroup]=\\\"involveFormGroup\\\"\\n              [class.dk-invalid]=\\\"involveFormGroup.get('ROLE_ID').invalid && (involveFormGroup.touched || involveFormGroup.dirty)\\\">\\n            <div class=\\\"input-group\\\">\\n              <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" formControlName=\\\"ROLE_ID\\\"\\n                     [readonly]=\\\"readonly || oldInvolve(involveFormGroup) && involveFormGroup.valid\\\" (change)=\\\"onChangeRoleID(i)\\\">\\n              <div class=\\\"input-group-append\\\">\\n                <button class=\\\"btn btn-outline-secondary btn-light btn-sm\\\" type=\\\"button\\\" id=\\\"button-addon2\\\">\\n                  <span class=\\\"fas fa-search\\\"></span>\\n                </button>\\n              </div>\\n              <div class=\\\"invalid-tooltip\\\">\\n                {{involveFormGroup.get('ROLE_ID').errors?.message}}\\n              </div>\\n            </div>\\n          </td>\\n          <td [formGroup]=\\\"involveFormGroup\\\">\\n            <input type=\\\"text\\\" formControlName=\\\"ROLE_DESC\\\" readonly class=\\\"form-control form-control-sm dk-description\\\">\\n          </td>\\n          <td [formGroup]=\\\"involveFormGroup\\\">\\n            <select class=\\\"form-control form-control-sm\\\" formControlName=\\\"CARDINALITY\\\">\\n              <option>[1..1]</option>\\n              <option>[1..n]</option>\\n            </select>\\n          </td>\\n          <td [formGroup]=\\\"involveFormGroup\\\">\\n            <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" formControlName=\\\"DIRECTION\\\" [readonly]=\\\"readonly\\\">\\n          </td>\\n        </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n</form>\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {Attribute, RelationshipMeta} from 'jor-angular';\nimport {FormArray, FormBuilder, FormControl, FormGroup} from '@angular/forms';\nimport {AttributeMetaComponent} from '../../attribute-meta/attribute-meta.component';\nimport {ActivatedRoute, ParamMap, Router} from '@angular/router';\nimport {Message, MessageService} from 'ui-message-angular';\nimport {ModelService} from '../../model.service';\nimport {DialogService} from '../../../dialog.service';\nimport {EntityService} from '../../../entity.service';\nimport {msgStore} from '../../../msgStore';\nimport {switchMap} from 'rxjs/operators';\nimport {forkJoin, Observable, of} from 'rxjs';\nimport {UniqueRelationshipValidator} from '../../model-validators';\n\n@Component({\n  selector: 'app-relationship-detail',\n  templateUrl: './relationship-detail.component.html',\n  styleUrls: ['./relationship-detail.component.css']\n})\nexport class RelationshipDetailComponent implements OnInit {\n  relationshipMeta: RelationshipMeta;\n  attributes: Attribute[];\n  readonly = true;\n  isNewMode = false;\n  relationshipForm: FormGroup;\n  changedRelationship = {};\n  bypassProtection = false;\n\n  @ViewChild(AttributeMetaComponent)\n  private attrComponent: AttributeMetaComponent;\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private fb: FormBuilder,\n              private uniqueRelationshipValidator: UniqueRelationshipValidator,\n              private messageService: MessageService,\n              private modelService: ModelService,\n              private dialogService: DialogService,\n              private entityService: EntityService) {\n    this.messageService.setMessageStore(msgStore, 'EN');\n  }\n\n  get involveFormArray() {\n    return this.relationshipForm.get('INVOLVES') as FormArray;\n  }\n\n  ngOnInit() {\n    this.route.paramMap.pipe(\n      switchMap((params: ParamMap) => {\n        const relationshipID = params.get('relationshipID');\n        if (relationshipID === 'new') {\n          const relationship = new RelationshipMeta();\n          relationship.RELATIONSHIP_ID = 'rs_';\n          relationship.RELATIONSHIP_DESC = '';\n          relationship.VALID_PERIOD = 0;\n          relationship.INVOLVES = [];\n          this.isNewMode = true;\n          this.readonly = false;\n          this.bypassProtection = false;\n          return forkJoin(of(relationship), of([]));\n        } else {\n          this.readonly = true;\n          this.isNewMode = false;\n          return forkJoin(\n            this.entityService.getRelationship(relationshipID),\n            this.entityService.getRelationMeta(relationshipID));\n        }\n      })\n    ).subscribe(data => {\n      if ( 'msgName' in data[0]) {\n        this.messageService.clearMessages();\n        this.relationshipMeta = null;\n        this.relationshipForm = null;\n        this.messageService.report(<Message>data[0]);\n      } else {\n        this.messageService.clearMessages();\n        this.relationshipMeta = data[0];\n        this.attributes = 'msgName' in data[1] ? [] : data[1]['ATTRIBUTES'];\n        this._generateRelationshipForm();\n        if (this.readonly) { this.relationshipForm.get('TIME_DEPENDENT').disable(); }\n      }\n    });\n  }\n\n  _generateRelationshipForm(): void {\n    if (this.relationshipForm) {\n      this.relationshipForm.markAsPristine({onlySelf: false});\n      this.relationshipForm.get('RELATIONSHIP_ID').setValue(this.relationshipMeta.RELATIONSHIP_ID);\n      this.relationshipForm.get('RELATIONSHIP_DESC').setValue(this.relationshipMeta.RELATIONSHIP_DESC);\n      this.relationshipForm.get('TIME_DEPENDENT').setValue(this.relationshipMeta.VALID_PERIOD > 0);\n      this.relationshipForm.get('VALID_PERIOD').setValue(this.relationshipMeta.VALID_PERIOD);\n      this.relationshipForm.removeControl('ATTRIBUTES');\n    } else {\n      this.relationshipForm = this.fb.group({\n        RELATIONSHIP_ID: [this.relationshipMeta.RELATIONSHIP_ID, {updateOn: 'blur'}],\n        RELATIONSHIP_DESC: [this.relationshipMeta.RELATIONSHIP_DESC],\n        TIME_DEPENDENT: [this.relationshipMeta.VALID_PERIOD > 0],\n        VALID_PERIOD: [this.relationshipMeta.VALID_PERIOD, this._validateValidPeriod]\n      });\n    }\n\n    // Compose Involves\n    const formArray = [];\n    this.relationshipMeta.INVOLVES.forEach( involve => {\n      formArray.push(this.fb.group({\n        ROLE_ID: [involve.ROLE_ID],\n        ROLE_DESC: [involve.ROLE_DESC],\n        CARDINALITY: [{value: involve.CARDINALITY, disabled: this.readonly}],\n        DIRECTION: [involve.DIRECTION]\n      }));\n    });\n\n    if (this.isNewMode) {\n      this.relationshipForm.get('RELATIONSHIP_ID').setValidators(this._validateRelationshipID);\n      this.relationshipForm.get('RELATIONSHIP_ID').setAsyncValidators(\n        this.uniqueRelationshipValidator.validate.bind(this.uniqueRelationshipValidator));\n      this.relationshipForm.get('TIME_DEPENDENT').enable();\n      formArray.push(\n        this.fb.group({\n          ROLE_ID: [''],\n          ROLE_DESC: [''],\n          CARDINALITY: ['[1..1]'],\n          DIRECTION: ['']\n        }));\n    } else {\n      this.relationshipForm.get('RELATIONSHIP_ID').clearValidators();\n      this.relationshipForm.get('RELATIONSHIP_ID').clearAsyncValidators();\n    }\n\n    this.relationshipForm.setControl('INVOLVES', new FormArray(formArray));\n  }\n\n  _validateRelationshipID(c: FormControl) {\n    if (c.value.trim() === '') {\n      return {message: 'Relationship ID is mandatory'};\n    }\n\n    if (c.value.toString().toLowerCase() === 'new') {\n      return {message: '\"NEW/new\" is reserved, thus is not allowed to use!'};\n    }\n\n    if (c.value.toString().toLowerCase().substr(0, 3) !== 'rs_') {\n      return {message: 'Relationship ID must be started with \"rs_\"!'};\n    }\n\n    if (c.value.toString().length < 4) {\n      return {message: 'Relationship ID must have length larger than 3!'};\n    }\n    if (c.value.toString().length > 32) {\n      return {message: 'Relationship ID must have length less than 32!'};\n    }\n    return null;\n  }\n\n  _validateValidPeriod(c: FormControl) {\n    if (c.parent && c.parent.value.TIME_DEPENDENT && c.value <= 0) {\n      return {message: 'must be larger than 0'};\n    }\n    return null;\n  }\n\n  switchEditDisplay() {\n    if (this.isNewMode) {\n      this.dialogService.confirm('Discard the new Relationship?').subscribe(confirm => {\n        if (confirm) {\n          this._switch2DisplayMode();\n          this.relationshipMeta = null;\n          this.modelService.sendDialogAnswer('OK');\n        } else {\n          this.modelService.sendDialogAnswer('CANCEL');\n        }\n      });\n      return;\n    }\n\n    if (!this.readonly) { // In Change Mode -> Display Mode\n      if (this.relationshipForm.dirty) {\n        this.dialogService.confirm('Discard changes?').subscribe(confirm => {\n          if (confirm) { // Discard changes and switch to Display Mode\n            this._generateRelationshipForm();\n            this.relationshipForm.reset(this.relationshipForm.value);\n            this._switch2DisplayMode();\n          }\n        });\n      } else { // Switch to display mode\n        this._switch2DisplayMode();\n      }\n    } else { // In Display Mode -> Change Mode\n      this.readonly = false;\n      this.relationshipForm.get('TIME_DEPENDENT').enable();\n      this.attrComponent.switchEditDisplay(this.readonly);\n      this.involveFormArray.controls.forEach(involveFormGroup => {\n        involveFormGroup.get('CARDINALITY').enable();\n      });\n      this.involveFormArray.push(\n        this.fb.group({\n          ROLE_ID: [''],\n          ROLE_DESC: [''],\n          CARDINALITY: ['[1..1]'],\n          DIRECTION: ['']\n        })\n      );\n    }\n  }\n\n  _switch2DisplayMode(): void {\n    this.readonly = true;\n    this.relationshipForm.get('TIME_DEPENDENT').disable();\n    this.attrComponent.switchEditDisplay(this.readonly);\n    let lastIndex = this.involveFormArray.length - 1;\n    while (lastIndex >= 0 && this.involveFormArray.controls[lastIndex].get('ROLE_ID').value.trim() === '') {\n      this.involveFormArray.removeAt(lastIndex);\n      lastIndex--;\n    }\n    this.involveFormArray.controls.forEach(involveFormGroup => {\n      involveFormGroup.get('CARDINALITY').disable();\n    });\n  }\n\n  onChangeRelationshipID(): void {\n    this.modelService.updateRelationshipID(this.relationshipForm.get('RELATIONSHIP_ID').value);\n  }\n\n  onChangeTimeDependency(): void {\n    const timeDependent = this.relationshipForm.get('TIME_DEPENDENT').value;\n    const validPeriodCtrl = this.relationshipForm.get('VALID_PERIOD');\n    const relationID = this.relationshipForm.get('RELATIONSHIP_ID').value;\n    const attrFormArray = this.relationshipForm.get('ATTRIBUTES') as FormArray;\n    if (timeDependent) {\n      validPeriodCtrl.setValue(28080000); // 3600 * 24 * 365\n      validPeriodCtrl.markAsDirty();\n      validPeriodCtrl.enable();\n      const validFromFormGroup = this.fb.group({\n        ATTR_GUID: [''],\n        RELATION_ID: [relationID],\n        ATTR_NAME: ['VALID_FROM'],\n        ATTR_DESC: ['Valid from'],\n        DATA_ELEMENT: [''],\n        DATA_TYPE: [{value: 8, disabled: true}],\n        DATA_LENGTH: [null],\n        DECIMAL: [null],\n        PRIMARY_KEY: [false],\n        AUTO_INCREMENT: [false]\n      });\n      validFromFormGroup.markAsDirty();\n      attrFormArray.insert(attrFormArray.length - 1, validFromFormGroup);\n      const validToFormGroup = this.fb.group({\n        ATTR_GUID: [''],\n        RELATION_ID: [relationID],\n        ATTR_NAME: ['VALID_TO'],\n        ATTR_DESC: ['Valid to'],\n        DATA_ELEMENT: [''],\n        DATA_TYPE: [{value: 8, disabled: true}],\n        DATA_LENGTH: [null],\n        DECIMAL: [null],\n        PRIMARY_KEY: [false],\n        AUTO_INCREMENT: [false]\n      });\n      validToFormGroup.markAsDirty();\n      attrFormArray.insert(attrFormArray.length - 1, validToFormGroup);\n    } else {\n      validPeriodCtrl.setValue(0);\n      validPeriodCtrl.disable();\n      validPeriodCtrl.markAsDirty();\n      const attributeValidFromIndex = attrFormArray.controls.findIndex(\n        attrCtrl => attrCtrl.get('ATTR_NAME').value === 'VALID_FROM');\n      if (attributeValidFromIndex >= 0) { this.attrComponent.deleteAttribute(attributeValidFromIndex); }\n      const attributeValidToIndex = attrFormArray.controls.findIndex(\n        attrCtrl => attrCtrl.get('ATTR_NAME').value === 'VALID_TO');\n      if (attributeValidToIndex >= 0) { this.attrComponent.deleteAttribute(attributeValidToIndex); }\n    }\n\n  }\n\n  onChangeRelationshipDesc(): void {\n    this.modelService.updateRelationshipDesc(this.relationshipForm.get('RELATIONSHIP_DESC').value);\n  }\n\n  deleteInvolve(index: number): void {\n    if (index !== this.involveFormArray.length - 1) {\n      const currentRoleID = this.involveFormArray.at(index).get('ROLE_ID').value;\n      this.involveFormArray.removeAt(index);\n      this.involveFormArray.markAsDirty();\n      const attrFormArray = this.relationshipForm.get('ATTRIBUTES') as FormArray;\n      const attributeInstanceGUIDIndex = attrFormArray.controls.findIndex(\n        attrCtrl => attrCtrl.get('ATTR_NAME').value === currentRoleID + '_INSTANCE_GUID');\n      if (attributeInstanceGUIDIndex >= 0) { this.attrComponent.deleteAttribute(attributeInstanceGUIDIndex); }\n      const attributeEntityIDIndex = attrFormArray.controls.findIndex(\n        attrCtrl => attrCtrl.get('ATTR_NAME').value === currentRoleID + '_ENTITY_ID');\n      if (attributeEntityIDIndex >= 0) { this.attrComponent.deleteAttribute(attributeEntityIDIndex); }\n    }\n  }\n\n  onChangeRoleID(index: number): void {\n    const currentInvolveFormGroup = this.involveFormArray.controls[index];\n    if (this.involveFormArray.controls.findIndex((involveCtrl, i) =>\n      i !== index && involveCtrl.get('ROLE_ID').value === currentInvolveFormGroup.get('ROLE_ID').value\n    ) !== -1) {\n      currentInvolveFormGroup.get('ROLE_ID').setErrors({message: 'Duplicate roles'});\n      return;\n    }\n\n    if (index === this.involveFormArray.length - 1 && currentInvolveFormGroup.value.ROLE_ID.trim() !== '') {\n      // Only work for the last New line\n      this.involveFormArray.push(\n        this.fb.group({\n          ROLE_ID: [''],\n          ROLE_DESC: [''],\n          CARDINALITY: ['[1..1]'],\n          DIRECTION: ['']\n        })\n      );\n    }\n\n    this.entityService.getRoleDesc(currentInvolveFormGroup.value.ROLE_ID).subscribe(data => {\n      if (data['msgCat']) {\n        currentInvolveFormGroup.get('ROLE_ID').setErrors({message: data['msgShortText']});\n      } else {\n        currentInvolveFormGroup.get('ROLE_DESC').setValue(data);\n        const attrFormArray = this.relationshipForm.get('ATTRIBUTES') as FormArray;\n        const relationID = this.relationshipForm.get('RELATIONSHIP_ID').value;\n        const instanceGUIDFormGroup = this.fb.group({\n          ATTR_GUID: [''],\n          RELATION_ID: [relationID],\n          ATTR_NAME: [currentInvolveFormGroup.value.ROLE_ID + '_INSTANCE_GUID'],\n          ATTR_DESC: ['Entity Instance GUID of role ' + currentInvolveFormGroup.value.ROLE_ID],\n          DATA_ELEMENT: [''],\n          DATA_TYPE: [{value: 1, disabled: true}],\n          DATA_LENGTH: [32],\n          DECIMAL: [null],\n          PRIMARY_KEY: [false],\n          AUTO_INCREMENT: [false]\n        });\n        instanceGUIDFormGroup.markAsDirty();\n        attrFormArray.insert(attrFormArray.length - 1, instanceGUIDFormGroup);\n        const entityIDFormGroup = this.fb.group({\n          ATTR_GUID: [''],\n          RELATION_ID: [relationID],\n          ATTR_NAME: [currentInvolveFormGroup.value.ROLE_ID + '_ENTITY_ID'],\n          ATTR_DESC: ['Entity ID of role ' + currentInvolveFormGroup.value.ROLE_ID],\n          DATA_ELEMENT: [''],\n          DATA_TYPE: [{value: 1, disabled: true}],\n          DATA_LENGTH: [32],\n          DECIMAL: [null],\n          PRIMARY_KEY: [false],\n          AUTO_INCREMENT: [false]\n        });\n        entityIDFormGroup.markAsDirty();\n        attrFormArray.insert(attrFormArray.length - 1, entityIDFormGroup);\n        attrFormArray.markAsDirty();\n      }\n    });\n  }\n\n  oldInvolve(formGroup: FormGroup): boolean {\n    return this.relationshipMeta.INVOLVES.findIndex( role => role.ROLE_ID === formGroup.get('ROLE_ID').value ) !== -1;\n  }\n\n  canDeactivate(): Observable<boolean> | boolean {\n    if (this.isNewMode || (!this.bypassProtection && this.relationshipForm && this.relationshipForm.dirty)) {\n      const dialogAnswer = this.dialogService.confirm('Discard changes?');\n      dialogAnswer.subscribe(confirm => {\n        if (confirm) {\n          this.modelService.sendDialogAnswer('OK');\n        } else {\n          this.modelService.sendDialogAnswer('CANCEL');\n        }\n      });\n      return dialogAnswer;\n    } else {\n      return true;\n    }\n  }\n\n  save(): void {\n    if (!this.relationshipForm.dirty) {\n      return this.messageService.reportMessage('MODEL', 'NO_CHANGE', 'S');\n    }\n\n    if (!this.relationshipForm.valid) {\n      return this.messageService.reportMessage('MODEL', 'INVALID_DATA', 'E');\n    }\n\n    if (this.isNewMode) {\n      this.changedRelationship['action'] = 'add';\n      this.changedRelationship['RELATIONSHIP_ID'] = this.relationshipForm.controls['RELATIONSHIP_ID'].value;\n    } else {\n      this.changedRelationship['action'] = 'update';\n      this.changedRelationship['RELATIONSHIP_ID'] = this.relationshipMeta.RELATIONSHIP_ID;\n    }\n    if (this.relationshipForm.controls['RELATIONSHIP_DESC'].dirty) {\n      this.changedRelationship['RELATIONSHIP_DESC'] = this.relationshipForm.controls['RELATIONSHIP_DESC'].value;\n    }\n    if (this.isNewMode || this.relationshipForm.controls['VALID_PERIOD'].dirty) {\n      this.changedRelationship['VALID_PERIOD'] = this.relationshipForm.controls['VALID_PERIOD'].value;\n    }\n\n    this.changedRelationship['ATTRIBUTES'] = this.attrComponent.processChangedAttributes();\n\n    if (this._processChangedInvolves()) {\n      // console.log(this.changedRelationship);\n      this.entityService.saveRelationship(this.changedRelationship)\n        .subscribe(data => this._postActivityAfterSavingRelationship(data));\n    }\n  }\n\n  _processChangedInvolves(): boolean {\n    if (this.involveFormArray.length <= 2) { // An empty line is included\n      this.messageService.reportMessage('MODEL', 'RELATIONSHIP_LACK_INVOLVED_ROLES', 'E');\n      return false;\n    }\n    const changedInvolves = [];\n    if (this.involveFormArray.dirty) {\n      this.changedRelationship['INVOLVES'] = changedInvolves;\n\n      this.involveFormArray.controls.forEach(involveControl => {\n        if (involveControl.get('ROLE_ID').value.trim() === '') { return; }\n        let action;\n        const index = this.relationshipMeta.INVOLVES.findIndex(\n          involve => involveControl.get('ROLE_ID').value === involve.ROLE_ID);\n        if (index === -1) { // New Add Case\n          action = 'add';\n        } else { // New Update Case\n          if (involveControl.dirty) { action = 'update'; }\n        }\n        if (action) {\n          changedInvolves.push({ action: action, ROLE_ID: involveControl.get('ROLE_ID').value,\n            CARDINALITY: involveControl.get('CARDINALITY').value, DIRECTION: involveControl.get('DIRECTION').value });\n        }\n      });\n\n      // Deletion Case\n      this.relationshipMeta.INVOLVES.forEach(involve => {\n        const index = this.involveFormArray.controls.findIndex(\n          roleControl => roleControl.get('ROLE_ID').value === involve.ROLE_ID);\n        if (index === -1) { // The attribute must be deleted\n          const deletedRole = {action: 'delete', ROLE_ID: involve.ROLE_ID};\n          changedInvolves.push(deletedRole);\n        }\n      });\n    }\n    return true;\n  }\n\n  _postActivityAfterSavingRelationship(data: any) {\n    if (data[0] && data[0]['RELATIONSHIP_ID']) {\n      if (this.isNewMode) {\n        this.isNewMode = false;\n        this.bypassProtection = true;\n        this.router.navigate(['/model/relationship/' + data[0]['RELATIONSHIP_ID']]);\n      } else {\n        this.readonly = true;\n        this.relationshipForm.get('TIME_DEPENDENT').disable();\n        this.relationshipMeta = data[0];\n        this.attributes = data[1].ATTRIBUTES;\n        this.changedRelationship = {};\n        this._generateRelationshipForm();\n        this.messageService.reportMessage('MODEL', 'RELATIONSHIP_SAVED', 'S', this.relationshipMeta.RELATIONSHIP_ID);\n      }\n    } else {\n      if (data instanceof Array) {\n        data.forEach(err => this.messageService.add(err));\n      } else {\n        this.messageService.report(<Message>data);\n      }\n    }\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZGVsL3JlbGF0aW9uc2hpcC9yZWxhdGlvbnNoaXAuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-4\\\">\\n    <div class=\\\"btn-toolbar justify-content-between mb-2\\\" role=\\\"toolbar\\\">\\n      <div class=\\\"input-group\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\" #searchBox (keyup)=\\\"searchRelationship(searchBox.value)\\\" >\\n      </div>\\n      <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Add\\\" (click)=\\\"newRelationship()\\\">\\n        <span class=\\\"fas fa-plus\\\"></span>\\n      </button>\\n    </div>\\n    <div class=\\\"list-group\\\">\\n      <a *ngFor=\\\"let relationship of relationshipList\\\" routerLink=\\\"/model/relationship/{{relationship.RELATIONSHIP_ID}}\\\" routerLinkActive=\\\"active\\\"\\n         (click)=\\\"onSelect(relationship)\\\" class=\\\"list-group-item list-group-item-action flex-column align-items-start\\\">\\n        <div class=\\\"d-flex w-100 justify-content-between\\\">\\n          <h5 class=\\\"mb-1\\\">{{relationship.RELATIONSHIP_ID}}</h5>\\n          <small>version: {{relationship.VERSION_NO}}</small>\\n        </div>\\n        <p class=\\\"mb-1\\\">{{relationship.RELATIONSHIP_DESC}}</p>\\n        <!--<small>created by: {{entityType.CREATE_BY}} @{{entityType.CREATE_TIME}}</small> <br/>-->\\n        <small>last changed by: {{relationship.LAST_CHANGE_BY}} @{{relationship.LAST_CHANGE_TIME}}</small>\\n      </a>\\n    </div>\\n  </div>\\n  <div class=\\\"col-8\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { RelationshipH} from 'jor-angular';\nimport {Subject} from 'rxjs';\nimport {EntityService} from '../../entity.service';\nimport {ModelService} from '../model.service';\nimport {MessageService} from 'ui-message-angular';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {msgStore} from '../../msgStore';\nimport {debounceTime, distinctUntilChanged, switchMap} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-relationship',\n  templateUrl: './relationship.component.html',\n  styleUrls: ['./relationship.component.css']\n})\nexport class RelationshipComponent implements OnInit {\n  relationshipList: RelationshipH[];\n  private searchTerms = new Subject<string>();\n  private theSelectedRelationship: RelationshipH;\n\n  constructor(private entityService: EntityService,\n              private modelService: ModelService,\n              private messageService: MessageService,\n              private route: ActivatedRoute,\n              private router: Router) {\n    this.messageService.setMessageStore(msgStore, 'EN');\n  }\n\n  ngOnInit() {\n    this.searchTerms.pipe(\n      debounceTime(300),\n      distinctUntilChanged(),\n      switchMap((term: string) => this.entityService.listRelationship(term)),\n    ).subscribe(data => {\n      this.relationshipList = data;\n      let relationshipID;\n      if (this.route.snapshot.firstChild) {\n        relationshipID = this.route.snapshot.firstChild.paramMap.get('relationshipID');\n      }\n      if (relationshipID ) {\n        if (relationshipID === 'new') {\n          this._newRelationship();\n        } else {\n          this.onSelect(this.relationshipList.find(relationship => relationship.RELATIONSHIP_ID === relationshipID));\n        }\n      }\n    });\n    this.searchRelationship(''); // The initial list\n\n    this.modelService.theSelectedRelationship$.subscribe( data => {\n      if (this.theSelectedRelationship) {\n        this.theSelectedRelationship.RELATIONSHIP_ID = data['RELATIONSHIP_ID'];\n        this.theSelectedRelationship.RELATIONSHIP_DESC = data['RELATIONSHIP_DESC'];\n      }\n    });\n\n    this.modelService.dialogAnswer$.subscribe( answer => {\n      if (answer === 'OK' && !this.relationshipList[0].CREATE_TIME) {\n        this.relationshipList.splice(0, 1); // Remove the first one.\n      } else if (answer === 'CANCEL') {\n        const relationshipID = this.route.snapshot.firstChild.paramMap.get('relationshipID');\n        if (relationshipID) {\n          if (relationshipID === 'new') {\n            this.onSelect(this.relationshipList[0]);\n          } else {\n            this.onSelect(this.relationshipList.find(relationship => relationship.RELATIONSHIP_ID === relationshipID));\n          }\n        }\n      }\n    });\n  }\n\n  onSelect(relationship: RelationshipH): void {\n    if (relationship) {\n      this.theSelectedRelationship = relationship;\n      this.modelService.setSelectedRelationship(relationship);\n    }\n  }\n\n  searchRelationship(term: string): void {\n    this.searchTerms.next(term);\n  }\n\n  newRelationship(): void {\n    if (this.route.snapshot.firstChild && this.route.snapshot.firstChild.paramMap.get('relationshipID') === 'new') {\n      this.messageService.reportMessage('MODEL', 'UNSAVED_NEW', 'E');\n    } else {\n      this._newRelationship();\n      this.router.navigate(['/model/relationship/new']);\n    }\n  }\n\n  _newRelationship(): void {\n    this.theSelectedRelationship = new RelationshipH();\n    this.theSelectedRelationship.RELATIONSHIP_ID = 'new';\n    this.theSelectedRelationship.RELATIONSHIP_DESC = 'description';\n    this.theSelectedRelationship.VERSION_NO = 1;\n    this.theSelectedRelationship.LAST_CHANGE_BY = 'DH001';\n    this.theSelectedRelationship.LAST_CHANGE_TIME = new Date().toDateString();\n    this.modelService.setSelectedRelationship(this.theSelectedRelationship);\n    this.relationshipList.splice(0, 0, this.theSelectedRelationship);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZGVsL3JvbGUvcm9sZS1kZXRhaWwvcm9sZS1kZXRhaWwuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"btn-toolbar justify-content-end  mb-2\\\" role=\\\"toolbar\\\">\\n  <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n    <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Edit/Display\\\" (click)=\\\"switchEditDisplay()\\\">\\n      <span *ngIf=\\\"readonly\\\" class=\\\"fas fa-edit\\\"></span>\\n      <span *ngIf=\\\"!readonly\\\" class=\\\"fas fa-glasses\\\"></span>\\n    </button>\\n    <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Save\\\" (click)=\\\"save()\\\">\\n      <span class=\\\"fas fa-save\\\"></span>\\n    </button>\\n  </div>\\n</div>\\n\\n<dk-message></dk-message>\\n<form *ngIf=\\\"roleMeta\\\" [formGroup]=\\\"roleForm\\\">\\n  <div class=\\\"form-group\\\" [class.dk-invalid]=\\\"roleForm.get('ROLE_ID').invalid && (roleForm.touched || roleForm.dirty)\\\" >\\n    <label for=\\\"role\\\" class=\\\"col-form-label form-control-sm\\\">Role:\\n      <span class=\\\"dk-invalid-feedback\\\">\\n        {{roleForm.get('ROLE_ID').errors?.message}}\\n      </span>\\n    </label>\\n    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"role\\\" [readonly]=\\\"readonly || !isNewMode\\\"\\n           name=\\\"role\\\" formControlName=\\\"ROLE_ID\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"role-desc\\\" class=\\\"col-form-label form-control-sm\\\">Role Description:</label>\\n    <textarea class=\\\"form-control\\\" id=\\\"role-desc\\\" name=\\\"role-desc\\\" rows=\\\"2\\\"\\n              formControlName=\\\"ROLE_DESC\\\" [readonly]=\\\"readonly\\\" (change)=\\\"onChangeRoleDesc()\\\"></textarea>\\n  </div>\\n\\n  <div class=\\\"card mt-2\\\">\\n    <div class=\\\"card-header\\\"><span class=\\\"fas fa-user-check\\\"></span> Relations</div>\\n    <div class=\\\"card-body\\\">\\n      <table class=\\\"table table-bordered table-sm dk-table\\\">\\n        <thead class=\\\"thead-light\\\">\\n        <tr>\\n          <th scope=\\\"col\\\">Action</th>\\n          <th scope=\\\"col\\\">Relation</th>\\n          <th scope=\\\"col\\\">Description</th>\\n          <th scope=\\\"col\\\">Cardinality</th>\\n        </tr>\\n        </thead>\\n\\n        <tbody formArrayName=\\\"RELATIONS\\\">\\n        <tr *ngFor=\\\"let relationFormGroup of relationFormArray.controls; let i = index\\\">\\n          <td class=\\\"dk-actions\\\">\\n            <button class=\\\"btn btn-sm\\\" type=\\\"button\\\" [disabled]=\\\"readonly\\\" (click)=\\\"deleteRelation(i)\\\" title=\\\"Delete\\\">\\n              <span class=\\\"far fa-trash-alt\\\"></span>\\n            </button>\\n          </td>\\n          <td [formGroup]=\\\"relationFormGroup\\\"\\n              [class.dk-invalid]=\\\"relationFormGroup.get('RELATION_ID').invalid && (relationFormGroup.touched || relationFormGroup.dirty)\\\">\\n            <div class=\\\"input-group\\\">\\n              <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" formControlName=\\\"RELATION_ID\\\"\\n                     [readonly]=\\\"readonly || oldRelation(relationFormGroup) && relationFormGroup.valid\\\" (change)=\\\"onChangeRelationID(i)\\\">\\n              <div class=\\\"input-group-append\\\">\\n                <button class=\\\"btn btn-outline-secondary btn-light btn-sm\\\" type=\\\"button\\\" id=\\\"button-addon2\\\">\\n                  <span class=\\\"fas fa-search\\\"></span>\\n                </button>\\n              </div>\\n              <div class=\\\"invalid-tooltip\\\">\\n                {{relationFormGroup.get('RELATION_ID').errors?.message}}\\n              </div>\\n            </div>\\n          </td>\\n          <td [formGroup]=\\\"relationFormGroup\\\">\\n            <input type=\\\"text\\\" formControlName=\\\"RELATION_DESC\\\" readonly class=\\\"form-control form-control-sm dk-description\\\">\\n          </td>\\n          <td [formGroup]=\\\"relationFormGroup\\\">\\n            <select class=\\\"form-control form-control-sm\\\" formControlName=\\\"CARDINALITY\\\">\\n              <option>[0..1]</option>\\n              <option>[1..1]</option>\\n              <option>[0..n]</option>\\n              <option>[1..n]</option>\\n            </select>\\n          </td>\\n        </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n</form>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {RoleMeta} from 'jor-angular';\nimport {AbstractControl, FormArray, FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {ActivatedRoute, ParamMap, Router} from '@angular/router';\nimport {Message, MessageService} from 'ui-message-angular';\nimport {ModelService} from '../../model.service';\nimport {DialogService} from '../../../dialog.service';\nimport {EntityService} from '../../../entity.service';\nimport {msgStore} from '../../../msgStore';\nimport {switchMap} from 'rxjs/operators';\nimport {Observable, of} from 'rxjs';\nimport {UniqueRoleValidator} from '../../model-validators';\n\n@Component({\n  selector: 'app-role-detail',\n  templateUrl: './role-detail.component.html',\n  styleUrls: ['./role-detail.component.css']\n})\nexport class RoleDetailComponent implements OnInit {\n  roleMeta: RoleMeta;\n  readonly = true;\n  isNewMode = false;\n  roleForm: FormGroup;\n  changedRole = {};\n  bypassProtection = false;\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private fb: FormBuilder,\n              private uniqueRoleValidator: UniqueRoleValidator,\n              private messageService: MessageService,\n              private modelService: ModelService,\n              private dialogService: DialogService,\n              private entityService: EntityService) {\n    this.messageService.setMessageStore(msgStore, 'EN');\n  }\n\n  get relationFormArray() {\n    return this.roleForm.get('RELATIONS') as FormArray;\n  }\n\n  ngOnInit() {\n    this.route.paramMap.pipe(\n      switchMap((params: ParamMap) => {\n        const roleID = params.get('roleID');\n        if (roleID === 'new') {\n          const role = new RoleMeta();\n          role.ROLE_ID = '';\n          role.ROLE_DESC = '';\n          role.RELATIONS = [];\n          this.isNewMode = true;\n          this.readonly = false;\n          this.bypassProtection = false;\n          return of(role);\n        } else {\n          this.readonly = true;\n          this.isNewMode = false;\n          return this.entityService.getRole(roleID);\n        }\n      })\n    ).subscribe(data => {\n      if ( 'msgName' in data) {\n        this.messageService.clearMessages();\n        this.roleMeta = null;\n        this.roleForm = null;\n        this.messageService.report(<Message>data);\n      } else {\n        this.messageService.clearMessages();\n        this.roleMeta = data;\n        this._generateRoleForm();\n      }\n    });\n  }\n\n  _generateRoleForm(): void {\n    this.roleForm = this.fb.group({});\n    this.roleForm.addControl('ROLE_ID', new FormControl(this.roleMeta.ROLE_ID, {updateOn: 'blur'}));\n    if (this.isNewMode) {\n      this.roleForm.get('ROLE_ID').setValidators(this._validateRoleID);\n      this.roleForm.get('ROLE_ID').setAsyncValidators(this.uniqueRoleValidator.validate.bind(this.uniqueRoleValidator));\n    }\n    this.roleForm.addControl('ROLE_DESC', new FormControl(this.roleMeta.ROLE_DESC));\n\n    // Compose Involves\n    const formArray = [];\n    this.roleMeta.RELATIONS.forEach( relation => {\n      formArray.push(this.fb.group({\n        RELATION_ID: [relation.RELATION_ID],\n        RELATION_DESC: [relation.RELATION_DESC],\n        CARDINALITY: [{value: relation.CARDINALITY, disabled: this.readonly}]\n      }));\n    });\n    if (this.isNewMode) {\n      formArray.push(\n        this.fb.group({\n          RELATION_ID: [''],\n          RELATION_DESC: [''],\n          CARDINALITY: ['[0..1]']\n        }));\n    }\n    this.roleForm.addControl('RELATIONS', new FormArray(formArray));\n  }\n\n  _validateRoleID(c: FormControl) {\n    if (c.value.trim() === '') {\n      return {message: 'Role ID is mandatory'};\n    }\n\n    if (c.value.toString().toLowerCase() === 'new') {\n      return {message: '\"NEW/new\" is reserved, thus is not allowed to use!'};\n    }\n\n    return null;\n  }\n\n  switchEditDisplay() {\n    if (this.isNewMode) {\n      this.dialogService.confirm('Discard the new Role?').subscribe(confirm => {\n        if (confirm) {\n          this._switch2DisplayMode();\n          this.roleMeta = null;\n          this.modelService.sendDialogAnswer('OK');\n        } else {\n          this.modelService.sendDialogAnswer('CANCEL');\n        }\n      });\n      return;\n    }\n\n    if (!this.readonly) { // In Change Mode -> Display Mode\n      if (this.roleForm.dirty) {\n        this.dialogService.confirm('Discard changes?').subscribe(confirm => {\n          if (confirm) { // Discard changes and switch to Display Mode\n            this._generateRoleForm();\n            this.roleForm.reset(this.roleForm.value);\n            this._switch2DisplayMode();\n          }\n        });\n      } else { // Switch to display mode\n        this._switch2DisplayMode();\n      }\n    } else { // In Display Mode -> Change Mode\n      this.readonly = false;\n      this.relationFormArray.controls.forEach(relationFormGroup => {\n        relationFormGroup.get('CARDINALITY').enable();\n      });\n      this.relationFormArray.push(\n        this.fb.group({\n          RELATION_ID: [''],\n          RELATION_DESC: [''],\n          CARDINALITY: ['[0..1]']\n        })\n      );\n    }\n  }\n\n  _switch2DisplayMode(): void {\n    this.readonly = true;\n    let lastIndex = this.relationFormArray.length - 1;\n    while (lastIndex >= 0 && this.relationFormArray.controls[lastIndex].get('ROLE_ID').value.trim() === '') {\n      this.relationFormArray.removeAt(lastIndex);\n      lastIndex--;\n    }\n    this.relationFormArray.controls.forEach(relationFormGroup => {\n      relationFormGroup.get('CARDINALITY').disable();\n    });\n  }\n\n  onChangeRoleID(): void {\n    this.modelService.updateRoleID(this.roleForm.get('ROLE_ID').value);\n  }\n\n  onChangeRoleDesc(): void {\n    this.modelService.updateRoleDesc(this.roleForm.get('ROLE_DESC').value);\n  }\n\n  deleteRelation(index: number): void {\n    if (index !== this.relationFormArray.length - 1) {\n      this.relationFormArray.removeAt(index);\n      this.relationFormArray.markAsDirty();\n    }\n  }\n\n  onChangeRelationID(index: number): void {\n    const currentRelationFormGroup = this.relationFormArray.controls[index];\n    if (this.relationFormArray.controls.findIndex((relationCtrl, i) =>\n      i !== index && relationCtrl.get('RELATION_ID').value === currentRelationFormGroup.get('RELATION_ID').value\n    ) !== -1) {\n      currentRelationFormGroup.get('RELATION_ID').setErrors({message: 'Duplicate Relations'});\n      return;\n    }\n\n    if (index === this.relationFormArray.length - 1 && currentRelationFormGroup.value.RELATION_ID.trim() !== '') {\n      // Only work for the last New line\n      this.relationFormArray.push(\n        this.fb.group({\n          RELATION_ID: [''],\n          RELATION_DESC: [''],\n          CARDINALITY: ['[0..1]']\n        })\n      );\n    }\n\n    this.entityService.getRelationDesc(currentRelationFormGroup.value.RELATION_ID).subscribe(data => {\n      if (data['msgCat']) {\n        currentRelationFormGroup.get('RELATION_ID').setErrors({message: data['msgShortText']});\n      } else {\n        currentRelationFormGroup.get('RELATION_DESC').setValue(data);\n      }\n    });\n  }\n\n  oldRelation(formGroup: AbstractControl): boolean {\n    return this.roleMeta.RELATIONS ?\n      this.roleMeta.RELATIONS.findIndex(\n        relation => relation.RELATION_ID === formGroup.get('RELATION_ID').value ) !== -1 :\n      false;\n  }\n\n  canDeactivate(): Observable<boolean> | boolean {\n    if (this.isNewMode || (!this.bypassProtection && this.roleForm && this.roleForm.dirty)) {\n      const dialogAnswer = this.dialogService.confirm('Discard changes?');\n      dialogAnswer.subscribe(confirm => {\n        if (confirm) {\n          this.modelService.sendDialogAnswer('OK');\n        } else {\n          this.modelService.sendDialogAnswer('CANCEL');\n        }\n      });\n      return dialogAnswer;\n    } else {\n      return true;\n    }\n  }\n\n  save(): void {\n    if (!this.roleForm.dirty) {\n      return this.messageService.reportMessage('MODEL', 'NO_CHANGE', 'S');\n    }\n\n    if (!this.roleForm.valid) {\n      return this.messageService.reportMessage('MODEL', 'INVALID_DATA', 'E');\n    }\n\n    if (this.isNewMode) {\n      this.changedRole['action'] = 'add';\n      this.changedRole['ROLE_ID'] = this.roleForm.controls['ROLE_ID'].value;\n    } else {\n      this.changedRole['action'] = 'update';\n      this.changedRole['ROLE_ID'] = this.roleMeta.ROLE_ID;\n    }\n    if (this.roleForm.controls['ROLE_DESC'].dirty) {\n      this.changedRole['ROLE_DESC'] = this.roleForm.controls['ROLE_DESC'].value;\n    }\n\n    this._processChangedRelation();\n\n    this.entityService.saveRole(this.changedRole)\n      .subscribe(data => this._postActivityAfterSavingRole(data));\n  }\n\n  _processChangedRelation(): void {\n    const changedRelations = [];\n    if (!this.relationFormArray.dirty) { return; }\n\n    this.changedRole['RELATIONS'] = changedRelations;\n\n    this.relationFormArray.controls.forEach(relationControl => {\n      if (relationControl.get('RELATION_ID').value.trim() === '') { return; }\n      let action;\n      const index = this.roleMeta.RELATIONS.findIndex(\n        relation => relationControl.get('RELATION_ID').value === relation.RELATION_ID);\n      if (index === -1) {// New Add Case\n        action = 'add';\n      } else {\n        if (relationControl.dirty) {// Change Case\n          action = 'update';\n        }\n      }\n      if (action) {\n        changedRelations.push({\n          action: action, RELATION_ID: relationControl.get('RELATION_ID').value, CARDINALITY: relationControl.get('CARDINALITY').value\n        });\n      }\n    });\n\n    // Deletion Case\n    this.roleMeta.RELATIONS.forEach(relation => {\n      const index = this.relationFormArray.controls.findIndex(\n        relationControl => relationControl.get('RELATION_ID').value === relation.RELATION_ID);\n      if (index === -1) { // The attribute must be deleted\n        const deletedRelation = {action: 'delete', RELATION_ID: relation.RELATION_ID};\n        changedRelations.push(deletedRelation);\n      }\n    });\n  }\n\n  _postActivityAfterSavingRole(data: any) {\n    if (data && data['ROLE_ID']) {\n      if (this.isNewMode) {\n        this.isNewMode = false;\n        this.bypassProtection = true;\n        this.router.navigate(['/model/role/' + data['ROLE_ID']]);\n      } else {\n        this.readonly = true;\n        this.roleMeta = data;\n        this._generateRoleForm();\n        this.changedRole = {};\n        this.messageService.reportMessage('MODEL', 'ROLE_SAVED', 'S', this.roleMeta.ROLE_ID);\n      }\n    } else {\n      if (data instanceof Array) {\n        data.forEach(err => this.messageService.add(err));\n      } else {\n        this.messageService.report(<Message>data);\n      }\n    }\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZGVsL3JvbGUvcm9sZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-4\\\">\\n    <div class=\\\"btn-toolbar justify-content-between mb-2\\\" role=\\\"toolbar\\\">\\n      <div class=\\\"input-group\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\" #searchBox (keyup)=\\\"searchRole(searchBox.value)\\\" >\\n      </div>\\n      <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Add\\\" (click)=\\\"newRole()\\\">\\n        <span class=\\\"fas fa-plus\\\"></span>\\n      </button>\\n    </div>\\n    <div class=\\\"list-group\\\">\\n      <a *ngFor=\\\"let role of roleList\\\" routerLink=\\\"/model/role/{{role.ROLE_ID}}\\\" routerLinkActive=\\\"active\\\"\\n         (click)=\\\"onSelect(role)\\\" class=\\\"list-group-item list-group-item-action flex-column align-items-start\\\">\\n        <div class=\\\"d-flex w-100 justify-content-between\\\">\\n          <h5 class=\\\"mb-1\\\">{{role.ROLE_ID}}</h5>\\n          <small>version: {{role.VERSION_NO}}</small>\\n        </div>\\n        <p class=\\\"mb-1\\\">{{role.ROLE_DESC}}</p>\\n        <!--<small>created by: {{entityType.CREATE_BY}} @{{entityType.CREATE_TIME}}</small> <br/>-->\\n        <small>last changed by: {{role.LAST_CHANGE_BY}} @{{role.LAST_CHANGE_TIME}}</small>\\n      </a>\\n    </div>\\n  </div>\\n  <div class=\\\"col-8\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { RoleH} from 'jor-angular';\nimport {Subject} from 'rxjs';\nimport {EntityService} from '../../entity.service';\nimport {ModelService} from '../model.service';\nimport {MessageService} from 'ui-message-angular';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {msgStore} from '../../msgStore';\nimport {debounceTime, distinctUntilChanged, switchMap} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-role',\n  templateUrl: './role.component.html',\n  styleUrls: ['./role.component.css']\n})\nexport class RoleComponent implements OnInit {\n  roleList: RoleH[];\n  private searchTerms = new Subject<string>();\n  private theSelectedRole: RoleH;\n\n  constructor(private entityService: EntityService,\n              private modelService: ModelService,\n              private messageService: MessageService,\n              private route: ActivatedRoute,\n              private router: Router) {\n    this.messageService.setMessageStore(msgStore, 'EN');\n  }\n\n  ngOnInit() {\n    this.searchTerms.pipe(\n      debounceTime(300),\n      distinctUntilChanged(),\n      switchMap((term: string) => this.entityService.listRole(term)),\n    ).subscribe(data => {\n      this.roleList = data;\n      let roleID;\n      if (this.route.snapshot.firstChild) {\n        roleID = this.route.snapshot.firstChild.paramMap.get('roleID');\n      }\n      if (roleID ) {\n        if (roleID === 'new') {\n          this._newRole();\n        } else {\n          this.onSelect(this.roleList.find(role => role.ROLE_ID === roleID ));\n        }\n      }\n    });\n    this.searchRole(''); // The initial list\n\n    this.modelService.theSelectedRole$.subscribe( data => {\n      if (this.theSelectedRole) {\n        this.theSelectedRole.ROLE_ID = data['ROLE_ID'];\n        this.theSelectedRole.ROLE_DESC = data['ROLE_DESC'];\n      }\n    });\n\n    this.modelService.dialogAnswer$.subscribe( answer => {\n      if (answer === 'OK' && !this.roleList[0].CREATE_TIME) {\n        this.roleList.splice(0, 1); // Remove the first one.\n      } else if (answer === 'CANCEL') {\n        const roleID = this.route.snapshot.firstChild.paramMap.get('roleID');\n        if (roleID) {\n          if (roleID === 'new') {\n            this.onSelect(this.roleList[0]);\n          } else {\n            this.onSelect(this.roleList.find(role => role.ROLE_ID === roleID));\n          }\n        }\n      }\n    });\n  }\n\n  onSelect(role: RoleH): void {\n    if (role) {\n      this.theSelectedRole = role;\n      this.modelService.setSelectedRole(role);\n    }\n  }\n\n  searchRole(term: string): void {\n    this.searchTerms.next(term);\n  }\n\n  newRole(): void {\n    if (this.route.snapshot.firstChild && this.route.snapshot.firstChild.paramMap.get('roleID') === 'new') {\n      this.messageService.reportMessage('MODEL', 'UNSAVED_NEW', 'E');\n    } else {\n      this._newRole();\n      this.router.navigate(['/model/role/new']);\n    }\n  }\n\n  _newRole(): void {\n    this.theSelectedRole = new RoleH();\n    this.theSelectedRole.ROLE_ID = 'new';\n    this.theSelectedRole.ROLE_DESC = 'description';\n    this.theSelectedRole.VERSION_NO = 1;\n    this.theSelectedRole.LAST_CHANGE_BY = 'DH001';\n    this.theSelectedRole.LAST_CHANGE_TIME = new Date().toDateString();\n    this.modelService.setSelectedRole(this.theSelectedRole);\n    this.roleList.splice(0, 0, this.theSelectedRole);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {ActivatedRouteSnapshot, CanDeactivate, RouterStateSnapshot} from '@angular/router';\nimport { Observable } from 'rxjs';\n\nexport interface CanComponentDeactivate {\n  canDeactivate: () => Observable<boolean> | Promise<boolean> | boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WorkProtectionGuard implements CanDeactivate<CanComponentDeactivate>  {\n\n  canDeactivate(component: CanComponentDeactivate,\n                currentRoute: ActivatedRouteSnapshot,\n                currentState: RouterStateSnapshot,\n                nextState?: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    return component.canDeactivate ? component.canDeactivate() : true;\n  }\n}\n"],"sourceRoot":""}
{"version":3,"sources":["src/app/model/attribute-meta/attribute-meta.component.html","src/app/model/data-domain/data-domain-detail/data-domain-detail.component.html","src/app/model/data-domain/data-domain.component.html","src/app/model/data-element/data-element-detail/data-element-detail.component.html","src/app/model/data-element/data-element.component.html","src/app/model/entity-type/entity-type-detail/entity-type-detail.component.html","src/app/model/entity-type/entity-type.component.html","src/app/model/model.component.html","src/app/model/relation/relation-detail/relation-detail.component.html","src/app/model/relation/relation.component.html","src/app/model/relationship/relationship-detail/relationship-detail.component.html","src/app/model/relationship/relationship.component.html","src/app/model/role/role-detail/role-detail.component.html","src/app/model/role/role.component.html","src/app/model/attribute-meta/attribute-meta.component.css","src/app/model/attribute-meta/attribute-meta.component.ts","src/app/model/data-domain/data-domain-detail/data-domain-detail.component.css","src/app/model/data-domain/data-domain-detail/data-domain-detail.component.ts","src/app/model/data-domain/data-domain.component.css","src/app/model/data-domain/data-domain.component.ts","src/app/model/data-element/data-element-detail/data-element-detail.component.css","src/app/model/data-element/data-element-detail/data-element-detail.component.ts","src/app/model/data-element/data-element.component.css","src/app/model/data-element/data-element.component.ts","src/app/model/entity-type/entity-type-detail/entity-type-detail.component.css","src/app/model/entity-type/entity-type-detail/entity-type-detail.component.ts","src/app/model/entity-type/entity-type.component.css","src/app/model/entity-type/entity-type.component.ts","src/app/model/model-routing.module.ts","src/app/model/model-validators.ts","src/app/model/model.component.css","src/app/model/model.component.ts","src/app/model/model.module.ts","src/app/model/model.service.ts","src/app/model/relation/relation-detail/relation-detail.component.css","src/app/model/relation/relation-detail/relation-detail.component.ts","src/app/model/relation/relation.component.css","src/app/model/relation/relation.component.ts","src/app/model/relationship/relationship-detail/relationship-detail.component.css","src/app/model/relationship/relationship-detail/relationship-detail.component.ts","src/app/model/relationship/relationship.component.css","src/app/model/relationship/relationship.component.ts","src/app/model/role/role-detail/role-detail.component.css","src/app/model/role/role-detail/role-detail.component.ts","src/app/model/role/role.component.css","src/app/model/role/role.component.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"card mt-2\\\">\\n  <div class=\\\"card-header\\\"><span class=\\\"fab fa-elementor\\\"></span> Attribute</div>\\n  <div class=\\\"card-body\\\">\\n    <table class=\\\"table table-bordered table-sm dk-table\\\" [formGroup]=\\\"parentForm\\\">\\n      <thead class=\\\"thead-light\\\">\\n        <tr>\\n          <th scope=\\\"col\\\">Action</th>\\n          <th scope=\\\"col\\\">Attribute Name</th>\\n          <th scope=\\\"col\\\">Description</th>\\n          <th scope=\\\"col\\\">Data Element</th>\\n          <th scope=\\\"col\\\">Data Type</th>\\n          <th scope=\\\"col\\\">Length</th>\\n          <th scope=\\\"col\\\">Decimal</th>\\n          <th scope=\\\"col\\\" title=\\\"Primary Key\\\" [hidden]=\\\"relationID.substring(0,2) !== 'r_'\\\">PK</th>\\n          <th scope=\\\"col\\\" title=\\\"Auto Incremental\\\" [hidden]=\\\"relationID.substring(0,2) !== 'r_'\\\">AI</th>\\n        </tr>\\n      </thead>\\n\\n      <tbody formArrayName=\\\"ATTRIBUTES\\\">\\n        <tr *ngFor=\\\"let attrFormGroup of formArray.controls; let i = index\\\">\\n          <td class=\\\"dk-actions\\\">\\n            <button class=\\\"btn btn-sm\\\" type=\\\"button\\\" id=\\\"delete\\\" [disabled]=\\\"readonly || isFieldGray(attrFormGroup.value)\\\"\\n                    (click)=\\\"deleteAttribute(i)\\\" title=\\\"Delete\\\">\\n              <span class=\\\"far fa-trash-alt\\\"></span>\\n            </button>\\n            <button class=\\\"btn btn-sm\\\" type=\\\"button\\\" id=\\\"add\\\" [disabled]=\\\"readonly || isFieldGray(attrFormGroup.value)\\\"\\n                    (click)=\\\"insertAttribute(i)\\\" title=\\\"Insert\\\">\\n              <span class=\\\"fas fa-plus\\\"></span>\\n            </button>\\n            <button class=\\\"btn btn-sm\\\" type=\\\"button\\\" id=\\\"switch\\\" [disabled]=\\\"readonly || isFieldGray(attrFormGroup.value)\\\"\\n                    (click)=\\\"switchBtwDEAndDT(i)\\\" title=\\\"Switch btw Data Element and Data Type\\\">\\n              <span class=\\\"far fa-lightbulb\\\"></span>\\n            </button>\\n          </td>\\n          <td [formGroup]=\\\"attrFormGroup\\\">\\n            <input type=\\\"text\\\" formControlName=\\\"ATTR_NAME\\\" [readonly]=\\\"readonly || isFieldGray(attrFormGroup.value)\\\"\\n                   class=\\\"form-control form-control-sm\\\" (change)=\\\"onChangeAttributeName(i)\\\">\\n          </td>\\n          <td [formGroup]=\\\"attrFormGroup\\\">\\n            <input type=\\\"text\\\" formControlName=\\\"ATTR_DESC\\\" class=\\\"form-control form-control-sm dk-description\\\"\\n                   [readonly]=\\\"readonly || isFieldGray(attrFormGroup.value)\\\">\\n          </td>\\n          <td [formGroup]=\\\"attrFormGroup\\\">\\n            <div class=\\\"input-group dk-dataElement\\\">\\n              <input type=\\\"text\\\" formControlName=\\\"DATA_ELEMENT\\\" [readonly]=\\\"readonly || isFieldGray(attrFormGroup.value)\\\"\\n                     class=\\\"form-control form-control-sm\\\" (change)=\\\"onChangeDataElement(i)\\\">\\n              <div class=\\\"invalid-tooltip\\\">\\n                {{attrFormGroup.get('DATA_ELEMENT').errors?.message}}\\n              </div>\\n              <div class=\\\"input-group-append\\\">\\n                <button class=\\\"btn btn-outline-secondary btn-sm\\\" type=\\\"button\\\" id=\\\"searchDataElement\\\"\\n                        (click)=\\\"onSearchHelp(attrFormGroup, i)\\\">\\n                  <span class=\\\"fas fa-search\\\"></span>\\n                </button>\\n              </div>\\n            </div>\\n          </td>\\n          <td [formGroup]=\\\"attrFormGroup\\\">\\n            <select formControlName=\\\"DATA_TYPE\\\" (change)=\\\"onChangeDataType(attrFormGroup)\\\" class=\\\"form-control form-control-sm\\\">\\n              <option *ngFor=\\\"let opt of dataTypes\\\" [value]=\\\"opt.key\\\">{{opt.value}}</option>\\n            </select>\\n          </td>\\n          <td [formGroup]=\\\"attrFormGroup\\\">\\n            <input type=\\\"number\\\" formControlName=\\\"DATA_LENGTH\\\" class=\\\"form-control form-control-sm dk-number\\\"\\n                   [readonly]=\\\"(+attrFormGroup.value.DATA_TYPE !== 1 && +attrFormGroup.value.DATA_TYPE !== 4) || readonly || isFieldGray(attrFormGroup.value)\\\">\\n          </td>\\n          <td [formGroup]=\\\"attrFormGroup\\\">\\n            <input type=\\\"number\\\" formControlName=\\\"DECIMAL\\\" class=\\\"form-control form-control-sm dk-number\\\"\\n                   [readonly]=\\\"+attrFormGroup.value.DATA_TYPE !== 4 || readonly || isFieldGray(attrFormGroup.value)\\\">\\n          </td>\\n          <td [formGroup]=\\\"attrFormGroup\\\" [hidden]=\\\"relationID.substring(0,2) !== 'r_'\\\">\\n            <input type=\\\"checkbox\\\" formControlName=\\\"PRIMARY_KEY\\\">\\n          </td>\\n          <td [formGroup]=\\\"attrFormGroup\\\" [hidden]=\\\"relationID.substring(0,2) !== 'r_'\\\">\\n            <input type=\\\"checkbox\\\" formControlName=\\\"AUTO_INCREMENT\\\">\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</div>\\n<dk-app-search-help></dk-app-search-help>\\n\"","export default \"<div class=\\\"btn-toolbar mb-2\\\"  role=\\\"toolbar\\\"\\n     [ngClass]=\\\"{'justify-content-end': isSearchListShown, 'justify-content-between': !isSearchListShown}\\\" >\\n  <button *ngIf=\\\"!isSearchListShown\\\" class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Show List\\\" (click)=\\\"showSearchList()\\\">\\n    <span class=\\\"fas fa-arrow-right\\\"></span>\\n  </button>\\n\\n  <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n    <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Edit/Display\\\" (click)=\\\"switchEditDisplay()\\\">\\n      <span *ngIf=\\\"readonly\\\" class=\\\"fas fa-edit\\\"></span>\\n      <span *ngIf=\\\"!readonly\\\" class=\\\"fas fa-glasses\\\"></span>\\n    </button>\\n    <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Save\\\" (click)=\\\"save()\\\">\\n      <span class=\\\"fas fa-save\\\"></span>\\n    </button>\\n  </div>\\n</div>\\n\\n<dk-message></dk-message>\\n<form *ngIf=\\\"dataDomainMeta\\\" [formGroup]=\\\"dataDomainForm\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"dataDomain\\\" class=\\\"col-form-label form-control-sm\\\">Data Domain:\\n      <span [class.ng-invalid]=\\\"dataDomainForm.get('DOMAIN_ID').invalid\\\" class=\\\"dk-invalid-feedback\\\">\\n        {{dataDomainForm.get('DOMAIN_ID').errors?.message}}\\n      </span>\\n    </label>\\n    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"dataDomain\\\" [readonly]=\\\"readonly || !isNewMode\\\"\\n           (change)=\\\"onChangeDataDomainID()\\\" name=\\\"dataDomain\\\" formControlName=\\\"DOMAIN_ID\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"dataDomain-desc\\\" class=\\\"col-form-label form-control-sm\\\">Data Domain Description:</label>\\n    <textarea class=\\\"form-control\\\" id=\\\"dataDomain-desc\\\" name=\\\"dataDomain-desc\\\" rows=\\\"2\\\"\\n              formControlName=\\\"DOMAIN_DESC\\\" [readonly]=\\\"readonly\\\" (change)=\\\"onChangeDataDomainDesc()\\\"></textarea>\\n  </div>\\n\\n\\n  <div class=\\\"card mt-2\\\">\\n    <div class=\\\"card-header\\\">Data Type</div>\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"ml-2 mb-2 row\\\">\\n        <select formControlName=\\\"DATA_TYPE\\\" (change)=\\\"onChangeDataType(dataDomainForm)\\\"\\n                class=\\\"col-sm-8 col-lg-4 form-control form-control-sm\\\">\\n          <option *ngFor=\\\"let opt of dataTypes\\\" [value]=\\\"opt.key\\\">{{opt.value}}</option>\\n        </select>\\n      </div>\\n\\n      <div class=\\\"ml-0 row\\\">\\n        <div class=\\\"form-group col-8 col-sm-4 col-lg-2\\\">\\n          <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"data-length\\\">Length:\\n          </label>\\n          <input type=\\\"number\\\" formControlName=\\\"DATA_LENGTH\\\" id=\\\"data-length\\\" name=\\\"data-length\\\"\\n                 class=\\\"form-control form-control-sm\\\" [readonly]=\\\"readonly\\\" >\\n          <span class=\\\"dk-invalid-feedback\\\">{{dataDomainForm.get('DATA_LENGTH').errors?.message}}</span>\\n        </div>\\n\\n        <div class=\\\"form-group col-8 col-sm-4 col-lg-2\\\">\\n          <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"decimal-place\\\">Decimal Place:\\n          </label>\\n          <input type=\\\"number\\\" formControlName=\\\"DECIMAL\\\" id=\\\"decimal-place\\\" name=\\\"decimal-place\\\"\\n                 class=\\\"form-control form-control-sm\\\" [readonly]=\\\"readonly\\\">\\n          <span class=\\\"dk-invalid-feedback\\\">{{dataDomainForm.get('DECIMAL').errors?.message}}</span>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"card mt-3\\\">\\n    <div class=\\\"card-header\\\">Domain Definition</div>\\n    <div class=\\\"card-body\\\">\\n      <div *ngIf=\\\"enableGeneralType\\\" class=\\\"card mb-3\\\">\\n        <div class=\\\"ml-2 mt-2 custom-control custom-radio\\\">\\n          <input type=\\\"radio\\\" class=\\\"custom-control-input\\\" id=\\\"general-type\\\" name=\\\"DOMAIN_TYPE\\\"\\n                 [value]=\\\"0\\\" formControlName=\\\"DOMAIN_TYPE\\\" (change)=\\\"onChangeDomainType(dataDomainForm)\\\">\\n          <label class=\\\"custom-control-label\\\" for=\\\"general-type\\\">General Type</label>\\n        </div>\\n        <div class=\\\"card-body row\\\">\\n          <div class=\\\"form-check col-sm-3 mx-3\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" formControlName=\\\"UNSIGNED\\\" id=\\\"unsigned\\\" name=\\\"unsigned\\\">\\n            <label class=\\\"form-check-label\\\" for=\\\"unsigned\\\">Unsigned</label>\\n          </div>\\n          <div class=\\\"form-check col-sm-3 mx-3\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" formControlName=\\\"CAPITAL_ONLY\\\" id=\\\"CAPITAL_ONLY\\\" name=\\\"CAPITAL_ONLY\\\">\\n            <label class=\\\"form-check-label\\\" for=\\\"CAPITAL_ONLY\\\">Capital Only</label>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"enableRegExpr\\\" class=\\\"card mb-3\\\">\\n        <div class=\\\"ml-2 mt-2 custom-control custom-radio\\\">\\n          <input type=\\\"radio\\\" class=\\\"custom-control-input\\\" id=\\\"regular-expression\\\" name=\\\"DOMAIN_TYPE\\\"\\n                 [value]=\\\"1\\\" formControlName=\\\"DOMAIN_TYPE\\\" (change)=\\\"onChangeDomainType(dataDomainForm)\\\">\\n          <label class=\\\"custom-control-label\\\" for=\\\"regular-expression\\\">Regular Expression\\n            <span [class.ng-invalid]=\\\"dataDomainForm.get('REG_EXPR').invalid\\\" class=\\\"dk-invalid-feedback\\\">\\n              {{dataDomainForm.get('REG_EXPR').errors?.message}}\\n            </span>\\n          </label>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"form-group\\\">\\n            <input type=\\\"text\\\" formControlName=\\\"REG_EXPR\\\" id=\\\"REG_EXPR\\\" name=\\\"REG_EXPR\\\"\\n                   class=\\\"form-control form-control-sm\\\" [readonly]=\\\"readonly\\\" >\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"enableValueRelation\\\" class=\\\"card mb-2\\\">\\n        <div class=\\\"ml-2 mt-2 custom-control custom-radio\\\">\\n          <input type=\\\"radio\\\" class=\\\"custom-control-input\\\" id=\\\"value-relation\\\" name=\\\"DOMAIN_TYPE\\\"\\n                 [value]=\\\"2\\\" formControlName=\\\"DOMAIN_TYPE\\\" (change)=\\\"onChangeDomainType(dataDomainForm)\\\">\\n          <label class=\\\"custom-control-label\\\" for=\\\"value-relation\\\">Value Entity Relation\\n            <span [class.ng-invalid]=\\\"dataDomainForm.get('ENTITY_ID').invalid\\\" class=\\\"dk-invalid-feedback\\\">\\n              {{dataDomainForm.get('ENTITY_ID').errors?.message}}\\n            </span>\\n          </label>\\n        </div>\\n        <div class=\\\"card-body row\\\">\\n          <div class=\\\"input-group col-lg-4 ml-2 mb-3\\\">\\n            <input type=\\\"text\\\" formControlName=\\\"ENTITY_ID\\\" id=\\\"ENTITY_ID\\\" name=\\\"ENTITY_ID\\\" placeholder=\\\"Entity Type\\\"\\n                   class=\\\"form-control form-control-sm\\\" [readonly]=\\\"readonly\\\" (change)=\\\"onChangeEntityID(dataDomainForm)\\\">\\n            <div class=\\\"input-group-append\\\">\\n              <button class=\\\"btn btn-outline-secondary btn-sm\\\" type=\\\"button\\\" id=\\\"searchEntity\\\" (click)=\\\"onEntitySearchHelp(dataDomainForm)\\\">\\n                <span class=\\\"fas fa-search\\\"></span>\\n              </button>\\n            </div>\\n          </div>\\n          <select formControlName=\\\"RELATION_ID\\\" class=\\\"form-control form-control-sm col-lg-4 ml-4 mr-3\\\">\\n            <option *ngFor=\\\"let relation of relationsOfEntity\\\" [value]=\\\"relation\\\">{{relation}}</option>\\n          </select>\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"enableArrayOrInterval\\\" class=\\\"card mb-3\\\">\\n        <div class=\\\"ml-2 mt-2 row\\\">\\n          <div class=\\\"custom-control custom-radio col-3\\\">\\n            <input type=\\\"radio\\\" class=\\\"custom-control-input\\\" id=\\\"value-array\\\" name=\\\"DOMAIN_TYPE\\\"\\n                   [value]=\\\"3\\\" formControlName=\\\"DOMAIN_TYPE\\\" (change)=\\\"onChangeDomainType(dataDomainForm)\\\">\\n            <label class=\\\"custom-control-label\\\" for=\\\"value-array\\\">Value Array</label>\\n          </div>\\n          <div class=\\\"custom-control custom-radio col-3\\\">\\n            <input type=\\\"radio\\\" class=\\\"custom-control-input\\\" id=\\\"value-interval\\\" name=\\\"DOMAIN_TYPE\\\"\\n                   [value]=\\\"4\\\" formControlName=\\\"DOMAIN_TYPE\\\" (change)=\\\"onChangeDomainType(dataDomainForm)\\\">\\n            <label class=\\\"custom-control-label\\\" for=\\\"value-interval\\\">Value Interval</label>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"card-body\\\">\\n          <table class=\\\"table table-bordered dk-table\\\">\\n            <thead class=\\\"thead-light\\\">\\n              <tr>\\n                <th scope=\\\"col\\\">Low Value</th>\\n                <th *ngIf=\\\"dataDomainForm.get('DOMAIN_TYPE').value === 4\\\" scope=\\\"col\\\">High Value</th>\\n                <th scope=\\\"col\\\">Description</th>\\n                <th scope=\\\"col\\\">Actions</th>\\n              </tr>\\n            </thead>\\n\\n            <tbody formArrayName=\\\"DOMAIN_VALUES\\\">\\n            <tr *ngFor=\\\"let domainValueForm of domainValueFormArray.controls; let i = index\\\">\\n              <td [formGroup]=\\\"domainValueForm\\\">\\n                <div class=\\\"input-group\\\">\\n                  <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"LOW_VALUE\\\" maxlength=\\\"10\\\"\\n                         [readonly]=\\\"readonly\\\" (change)=\\\"onChangeDomainValue(i)\\\">\\n                  <div class=\\\"invalid-tooltip\\\">\\n                    {{domainValueForm.get('LOW_VALUE').errors?.message}}\\n                  </div>\\n                </div>\\n              </td>\\n              <td *ngIf=\\\"dataDomainForm.get('DOMAIN_TYPE').value === 4\\\" [formGroup]=\\\"domainValueForm\\\">\\n                <div class=\\\"input-group\\\">\\n                  <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"HIGH_VALUE\\\"\\n                         [readonly]=\\\"readonly\\\"  (change)=\\\"onChangeDomainValue(i)\\\">\\n                  <div class=\\\"invalid-tooltip\\\">\\n                    {{domainValueForm.get('HIGH_VALUE').errors?.message}}\\n                  </div>\\n                </div>\\n              </td>\\n              <td [formGroup]=\\\"domainValueForm\\\" class=\\\"dk-description\\\">\\n                <input  class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"LOW_VALUE_TEXT\\\" maxlength=\\\"100\\\"\\n                        [readonly]=\\\"readonly\\\">\\n              </td>\\n              <td class=\\\"dk-actions\\\">\\n                <button class=\\\"btn btn-sm\\\" type=\\\"button\\\" id=\\\"add\\\" [disabled]=\\\"readonly\\\" (click)=\\\"insertDomainValue(i)\\\" title=\\\"Insert\\\">\\n                  <span class=\\\"fas fa-plus\\\"></span>\\n                </button>\\n                <button class=\\\"btn btn-sm\\\" type=\\\"button\\\" id=\\\"delete\\\" [disabled]=\\\"readonly\\\" (click)=\\\"deleteDomainValue(i)\\\" title=\\\"Delete\\\">\\n                  <span class=\\\"far fa-trash-alt\\\"></span>\\n                </button>\\n              </td>\\n            </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n      </div>\\n\\n    </div>\\n  </div>\\n</form>\\n\\n<dk-app-search-help></dk-app-search-help>\\n\"","export default \"<div class=\\\"row\\\">\\n  <div *ngIf=\\\"isSearchListShown\\\" class=\\\"col-3\\\">\\n    <div class=\\\"btn-toolbar justify-content-between mb-2\\\" role=\\\"toolbar\\\">\\n      <div class=\\\"input-group\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\" #searchBox (keyup)=\\\"searchDataDomain(searchBox.value)\\\" >\\n      </div>\\n\\n      <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n        <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Hide\\\" (click)=\\\"hideSearchList()\\\" [disabled]=\\\"!theSelectedDataDomain\\\">\\n          <span class=\\\"fas fa-arrow-left\\\"></span>\\n        </button>\\n        <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Add\\\" (click)=\\\"newDataDomian()\\\">\\n          <span class=\\\"fas fa-plus\\\"></span>\\n        </button>\\n      </div>\\n    </div>\\n    <div class=\\\"list-group\\\">\\n      <a *ngFor=\\\"let dataDomain of dataDomainList\\\" routerLink=\\\"/model/data-domain/{{dataDomain.DOMAIN_ID}}\\\" routerLinkActive=\\\"active\\\"\\n         (click)=\\\"onSelect(dataDomain)\\\" class=\\\"list-group-item list-group-item-action flex-column align-items-start\\\">\\n        <div class=\\\"d-flex w-100 justify-content-between\\\">\\n          <h5 class=\\\"mb-1\\\">{{dataDomain.DOMAIN_ID}}</h5>\\n          <small>version: {{dataDomain.VERSION_NO}}</small>\\n        </div>\\n        <p class=\\\"mb-1\\\">{{dataDomain.DOMAIN_DESC}}</p>\\n        <!--<small>created by: {{entityType.CREATE_BY}} @{{entityType.CREATE_TIME}}</small> <br/>-->\\n        <small>last changed by: {{dataDomain.LAST_CHANGE_BY}} @{{dataDomain.LAST_CHANGE_TIME}}</small>\\n      </a>\\n    </div>\\n  </div>\\n  <div [ngClass]=\\\"{'col-9': isSearchListShown, 'col-12': !isSearchListShown}\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"btn-toolbar mb-2\\\"  role=\\\"toolbar\\\"\\n     [ngClass]=\\\"{'justify-content-end': isSearchListShown, 'justify-content-between': !isSearchListShown}\\\" >\\n  <button *ngIf=\\\"!isSearchListShown\\\" class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Show List\\\" (click)=\\\"showSearchList()\\\">\\n    <span class=\\\"fas fa-arrow-right\\\"></span>\\n  </button>\\n\\n  <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n    <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Edit/Display\\\" (click)=\\\"switchEditDisplay()\\\">\\n      <span *ngIf=\\\"readonly\\\" class=\\\"fas fa-edit\\\"></span>\\n      <span *ngIf=\\\"!readonly\\\" class=\\\"fas fa-glasses\\\"></span>\\n    </button>\\n    <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Save\\\" (click)=\\\"save()\\\">\\n      <span class=\\\"fas fa-save\\\"></span>\\n    </button>\\n  </div>\\n</div>\\n\\n<dk-message></dk-message>\\n<form *ngIf=\\\"dataElementMeta\\\" [formGroup]=\\\"dataElementForm\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"dataElement\\\" class=\\\"col-form-label form-control-sm\\\">Data Element:\\n      <span [class.ng-invalid]=\\\"dataElementForm.get('ELEMENT_ID').invalid\\\" class=\\\"dk-invalid-feedback\\\">\\n        {{dataElementForm.get('ELEMENT_ID').errors?.message}}\\n      </span>\\n    </label>\\n    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"dataElement\\\" [readonly]=\\\"readonly || !isNewMode\\\"\\n           (change)=\\\"onChangeDataElementID()\\\" name=\\\"dataElement\\\" formControlName=\\\"ELEMENT_ID\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"dataElement-desc\\\" class=\\\"col-form-label form-control-sm\\\">Data Element Description:\\n    </label>\\n    <textarea class=\\\"form-control\\\" id=\\\"dataElement-desc\\\" name=\\\"dataElement-desc\\\" rows=\\\"2\\\"\\n              formControlName=\\\"ELEMENT_DESC\\\" [readonly]=\\\"readonly\\\" (change)=\\\"onChangeDataElementDesc()\\\"></textarea>\\n  </div>\\n\\n  <div class=\\\"card mt-2\\\">\\n    <div class=\\\"card-header\\\">Data Type</div>\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"ml-2 mb-3 row\\\">\\n        <div class=\\\"col-8 col-lg-3 custom-control custom-radio\\\">\\n          <input type=\\\"radio\\\" class=\\\"custom-control-input\\\" id=\\\"use-domain\\\" name=\\\"USE_DOMAIN\\\"\\n                 [value]=\\\"1\\\" formControlName=\\\"USE_DOMAIN\\\" (change)=\\\"onChangeUseDomain(dataElementForm)\\\" required>\\n          <label class=\\\"custom-control-label\\\" for=\\\"use-domain\\\">Data Domain</label>\\n        </div>\\n        <div class=\\\"input-group col-8 col-lg-4\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"data-domain\\\" (change)=\\\"onChangeDataDomain(dataElementForm)\\\"\\n                 [readonly]=\\\"readonly || !dataElementForm.get('USE_DOMAIN').value\\\" name=\\\"dataElement\\\" formControlName=\\\"DOMAIN_ID\\\">\\n          <div class=\\\"input-group-append\\\">\\n            <button class=\\\"btn btn-outline-secondary btn-sm\\\" type=\\\"button\\\" id=\\\"searchDomain\\\"\\n                    (click)=\\\"onSearchHelp(dataElementForm)\\\">\\n              <span class=\\\"fas fa-search\\\"></span>\\n            </button>\\n          </div>\\n        </div>\\n        <span [class.ng-invalid]=\\\"dataElementForm.get('DOMAIN_ID').invalid\\\" class=\\\"dk-invalid-feedback\\\">\\n          {{dataElementForm.get('DOMAIN_ID').errors?.required? 'A Data Domain is required': null}}\\n          {{dataElementForm.get('DOMAIN_ID').errors?.message}}\\n        </span>\\n      </div>\\n\\n      <div class=\\\"ml-2 mb-2 row\\\">\\n        <div class=\\\"col-8 col-lg-3 custom-control custom-radio\\\">\\n          <input type=\\\"radio\\\" class=\\\"custom-control-input\\\" id=\\\"use-data-type\\\" name=\\\"USE_DOMAIN\\\"\\n                 [value]=\\\"0\\\" formControlName=\\\"USE_DOMAIN\\\" (change)=\\\"onChangeUseDomain(dataElementForm)\\\" required>\\n          <label class=\\\"custom-control-label\\\" for=\\\"use-data-type\\\">Elementary Type</label>\\n        </div>\\n        <div class=\\\"input-group col-8 col-lg-4\\\">\\n          <select formControlName=\\\"DATA_TYPE\\\" (change)=\\\"onChangeDataType(dataElementForm)\\\"\\n                  class=\\\"form-control form-control-sm\\\">\\n            <option *ngFor=\\\"let opt of dataTypes\\\" [value]=\\\"opt.key\\\">{{opt.value}}</option>\\n          </select>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"ml-2 row\\\">\\n        <div class=\\\"col-lg-3\\\"></div>\\n        <div class=\\\"form-group col-4 col-lg-2\\\">\\n          <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"data-length\\\">Length:\\n          </label>\\n          <input type=\\\"number\\\" formControlName=\\\"DATA_LENGTH\\\" id=\\\"data-length\\\" name=\\\"data-length\\\" class=\\\"form-control form-control-sm\\\"\\n                 [readonly]=\\\"readonly\\\" >\\n          <span class=\\\"dk-invalid-feedback\\\">{{dataElementForm.get('DATA_LENGTH').errors?.message}}</span>\\n        </div>\\n        <div class=\\\"form-group col-4 col-lg-2\\\">\\n          <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"decimal-place\\\">Decimal Place:\\n          </label>\\n          <input type=\\\"number\\\" formControlName=\\\"DECIMAL\\\" id=\\\"decimal-place\\\" name=\\\"decimal-place\\\"\\n                 class=\\\"form-control form-control-sm\\\" [readonly]=\\\"readonly\\\">\\n          <span class=\\\"dk-invalid-feedback\\\">{{dataElementForm.get('DECIMAL').errors?.message}}</span>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"card mt-2\\\">\\n    <div class=\\\"card-header\\\">Texts</div>\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"ml-4 form-group row\\\">\\n        <label class=\\\"col-form-label col-form-label-sm col-lg-3\\\" for=\\\"label-text\\\">Label Text</label>\\n        <input type=\\\"text\\\" formControlName=\\\"LABEL_TEXT\\\" id=\\\"label-text\\\" name=\\\"label-text\\\"\\n               class=\\\"form-control form-control-sm col-md-6\\\" [readonly]=\\\"readonly\\\">\\n      </div>\\n\\n      <div class=\\\"ml-4 form-group row\\\">\\n        <label class=\\\"col-form-label col-form-label-sm col-lg-3\\\" for=\\\"list-header-text\\\">List Header Text</label>\\n        <input type=\\\"text\\\" formControlName=\\\"LIST_HEADER_TEXT\\\" id=\\\"list-header-text\\\" name=\\\"list-header-text\\\"\\n               class=\\\"form-control form-control-sm col-md-6\\\" [readonly]=\\\"readonly\\\">\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"card mt-2\\\">\\n    <div class=\\\"card-header\\\">Additional Attribute</div>\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"ml-4 form-group row\\\">\\n        <label class=\\\"col-form-label col-form-label-sm col-lg-3\\\" for=\\\"search-help\\\">Search Help</label>\\n        <input type=\\\"text\\\" formControlName=\\\"SEARCH_HELP_ID\\\" id=\\\"search-help\\\" name=\\\"search-help\\\"\\n               class=\\\"form-control form-control-sm col-md-4\\\" [readonly]=\\\"readonly\\\">\\n      </div>\\n\\n      <div class=\\\"ml-4 form-group row\\\">\\n        <label class=\\\"col-form-label col-form-label-sm col-lg-3\\\" for=\\\"sh-export-field\\\">Export Field</label>\\n        <input type=\\\"text\\\" formControlName=\\\"SEARCH_HELP_EXPORT_FIELD\\\" id=\\\"sh-export-field\\\" name=\\\"sh-export-field\\\"\\n               class=\\\"form-control form-control-sm col-md-4\\\" [readonly]=\\\"readonly\\\">\\n      </div>\\n\\n      <div class=\\\"ml-4 form-group row\\\">\\n        <label class=\\\"col-form-label col-form-label-sm col-lg-3\\\" for=\\\"parameter\\\">Parameter</label>\\n        <input type=\\\"text\\\" formControlName=\\\"PARAMETER_ID\\\" id=\\\"parameter\\\" name=\\\"parameter\\\"\\n               class=\\\"form-control form-control-sm col-md-4\\\" [readonly]=\\\"readonly\\\">\\n      </div>\\n    </div>\\n  </div>\\n</form>\\n\\n<dk-app-search-help></dk-app-search-help>\\n\"","export default \"<div class=\\\"row\\\">\\n  <div *ngIf=\\\"isSearchListShown\\\" class=\\\"col-3\\\">\\n    <div class=\\\"btn-toolbar justify-content-between mb-2\\\" role=\\\"toolbar\\\">\\n      <div class=\\\"input-group\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\" #searchBox (keyup)=\\\"searchDataElement(searchBox.value)\\\" >\\n      </div>\\n\\n      <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n        <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Hide\\\" (click)=\\\"hideSearchList()\\\" [disabled]=\\\"!theSelectedDataElement\\\">\\n          <span class=\\\"fas fa-arrow-left\\\"></span>\\n        </button>\\n        <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Add\\\" (click)=\\\"newDataElement()\\\">\\n          <span class=\\\"fas fa-plus\\\"></span>\\n        </button>\\n      </div>\\n    </div>\\n    <div class=\\\"list-group\\\">\\n      <a *ngFor=\\\"let dataElement of dataElementList\\\" routerLink=\\\"/model/data-element/{{dataElement.ELEMENT_ID}}\\\" routerLinkActive=\\\"active\\\"\\n         (click)=\\\"onSelect(dataElement)\\\" class=\\\"list-group-item list-group-item-action flex-column align-items-start\\\">\\n        <div class=\\\"d-flex w-100 justify-content-between\\\">\\n          <h5 class=\\\"mb-1\\\">{{dataElement.ELEMENT_ID}}</h5>\\n          <small>version: {{dataElement.VERSION_NO}}</small>\\n        </div>\\n        <p class=\\\"mb-1\\\">{{dataElement.ELEMENT_DESC}}</p>\\n        <!--<small>created by: {{entityType.CREATE_BY}} @{{entityType.CREATE_TIME}}</small> <br/>-->\\n        <small>last changed by: {{dataElement.LAST_CHANGE_BY}} @{{dataElement.LAST_CHANGE_TIME}}</small>\\n      </a>\\n    </div>\\n  </div>\\n  <div [ngClass]=\\\"{'col-9': isSearchListShown, 'col-12': !isSearchListShown}\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"btn-toolbar mb-2\\\"  role=\\\"toolbar\\\"\\n     [ngClass]=\\\"{'justify-content-end': isSearchListShown, 'justify-content-between': !isSearchListShown}\\\" >\\n  <button *ngIf=\\\"!isSearchListShown\\\" class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Show List\\\" (click)=\\\"showSearchList()\\\">\\n    <span class=\\\"fas fa-arrow-right\\\"></span>\\n  </button>\\n\\n  <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n    <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Edit/Display\\\" (click)=\\\"switchEditDisplay()\\\">\\n      <span *ngIf=\\\"readonly\\\" class=\\\"fas fa-edit\\\"></span>\\n      <span *ngIf=\\\"!readonly\\\" class=\\\"fas fa-glasses\\\"></span>\\n    </button>\\n    <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Save\\\" (click)=\\\"save()\\\">\\n      <span class=\\\"fas fa-save\\\"></span>\\n    </button>\\n  </div>\\n</div>\\n\\n<dk-message></dk-message>\\n<form *ngIf=\\\"entityMeta\\\" [formGroup]=\\\"entityTypeForm\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"entity-type\\\" class=\\\"col-form-label form-control-sm\\\">Entity Type:\\n      <span [class.ng-invalid]=\\\"entityTypeForm.get('ENTITY_ID').invalid\\\" class=\\\"dk-invalid-feedback\\\">\\n        {{entityTypeForm.get('ENTITY_ID').errors?.message}}\\n      </span>\\n    </label>\\n    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"entity-type\\\" [readonly]=\\\"readonly || !isNewMode\\\"\\n           name=\\\"entity-type\\\" formControlName=\\\"ENTITY_ID\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"entity-desc\\\" class=\\\"col-form-label form-control-sm\\\">Entity Description:</label>\\n    <textarea class=\\\"form-control\\\" id=\\\"entity-desc\\\" name=\\\"entity-desc\\\" rows=\\\"2\\\"\\n              formControlName=\\\"ENTITY_DESC\\\" [readonly]=\\\"readonly\\\" (change)=\\\"onChangeEntityDesc()\\\"></textarea>\\n  </div>\\n\\n  <app-attribute-meta [readonly]=\\\"readonly\\\" [parentForm]=\\\"entityTypeForm\\\" [attributes]=\\\"attributes\\\"\\n                      [relationID]=\\\"entityMeta.ENTITY_ID\\\" [isNewMode]=\\\"isNewMode\\\">\\n  </app-attribute-meta>\\n\\n  <div class=\\\"card mt-2\\\">\\n    <div class=\\\"card-header\\\"><span class=\\\"fas fa-user-check\\\"></span> Role</div>\\n    <div class=\\\"card-body\\\">\\n      <table class=\\\"table table-bordered table-sm dk-table\\\">\\n        <thead class=\\\"thead-light\\\">\\n          <tr>\\n            <th scope=\\\"col\\\">Action</th>\\n            <th scope=\\\"col\\\">Role</th>\\n            <th scope=\\\"col\\\">Description</th>\\n            <th scope=\\\"col\\\">Conditional Attribute</th>\\n            <th scope=\\\"col\\\">Conditional Value</th>\\n          </tr>\\n        </thead>\\n\\n        <tbody formArrayName=\\\"ROLES\\\">\\n        <tr *ngFor=\\\"let roleFormGroup of roleFormArray.controls; let i = index\\\">\\n          <td class=\\\"dk-actions\\\">\\n            <button class=\\\"btn btn-sm\\\" type=\\\"button\\\" [disabled]=\\\"readonly\\\" (click)=\\\"deleteRole(i)\\\" title=\\\"Delete\\\">\\n              <span class=\\\"far fa-trash-alt\\\"></span>\\n            </button>\\n          </td>\\n          <td [formGroup]=\\\"roleFormGroup\\\">\\n            <div class=\\\"input-group\\\">\\n              <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" formControlName=\\\"ROLE_ID\\\"\\n                     [readonly]=\\\"readonly || oldRole(roleFormGroup) && roleFormGroup.valid\\\" (change)=\\\"onChangeRoleID(i)\\\">\\n              <div class=\\\"invalid-tooltip\\\">\\n                {{roleFormGroup.get('ROLE_ID').errors?.message}}\\n              </div>\\n              <div class=\\\"input-group-append\\\">\\n                <button class=\\\"btn btn-outline-secondary btn-sm\\\" type=\\\"button\\\" id=\\\"searchRole\\\"\\n                        (click)=\\\"onSearchHelp(roleFormGroup, i)\\\">\\n                  <span class=\\\"fas fa-search\\\"></span>\\n                </button>\\n              </div>\\n            </div>\\n          </td>\\n          <td [formGroup]=\\\"roleFormGroup\\\">\\n            <input type=\\\"text\\\" formControlName=\\\"ROLE_DESC\\\" readonly class=\\\"form-control form-control-sm dk-description\\\">\\n          </td>\\n          <td [formGroup]=\\\"roleFormGroup\\\">\\n            <select formControlName=\\\"CONDITIONAL_ATTR\\\"  class=\\\"form-control form-control-sm\\\">\\n              <option *ngFor=\\\"let opt of attrFormArray.controls\\\" [value]=\\\"opt.value.ATTR_NAME\\\">{{opt.value.ATTR_NAME}}</option>\\n            </select>\\n          </td>\\n          <td [formGroup]=\\\"roleFormGroup\\\">\\n            <input type=\\\"text\\\" formControlName=\\\"CONDITIONAL_VALUE\\\" [readonly]=\\\"readonly\\\" class=\\\"form-control form-control-sm\\\">\\n          </td>\\n        </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n</form>\\n\\n<dk-app-search-help></dk-app-search-help>\\n\"","export default \"<div class=\\\"row\\\">\\n  <div *ngIf=\\\"isSearchListShown\\\" class=\\\"col-3\\\">\\n    <div class=\\\"btn-toolbar justify-content-between mb-2\\\" role=\\\"toolbar\\\">\\n      <div class=\\\"input-group\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\" #searchBox (keyup)=\\\"searchEntityType(searchBox.value)\\\" >\\n      </div>\\n      <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n        <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Hide\\\" (click)=\\\"hideSearchList()\\\" [disabled]=\\\"!theSelectedEntityType\\\">\\n          <span class=\\\"fas fa-arrow-left\\\"></span>\\n        </button>\\n        <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Add\\\" (click)=\\\"newEntityType()\\\">\\n          <span class=\\\"fas fa-plus\\\"></span>\\n        </button>\\n      </div>\\n    </div>\\n    <div class=\\\"list-group\\\">\\n      <a *ngFor=\\\"let entityType of entityTypeList\\\" routerLink=\\\"/model/entity-type/{{entityType.ENTITY_ID}}\\\" routerLinkActive=\\\"active\\\"\\n         (click)=\\\"onSelect(entityType)\\\" class=\\\"list-group-item list-group-item-action flex-column align-items-start\\\">\\n        <div class=\\\"d-flex w-100 justify-content-between\\\">\\n          <h5 class=\\\"mb-1\\\">{{entityType.ENTITY_ID}}</h5>\\n          <small>version: {{entityType.VERSION_NO}}</small>\\n        </div>\\n        <p class=\\\"mb-1\\\">{{entityType.ENTITY_DESC}}</p>\\n        <!--<small>created by: {{entityType.CREATE_BY}} @{{entityType.CREATE_TIME}}</small> <br/>-->\\n        <small>last changed by: {{entityType.LAST_CHANGE_BY}} @{{entityType.LAST_CHANGE_TIME}}</small>\\n      </a>\\n    </div>\\n  </div>\\n  <div [ngClass]=\\\"{'col-9': isSearchListShown, 'col-12': !isSearchListShown}\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\"","export default \"<ul class=\\\"nav nav-tabs mt-1\\\">\\n  <li class=\\\"nav-item active\\\">\\n    <a class=\\\"nav-link\\\" routerLink=\\\"/model/entity-type\\\" routerLinkActive=\\\"active\\\">Entity</a>\\n  </li>\\n  <li class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link\\\" routerLink=\\\"/model/role\\\" routerLinkActive=\\\"active\\\">Role</a>\\n  </li>\\n  <li class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link\\\" routerLink=\\\"/model/relation\\\" routerLinkActive=\\\"active\\\">Relation</a>\\n  </li>\\n  <li class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link\\\" routerLink=\\\"/model/relationship\\\" routerLinkActive=\\\"active\\\">Relationship</a>\\n  </li>\\n  <li class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link\\\" routerLink=\\\"/model/data-element\\\" routerLinkActive=\\\"active\\\">Data Element</a>\\n  </li>\\n  <li class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link\\\" routerLink=\\\"/model/data-domain\\\" routerLinkActive=\\\"active\\\">Data Domain</a>\\n  </li>\\n</ul>\\n\\n<div class=\\\"dk-model-content\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\\n\"","export default \"<div class=\\\"btn-toolbar mb-2\\\"  role=\\\"toolbar\\\"\\n     [ngClass]=\\\"{'justify-content-end': isSearchListShown, 'justify-content-between': !isSearchListShown}\\\" >\\n  <button *ngIf=\\\"!isSearchListShown\\\" class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Show List\\\" (click)=\\\"showSearchList()\\\">\\n    <span class=\\\"fas fa-arrow-right\\\"></span>\\n  </button>\\n\\n  <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n    <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Edit/Display\\\" (click)=\\\"switchEditDisplay()\\\">\\n      <span *ngIf=\\\"readonly\\\" class=\\\"fas fa-edit\\\"></span>\\n      <span *ngIf=\\\"!readonly\\\" class=\\\"fas fa-glasses\\\"></span>\\n    </button>\\n    <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Save\\\" (click)=\\\"save()\\\">\\n      <span class=\\\"fas fa-save\\\"></span>\\n    </button>\\n  </div>\\n</div>\\n\\n<dk-message></dk-message>\\n<form *ngIf=\\\"relationMeta\\\" [formGroup]=\\\"relationForm\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"relation\\\" class=\\\"col-form-label form-control-sm\\\">Relation:\\n      <span [class.ng-invalid]=\\\"relationForm.get('RELATION_ID').invalid\\\" class=\\\"dk-invalid-feedback\\\">\\n        {{relationForm.get('RELATION_ID').errors?.message}}\\n      </span>\\n    </label>\\n    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"relation\\\" [readonly]=\\\"readonly || !isNewMode\\\"\\n          name=\\\"relation\\\" formControlName=\\\"RELATION_ID\\\" >\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"relation-desc\\\" class=\\\"col-form-label form-control-sm\\\">Relation Description:</label>\\n    <textarea class=\\\"form-control\\\" id=\\\"relation-desc\\\" name=\\\"relation-desc\\\" rows=\\\"2\\\"\\n              (change)=\\\"onChangeRelationDesc()\\\" formControlName=\\\"RELATION_DESC\\\" [readonly]=\\\"readonly\\\"></textarea>\\n  </div>\\n\\n  <app-attribute-meta [readonly]=\\\"readonly\\\" [parentForm]=\\\"relationForm\\\" [attributes]=\\\"relationMeta.ATTRIBUTES\\\"\\n                      [relationID]=\\\"relationMeta.RELATION_ID\\\" [isNewMode]=\\\"isNewMode\\\">\\n  </app-attribute-meta>\\n\\n  <div class=\\\"card mt-2\\\">\\n    <div class=\\\"card-header\\\"><span class=\\\"fas fa-atlas\\\"></span> Association</div>\\n    <div class=\\\"card-body\\\">\\n      <table class=\\\"table table-bordered table-sm dk-table\\\">\\n        <thead class=\\\"thead-light\\\">\\n        <tr>\\n          <th scope=\\\"col\\\">Action</th>\\n          <th scope=\\\"col\\\">Association</th>\\n          <th scope=\\\"col\\\">Right Relation</th>\\n          <th scope=\\\"col\\\">Cardinality</th>\\n          <th scope=\\\"col\\\" title=\\\"Foreign Key Check\\\">FC</th>\\n        </tr>\\n        </thead>\\n\\n        <tbody formArrayName=\\\"ASSOCIATIONS\\\">\\n        <tr *ngFor=\\\"let associationFormGroup of associationFormArray.controls; let i = index\\\">\\n          <td class=\\\"dk-actions\\\">\\n            <button class=\\\"btn btn-sm\\\" type=\\\"button\\\" [disabled]=\\\"readonly\\\" (click)=\\\"deleteAssociation(i)\\\" title=\\\"Delete\\\">\\n              <span class=\\\"far fa-trash-alt\\\"></span>\\n            </button>\\n            <button class=\\\"btn btn-sm\\\" type=\\\"button\\\" (click)=\\\"openFieldMapModal(i)\\\" title=\\\"Fields Mapping\\\">\\n              <span class=\\\"fas fa-map-signs\\\"></span>\\n            </button>\\n          </td>\\n          <td [formGroup]=\\\"associationFormGroup\\\">\\n            <div class=\\\"input-group\\\">\\n              <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" formControlName=\\\"ASSOCIATION_NAME\\\"\\n                     [readonly]=\\\"readonly || oldAssociationName(associationFormGroup) && associationFormGroup.valid\\\"\\n                     (change)=\\\"onChangeAssociationName(i)\\\">\\n              <div class=\\\"invalid-tooltip\\\">\\n                {{associationFormGroup.get('ASSOCIATION_NAME').errors?.message}}\\n              </div>\\n            </div>\\n          </td>\\n          <td [formGroup]=\\\"associationFormGroup\\\">\\n            <div class=\\\"input-group\\\">\\n              <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" formControlName=\\\"RIGHT_RELATION_ID\\\"\\n                     [readonly]=\\\"readonly\\\" (change)=\\\"onChangeRightRelationID(i)\\\">\\n              <div class=\\\"invalid-tooltip\\\">\\n                {{associationFormGroup.get('RIGHT_RELATION_ID').errors?.message}}\\n              </div>\\n              <div class=\\\"input-group-append\\\">\\n                <button class=\\\"btn btn-outline-secondary btn-sm\\\" type=\\\"button\\\" id=\\\"searchRelation\\\"\\n                        (click)=\\\"onSearchHelp('RIGHT_RELATION_ID', associationFormGroup, i)\\\">\\n                  <span class=\\\"fas fa-search\\\"></span>\\n                </button>\\n              </div>\\n            </div>\\n          </td>\\n          <td [formGroup]=\\\"associationFormGroup\\\">\\n            <select class=\\\"form-control form-control-sm\\\" formControlName=\\\"CARDINALITY\\\"\\n                    (change)=\\\"onChangeCardinality(associationFormGroup)\\\">\\n              <option>[0..1]</option>\\n              <option>[1..1]</option>\\n              <option>[0..n]</option>\\n              <option>[1..n]</option>\\n            </select>\\n          </td>\\n          <td [formGroup]=\\\"associationFormGroup\\\">\\n            <input type=\\\"checkbox\\\" formControlName=\\\"FOREIGN_KEY_CHECK\\\">\\n          </td>\\n        </tr>\\n\\n        <div *ngIf=\\\"currentAssociationForm\\\" class=\\\"modal fade dk-modal-open\\\" [ngClass]=\\\"{'show': isFieldMapShown}\\\"\\n             [ngStyle]=\\\"{'display': displayFieldMapModal}\\\" id=\\\"detailModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\">\\n          <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n            <div class=\\\"modal-content\\\">\\n              <div class=\\\"modal-header\\\">\\n                <h5 class=\\\"modal-title\\\" id=\\\"detail\\\">Fields Mapping</h5>\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"closeFieldMapModal()\\\">\\n                  <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n              </div>\\n              <div class=\\\"modal-body\\\">\\n                <table class=\\\"table table-bordered table-sm dk-table\\\" [formGroup]=\\\"currentAssociationForm\\\">\\n                  <thead class=\\\"thead-light\\\">\\n                  <tr>\\n                    <th scope=\\\"col\\\">Action</th>\\n                    <th scope=\\\"col\\\">Left Table Field</th>\\n                    <th scope=\\\"col\\\">Right Table Field</th>\\n                  </tr>\\n                  </thead>\\n\\n                  <tbody formArrayName=\\\"FIELDS_MAPPING\\\">\\n                    <tr *ngFor=\\\"let fieldMapFormGroup of fieldMapFormArray.controls; let i = index\\\">\\n                      <td class=\\\"dk-actions\\\">\\n                        <button class=\\\"btn btn-sm\\\" type=\\\"button\\\" [disabled]=\\\"readonly\\\" (click)=\\\"deleteFieldMap(i)\\\" title=\\\"Delete\\\">\\n                          <span class=\\\"far fa-trash-alt\\\"></span>\\n                        </button>\\n                      </td>\\n                      <td [formGroup]=\\\"fieldMapFormGroup\\\">\\n                        <div class=\\\"input-group\\\">\\n                          <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" formControlName=\\\"LEFT_FIELD\\\"\\n                                 [readonly]=\\\"readonly || oldFieldMap(fieldMapFormGroup) && fieldMapFormGroup.valid\\\" (change)=\\\"onChangeLeftField(i)\\\">\\n                          <div class=\\\"invalid-tooltip\\\">\\n                            {{fieldMapFormGroup.get('LEFT_FIELD').errors?.message}}\\n                          </div>\\n                        </div>\\n                      </td>\\n                      <td [formGroup]=\\\"fieldMapFormGroup\\\">\\n                        <div class=\\\"input-group\\\">\\n                          <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" formControlName=\\\"RIGHT_FIELD\\\"\\n                                 [readonly]=\\\"readonly || oldFieldMap(fieldMapFormGroup) && fieldMapFormGroup.valid\\\" (change)=\\\"onChangeRightField(i)\\\">\\n                          <div class=\\\"invalid-tooltip\\\">\\n                            {{fieldMapFormGroup.get('RIGHT_FIELD').errors?.message}}\\n                          </div>\\n                        </div>\\n                      </td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n              </div>\\n              <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary\\\" (click)=\\\"closeFieldMapModal()\\\">OK</button>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n</form>\\n\\n<dk-app-search-help></dk-app-search-help>\\n\\n\"","export default \"<div class=\\\"row\\\">\\n  <div *ngIf=\\\"isSearchListShown\\\" class=\\\"col-3\\\">\\n    <div class=\\\"btn-toolbar justify-content-between mb-2\\\" role=\\\"toolbar\\\">\\n      <div class=\\\"input-group\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\" #searchBox (keyup)=\\\"searchRelation(searchBox.value)\\\" >\\n      </div>\\n\\n      <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n        <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Hide\\\" (click)=\\\"hideSearchList()\\\" [disabled]=\\\"!theSelectedRelation\\\">\\n          <span class=\\\"fas fa-arrow-left\\\"></span>\\n        </button>\\n        <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Add\\\" (click)=\\\"newRelation()\\\">\\n          <span class=\\\"fas fa-plus\\\"></span>\\n        </button>\\n      </div>\\n    </div>\\n    <div class=\\\"list-group\\\">\\n      <a *ngFor=\\\"let relation of relationList\\\" routerLink=\\\"/model/relation/{{relation.RELATION_ID}}\\\" routerLinkActive=\\\"active\\\"\\n         (click)=\\\"onSelect(relation)\\\" class=\\\"list-group-item list-group-item-action flex-column align-items-start\\\">\\n        <div class=\\\"d-flex w-100 justify-content-between\\\">\\n          <h5 class=\\\"mb-1\\\">{{relation.RELATION_ID}}</h5>\\n          <small>version: {{relation.VERSION_NO}}</small>\\n        </div>\\n        <p class=\\\"mb-1\\\">{{relation.RELATION_DESC}}</p>\\n        <!--<small>created by: {{entityType.CREATE_BY}} @{{entityType.CREATE_TIME}}</small> <br/>-->\\n        <small>last changed by: {{relation.LAST_CHANGE_BY}} @{{relation.LAST_CHANGE_TIME}}</small>\\n      </a>\\n    </div>\\n  </div>\\n  <div [ngClass]=\\\"{'col-9': isSearchListShown, 'col-12': !isSearchListShown}\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"btn-toolbar mb-2\\\"  role=\\\"toolbar\\\"\\n     [ngClass]=\\\"{'justify-content-end': isSearchListShown, 'justify-content-between': !isSearchListShown}\\\" >\\n  <button *ngIf=\\\"!isSearchListShown\\\" class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Show List\\\" (click)=\\\"showSearchList()\\\">\\n    <span class=\\\"fas fa-arrow-right\\\"></span>\\n  </button>\\n\\n  <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n    <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Edit/Display\\\" (click)=\\\"switchEditDisplay()\\\">\\n      <span *ngIf=\\\"readonly\\\" class=\\\"fas fa-edit\\\"></span>\\n      <span *ngIf=\\\"!readonly\\\" class=\\\"fas fa-glasses\\\"></span>\\n    </button>\\n    <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Save\\\" (click)=\\\"save()\\\">\\n      <span class=\\\"fas fa-save\\\"></span>\\n    </button>\\n  </div>\\n</div>\\n\\n<dk-message></dk-message>\\n<form *ngIf=\\\"relationshipMeta\\\" [formGroup]=\\\"relationshipForm\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"relationship\\\" class=\\\"col-form-label form-control-sm\\\">Relationship:\\n      <span [class.ng-invalid]=\\\"relationshipForm.get('RELATIONSHIP_ID').invalid\\\" class=\\\"dk-invalid-feedback\\\">\\n        {{relationshipForm.get('RELATIONSHIP_ID').errors?.message}}\\n      </span>\\n    </label>\\n    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"relationship\\\" [readonly]=\\\"readonly || !isNewMode\\\"\\n           name=\\\"relationship\\\" formControlName=\\\"RELATIONSHIP_ID\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"relationship-desc\\\" class=\\\"col-form-label form-control-sm\\\">Relationship Description:</label>\\n    <textarea class=\\\"form-control\\\" id=\\\"relationship-desc\\\" name=\\\"relationship-desc\\\" rows=\\\"2\\\"\\n              formControlName=\\\"RELATIONSHIP_DESC\\\" [readonly]=\\\"readonly\\\" (change)=\\\"onChangeRelationshipDesc()\\\"></textarea>\\n  </div>\\n  <div class=\\\"row ml-2\\\">\\n    <div class=\\\"col-3 form-group row\\\" >\\n      <label for=\\\"timeDependent\\\" class=\\\"col-form-label form-control-sm\\\">Time Dependent: </label>\\n      <input type=\\\"checkbox\\\" class=\\\"form-control ml-2\\\" id=\\\"timeDependent\\\" name=\\\"timeDependent\\\"\\n             formControlName=\\\"TIME_DEPENDENT\\\" (change)=\\\"onChangeTimeDependency()\\\">\\n    </div>\\n    <div class=\\\"col-4 form-group row ml-3\\\">\\n      <label for=\\\"valid_period\\\" class=\\\"col-form-label form-control-sm\\\">Valid Period(seconds):\\n        <span [class.ng-invalid]=\\\"relationshipForm.get('VALID_PERIOD').invalid\\\" class=\\\"dk-invalid-feedback\\\">\\n        {{relationshipForm.get('VALID_PERIOD').errors?.message}}\\n      </span>\\n      </label>\\n      <input type=\\\"number\\\" class=\\\"form-control form-control-sm\\\" id=\\\"valid_period\\\" [readonly]=\\\"readonly\\\"\\n             name=\\\"valid_period\\\" formControlName=\\\"VALID_PERIOD\\\">\\n    </div>\\n    <div class=\\\"col-3 form-group row ml-3\\\" >\\n      <label for=\\\"singleton\\\" class=\\\"col-form-label form-control-sm\\\">Singleton: </label>\\n      <input type=\\\"checkbox\\\" class=\\\"form-control ml-2\\\" id=\\\"singleton\\\" name=\\\"singleton\\\"\\n             formControlName=\\\"SINGLETON\\\">\\n    </div>\\n  </div>\\n\\n  <app-attribute-meta [readonly]=\\\"readonly\\\" [parentForm]=\\\"relationshipForm\\\" [attributes]=\\\"attributes\\\"\\n                      [relationID]=\\\"relationshipMeta.RELATIONSHIP_ID\\\" [isNewMode]=\\\"isNewMode\\\">\\n  </app-attribute-meta>\\n\\n  <div class=\\\"card mt-2\\\">\\n    <div class=\\\"card-header\\\"><span class=\\\"fas fa-user-check\\\"></span> Involved Roles</div>\\n    <div class=\\\"card-body\\\">\\n      <table class=\\\"table table-bordered table-sm\\\">\\n        <thead class=\\\"thead-light\\\">\\n        <tr>\\n          <th scope=\\\"col\\\">Action</th>\\n          <th scope=\\\"col\\\">Role</th>\\n          <th scope=\\\"col\\\">Description</th>\\n          <th scope=\\\"col\\\">Cardinality</th>\\n          <th scope=\\\"col\\\">Direction</th>\\n        </tr>\\n        </thead>\\n\\n        <tbody formArrayName=\\\"INVOLVES\\\">\\n        <tr *ngFor=\\\"let involveFormGroup of involveFormArray.controls; let i = index\\\">\\n          <td class=\\\"dk-actions\\\">\\n            <button class=\\\"btn btn-sm\\\" type=\\\"button\\\" [disabled]=\\\"readonly\\\" (click)=\\\"deleteInvolve(i)\\\" title=\\\"Delete\\\">\\n              <span class=\\\"far fa-trash-alt\\\"></span>\\n            </button>\\n          </td>\\n          <td [formGroup]=\\\"involveFormGroup\\\">\\n            <div class=\\\"input-group\\\">\\n              <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" formControlName=\\\"ROLE_ID\\\"\\n                     [readonly]=\\\"readonly || oldInvolve(involveFormGroup) && involveFormGroup.valid\\\" (change)=\\\"onChangeRoleID(i)\\\">\\n              <div class=\\\"invalid-tooltip\\\">\\n                {{involveFormGroup.get('ROLE_ID').errors?.message}}\\n              </div>\\n              <div class=\\\"input-group-append\\\">\\n                <button class=\\\"btn btn-outline-secondary btn-sm\\\" type=\\\"button\\\" id=\\\"searchRole\\\"\\n                        (click)=\\\"onSearchHelp(involveFormGroup, i)\\\">\\n                  <span class=\\\"fas fa-search\\\"></span>\\n                </button>\\n              </div>\\n            </div>\\n          </td>\\n          <td [formGroup]=\\\"involveFormGroup\\\">\\n            <input type=\\\"text\\\" formControlName=\\\"ROLE_DESC\\\" readonly class=\\\"form-control form-control-sm dk-description\\\">\\n          </td>\\n          <td [formGroup]=\\\"involveFormGroup\\\">\\n            <select class=\\\"form-control form-control-sm\\\" formControlName=\\\"CARDINALITY\\\">\\n              <option>[1..1]</option>\\n              <option>[1..n]</option>\\n            </select>\\n          </td>\\n          <td [formGroup]=\\\"involveFormGroup\\\">\\n            <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" formControlName=\\\"DIRECTION\\\" [readonly]=\\\"readonly\\\">\\n          </td>\\n        </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n</form>\\n\\n<dk-app-search-help></dk-app-search-help>\\n\"","export default \"<div class=\\\"row\\\">\\n  <div *ngIf=\\\"isSearchListShown\\\" class=\\\"col-3\\\">\\n    <div class=\\\"btn-toolbar justify-content-between mb-2\\\" role=\\\"toolbar\\\">\\n      <div class=\\\"input-group\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\" #searchBox (keyup)=\\\"searchRelationship(searchBox.value)\\\" >\\n      </div>\\n\\n      <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n        <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Hide\\\" (click)=\\\"hideSearchList()\\\" [disabled]=\\\"!theSelectedRelationship\\\">\\n          <span class=\\\"fas fa-arrow-left\\\"></span>\\n        </button>\\n        <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Add\\\" (click)=\\\"newRelationship()\\\">\\n          <span class=\\\"fas fa-plus\\\"></span>\\n        </button>\\n      </div>\\n    </div>\\n    <div class=\\\"list-group\\\">\\n      <a *ngFor=\\\"let relationship of relationshipList\\\" routerLink=\\\"/model/relationship/{{relationship.RELATIONSHIP_ID}}\\\" routerLinkActive=\\\"active\\\"\\n         (click)=\\\"onSelect(relationship)\\\" class=\\\"list-group-item list-group-item-action flex-column align-items-start\\\">\\n        <div class=\\\"d-flex w-100 justify-content-between\\\">\\n          <h5 class=\\\"mb-1\\\">{{relationship.RELATIONSHIP_ID}}</h5>\\n          <small>version: {{relationship.VERSION_NO}}</small>\\n        </div>\\n        <p class=\\\"mb-1\\\">{{relationship.RELATIONSHIP_DESC}}</p>\\n        <!--<small>created by: {{entityType.CREATE_BY}} @{{entityType.CREATE_TIME}}</small> <br/>-->\\n        <small>last changed by: {{relationship.LAST_CHANGE_BY}} @{{relationship.LAST_CHANGE_TIME}}</small>\\n      </a>\\n    </div>\\n  </div>\\n  <div [ngClass]=\\\"{'col-9': isSearchListShown, 'col-12': !isSearchListShown}\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"btn-toolbar mb-2\\\"  role=\\\"toolbar\\\"\\n     [ngClass]=\\\"{'justify-content-end': isSearchListShown, 'justify-content-between': !isSearchListShown}\\\" >\\n  <button *ngIf=\\\"!isSearchListShown\\\" class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Show List\\\" (click)=\\\"showSearchList()\\\">\\n    <span class=\\\"fas fa-arrow-right\\\"></span>\\n  </button>\\n\\n  <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n    <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Edit/Display\\\" (click)=\\\"switchEditDisplay()\\\">\\n      <span *ngIf=\\\"readonly\\\" class=\\\"fas fa-edit\\\"></span>\\n      <span *ngIf=\\\"!readonly\\\" class=\\\"fas fa-glasses\\\"></span>\\n    </button>\\n    <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Save\\\" (click)=\\\"save()\\\">\\n      <span class=\\\"fas fa-save\\\"></span>\\n    </button>\\n  </div>\\n</div>\\n\\n<dk-message></dk-message>\\n<form *ngIf=\\\"roleMeta\\\" [formGroup]=\\\"roleForm\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"role\\\" class=\\\"col-form-label form-control-sm\\\">Role:\\n      <span [class.ng-invalid]=\\\"roleForm.get('ROLE_ID').invalid\\\" class=\\\"dk-invalid-feedback\\\">\\n        {{roleForm.get('ROLE_ID').errors?.message}}\\n      </span>\\n    </label>\\n    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"role\\\" [readonly]=\\\"readonly || !isNewMode\\\"\\n           name=\\\"role\\\" formControlName=\\\"ROLE_ID\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"role-desc\\\" class=\\\"col-form-label form-control-sm\\\">Role Description:</label>\\n    <textarea class=\\\"form-control\\\" id=\\\"role-desc\\\" name=\\\"role-desc\\\" rows=\\\"2\\\"\\n              formControlName=\\\"ROLE_DESC\\\" [readonly]=\\\"readonly\\\" (change)=\\\"onChangeRoleDesc()\\\"></textarea>\\n  </div>\\n\\n  <div class=\\\"card mt-2\\\">\\n    <div class=\\\"card-header\\\"><span class=\\\"fas fa-user-check\\\"></span> Relations</div>\\n    <div class=\\\"card-body\\\">\\n      <table class=\\\"table table-bordered table-sm\\\">\\n        <thead class=\\\"thead-light\\\">\\n        <tr>\\n          <th scope=\\\"col\\\">Action</th>\\n          <th scope=\\\"col\\\">Relation</th>\\n          <th scope=\\\"col\\\">Description</th>\\n          <th scope=\\\"col\\\">Cardinality</th>\\n        </tr>\\n        </thead>\\n\\n        <tbody formArrayName=\\\"RELATIONS\\\">\\n        <tr *ngFor=\\\"let relationFormGroup of relationFormArray.controls; let i = index\\\">\\n          <td class=\\\"dk-actions\\\">\\n            <button class=\\\"btn btn-sm\\\" type=\\\"button\\\" [disabled]=\\\"readonly\\\" (click)=\\\"deleteRelation(i)\\\" title=\\\"Delete\\\">\\n              <span class=\\\"far fa-trash-alt\\\"></span>\\n            </button>\\n          </td>\\n          <td [formGroup]=\\\"relationFormGroup\\\">\\n            <div class=\\\"input-group\\\">\\n              <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" formControlName=\\\"RELATION_ID\\\"\\n                     [readonly]=\\\"readonly || oldRelation(relationFormGroup) && relationFormGroup.valid\\\" (change)=\\\"onChangeRelationID(i)\\\">\\n              <div class=\\\"invalid-tooltip\\\">\\n                {{relationFormGroup.get('RELATION_ID').errors?.message}}\\n              </div>\\n              <div class=\\\"input-group-append\\\">\\n                <button class=\\\"btn btn-outline-secondary btn-sm\\\" type=\\\"button\\\" id=\\\"searchRelation\\\"\\n                        (click)=\\\"onSearchHelp(relationFormGroup, i)\\\">\\n                  <span class=\\\"fas fa-search\\\"></span>\\n                </button>\\n              </div>\\n            </div>\\n          </td>\\n          <td [formGroup]=\\\"relationFormGroup\\\">\\n            <input type=\\\"text\\\" formControlName=\\\"RELATION_DESC\\\" readonly class=\\\"form-control form-control-sm dk-description\\\">\\n          </td>\\n          <td [formGroup]=\\\"relationFormGroup\\\">\\n            <select class=\\\"form-control form-control-sm\\\" formControlName=\\\"CARDINALITY\\\">\\n              <option>[0..1]</option>\\n              <option>[1..1]</option>\\n              <option>[0..n]</option>\\n              <option>[1..n]</option>\\n            </select>\\n          </td>\\n        </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n</form>\\n\\n<dk-app-search-help></dk-app-search-help>\\n\"","export default \"<div class=\\\"row\\\">\\n  <div *ngIf=\\\"isSearchListShown\\\" class=\\\"col-3\\\">\\n    <div class=\\\"btn-toolbar justify-content-between mb-2\\\" role=\\\"toolbar\\\">\\n      <div class=\\\"input-group\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\" #searchBox (keyup)=\\\"searchRole(searchBox.value)\\\" >\\n      </div>\\n      <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n        <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Hide\\\" (click)=\\\"hideSearchList()\\\" [disabled]=\\\"!theSelectedRole\\\">\\n          <span class=\\\"fas fa-arrow-left\\\"></span>\\n        </button>\\n        <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Add\\\" (click)=\\\"newRole()\\\">\\n          <span class=\\\"fas fa-plus\\\"></span>\\n        </button>\\n      </div>\\n    </div>\\n    <div class=\\\"list-group\\\">\\n      <a *ngFor=\\\"let role of roleList\\\" routerLink=\\\"/model/role/{{role.ROLE_ID}}\\\" routerLinkActive=\\\"active\\\"\\n         (click)=\\\"onSelect(role)\\\" class=\\\"list-group-item list-group-item-action flex-column align-items-start\\\">\\n        <div class=\\\"d-flex w-100 justify-content-between\\\">\\n          <h5 class=\\\"mb-1\\\">{{role.ROLE_ID}}</h5>\\n          <small>version: {{role.VERSION_NO}}</small>\\n        </div>\\n        <p class=\\\"mb-1\\\">{{role.ROLE_DESC}}</p>\\n        <!--<small>created by: {{entityType.CREATE_BY}} @{{entityType.CREATE_TIME}}</small> <br/>-->\\n        <small>last changed by: {{role.LAST_CHANGE_BY}} @{{role.LAST_CHANGE_TIME}}</small>\\n      </a>\\n    </div>\\n  </div>\\n  <div [ngClass]=\\\"{'col-9': isSearchListShown, 'col-12': !isSearchListShown}\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\"","export default \".dk-table {\\n  display: block;\\n  overflow-x: auto;\\n  white-space: nowrap;\\n  border: none;\\n}\\n.dk-actions{\\n  width: 6rem;\\n}\\n.dk-description{\\n  min-width: 12rem;\\n  max-width: 20rem;\\n}\\n.dk-dataElement{\\n  min-width: 12rem;\\n  max-width: 20rem;\\n}\\n.dk-number{\\n  min-width: 4rem;\\n  max-width: 6rem;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kZWwvYXR0cmlidXRlLW1ldGEvYXR0cmlidXRlLW1ldGEuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQWM7RUFDZCxnQkFBZ0I7RUFDaEIsbUJBQW1CO0VBQ25CLFlBQVk7QUFDZDtBQUNBO0VBQ0UsV0FBVztBQUNiO0FBQ0E7RUFDRSxnQkFBZ0I7RUFDaEIsZ0JBQWdCO0FBQ2xCO0FBQ0E7RUFDRSxnQkFBZ0I7RUFDaEIsZ0JBQWdCO0FBQ2xCO0FBQ0E7RUFDRSxlQUFlO0VBQ2YsZUFBZTtBQUNqQiIsImZpbGUiOiJzcmMvYXBwL21vZGVsL2F0dHJpYnV0ZS1tZXRhL2F0dHJpYnV0ZS1tZXRhLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZGstdGFibGUge1xuICBkaXNwbGF5OiBibG9jaztcbiAgb3ZlcmZsb3cteDogYXV0bztcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgYm9yZGVyOiBub25lO1xufVxuLmRrLWFjdGlvbnN7XG4gIHdpZHRoOiA2cmVtO1xufVxuLmRrLWRlc2NyaXB0aW9ue1xuICBtaW4td2lkdGg6IDEycmVtO1xuICBtYXgtd2lkdGg6IDIwcmVtO1xufVxuLmRrLWRhdGFFbGVtZW50e1xuICBtaW4td2lkdGg6IDEycmVtO1xuICBtYXgtd2lkdGg6IDIwcmVtO1xufVxuLmRrLW51bWJlcntcbiAgbWluLXdpZHRoOiA0cmVtO1xuICBtYXgtd2lkdGg6IDZyZW07XG59XG4iXX0= */\"","import {Component, Input, OnChanges, OnInit, ViewChild} from '@angular/core';\nimport {AbstractControl, FormArray, FormBuilder, FormGroup} from '@angular/forms';\nimport {Attribute} from 'jor-angular';\nimport {ModelService} from '../model.service';\nimport {Observable} from 'rxjs';\nimport {SearchHelpMethod, SearchHelp, EntityService, SearchHelpComponent} from 'jor-angular';\nimport {MessageService, Message} from 'ui-message-angular';\nimport {msgStore} from '../../msgStore';\n\n@Component({\n  selector: 'app-attribute-meta',\n  templateUrl: './attribute-meta.component.html',\n  styleUrls: ['./attribute-meta.component.css']\n})\nexport class AttributeMetaComponent implements OnInit, OnChanges {\n  dataTypes = [];\n  formArray: FormArray;\n  deletedAttributes = [];\n\n  constructor(private fb: FormBuilder,\n              private entityService: EntityService,\n              private messageService: MessageService,\n              private modelService: ModelService) {\n    this.dataTypes = modelService.dataTypes;\n    this.messageService.setMessageStore(msgStore, 'EN');\n  }\n\n  @Input() parentForm: FormGroup;\n  @Input() attributes: Attribute[];\n  @Input() readonly: boolean;\n  @Input() relationID: string;\n  @Input() isNewMode: boolean;\n\n  @ViewChild(SearchHelpComponent, {static: false})\n  private searchHelpComponent !: SearchHelpComponent;\n\n  ngOnInit() {\n  }\n\n  ngOnChanges() {\n    this.generateFormArray();\n    this.formArray = this.parentForm.get('ATTRIBUTES') as FormArray;\n  }\n\n  onSearchHelp(control: AbstractControl, rowID: number): void {\n    const searchHelpMeta = new SearchHelp();\n    searchHelpMeta.OBJECT_NAME = 'Data Element';\n    searchHelpMeta.METHOD = function(entityService: EntityService): SearchHelpMethod {\n      return (searchTerm: string): Observable<object[]> => entityService.listDataElement(searchTerm);\n    }(this.entityService);\n    searchHelpMeta.BEHAVIOUR = 'M';\n    searchHelpMeta.MULTI = false;\n    searchHelpMeta.FUZZY_SEARCH = true;\n    searchHelpMeta.FIELDS = [\n      {FIELD_NAME: 'ELEMENT_ID', FIELD_DESC: 'Element ID', IE_FIELD_NAME: 'DATA_ELEMENT',\n        IMPORT: true, EXPORT: true, LIST_POSITION: 1, FILTER_POSITION: 0},\n      {FIELD_NAME: 'ELEMENT_DESC', FIELD_DESC: 'Element Description', IE_FIELD_NAME: 'ATTR_DESC',\n        IMPORT: true, EXPORT: true, LIST_POSITION: 2, FILTER_POSITION: 0}\n    ];\n    searchHelpMeta.READ_ONLY = this.readonly || control.get('DATA_ELEMENT').disabled;\n\n    const afterExportFn = function (context: any, attrIdx: number) {\n      return () => context.onChangeDataElement(attrIdx);\n    }(this, rowID).bind(this);\n    this.searchHelpComponent.openSearchHelpModal(searchHelpMeta, control, afterExportFn);\n  }\n\n  deleteAttribute(index: number): void {\n    if (index !== this.formArray.length - 1) {\n      this.deletedAttributes.push({\n        ATTR_GUID: this.formArray.at(index).get('ATTR_GUID').value,\n        ATTR_NAME: this.formArray.at(index).get('ATTR_NAME').value\n      });\n      this.formArray.removeAt(index);\n      this.formArray.markAsDirty();\n    }\n  }\n\n  insertAttribute(index: number): void {\n    this.formArray.insert(index, this._createAnAttributeFormCtrl());\n  }\n\n  _createAnAttributeFormCtrl(): FormGroup {\n    return this.fb.group({\n      ATTR_GUID: [''],\n      RELATION_ID: [''],\n      ATTR_NAME: [''],\n      ATTR_DESC: [{value: '', disabled: true}],\n      DATA_ELEMENT: [{value: '', disabled: false}],\n      DATA_TYPE: [{value: '', disabled: true}],\n      DATA_LENGTH: [{value: '', disabled: true}],\n      DECIMAL: [null],\n      ORDER: [null],\n      PRIMARY_KEY: [false],\n      AUTO_INCREMENT: [{value: false, disabled: true}]\n    });\n  }\n\n  switchBtwDEAndDT(index: number): void {\n    const currentAttributeFormCtrl = this.formArray.at(index);\n    const dataElementCtrl = currentAttributeFormCtrl.get('DATA_ELEMENT');\n    if (dataElementCtrl.enabled) {\n      this._disableField(dataElementCtrl);\n      this._enableField(currentAttributeFormCtrl.get('ATTR_DESC'));\n      this._enableField(currentAttributeFormCtrl.get('DATA_TYPE'));\n      this._enableField(currentAttributeFormCtrl.get('DATA_LENGTH'));\n      this._enableField(currentAttributeFormCtrl.get('DECIMAL'));\n      currentAttributeFormCtrl.get('DATA_TYPE').setValue(1);\n      currentAttributeFormCtrl.get('DATA_LENGTH').setValue(10);\n      this._disableField(currentAttributeFormCtrl.get('AUTO_INCREMENT'));\n    } else {\n      dataElementCtrl.enable();\n      this._enableField(dataElementCtrl);\n      this._disableField(currentAttributeFormCtrl.get('ATTR_DESC'));\n      this._disableField(currentAttributeFormCtrl.get('DATA_TYPE'));\n      this._disableField(currentAttributeFormCtrl.get('DATA_LENGTH'));\n      this._disableField(currentAttributeFormCtrl.get('DECIMAL'));\n      this._disableField(currentAttributeFormCtrl.get('AUTO_INCREMENT'));\n    }\n  }\n\n  _enableField(ctrl: AbstractControl) {\n    ctrl.setValue(null);\n    ctrl.enable();\n  }\n\n  _disableField(ctrl: AbstractControl) {\n    if (ctrl.value !== null && ctrl.value !== '') {\n      ctrl.setValue(null);\n      ctrl.markAsDirty();\n    }\n    ctrl.disable();\n  }\n\n  onChangeDataType(attrFormGroup: AbstractControl): void {\n    switch (attrFormGroup.get('DATA_TYPE').value) {\n      case '1': // char\n        attrFormGroup.get('DATA_LENGTH').setValue(10);\n        attrFormGroup.get('DECIMAL').setValue(null);\n        this._disableField(attrFormGroup.get('AUTO_INCREMENT'));\n        break;\n      case '2': // Integer\n        attrFormGroup.get('DATA_LENGTH').setValue(null);\n        attrFormGroup.get('DECIMAL').setValue(null);\n        this._enableField(attrFormGroup.get('AUTO_INCREMENT'));\n        break;\n      case '4': // decimal\n        attrFormGroup.get('DATA_LENGTH').setValue(23);\n        attrFormGroup.get('DECIMAL').setValue(2);\n        this._disableField(attrFormGroup.get('AUTO_INCREMENT'));\n        break;\n      default:\n        attrFormGroup.get('DATA_LENGTH').setValue(null);\n        attrFormGroup.get('DECIMAL').setValue(null);\n        this._disableField(attrFormGroup.get('AUTO_INCREMENT'));\n    }\n    attrFormGroup.get('DATA_LENGTH').markAsDirty();\n  }\n\n  onChangeAttributeName(index: number): void {\n    if (index === this.formArray.length - 1 && !this.formArray.controls[index].value.ATTR_GUID) {\n      // Only work for the last New line\n      this.formArray.push(this._createAnAttributeFormCtrl());\n    }\n  }\n\n  onChangeDataElement(index: number): void {\n    const attributeFormGroup = this.formArray.at(index);\n    const dataElementCtrl = attributeFormGroup.get('DATA_ELEMENT');\n    this.entityService.getDataElement(dataElementCtrl.value).subscribe(data => {\n      if (data['msgCat']) {\n        dataElementCtrl.setErrors({message: data['msgShortText']});\n      } else {\n        attributeFormGroup.get('ATTR_DESC').setValue(data['ELEMENT_DESC']);\n        attributeFormGroup.get('DATA_TYPE').setValue(data['DATA_TYPE']);\n        attributeFormGroup.get('DATA_LENGTH').setValue(data['DATA_LENGTH']);\n        attributeFormGroup.get('DECIMAL').setValue(data['DECIMAL']);\n        if (attributeFormGroup.get('DATA_TYPE').value === 2) {\n          this._enableField(attributeFormGroup.get('AUTO_INCREMENT'));\n        } else {\n          this._disableField(attributeFormGroup.get('AUTO_INCREMENT'));\n        }\n      }\n    });\n  }\n\n  checkAttributes(): Message[] {\n    const Messages: Message[] = [];\n    if ( this.formArray.controls.findIndex( control => control.get('PRIMARY_KEY').value ) === -1 ) {\n      Messages.push(this.messageService.generateMessage(\n        'MODEL', 'RELATION_PRIMARY_KEY_MISSING', 'E'));\n    }\n    return Messages;\n  }\n\n  processChangedAttributes(): any[] {\n    const changedAttributes = [];\n    let changedAttribute;\n    let order = 0;\n    if (this.formArray.dirty) {\n      this.formArray.controls.forEach((attribute, index) => {\n        if (attribute.get('ATTR_NAME').value.trim() === '') { return; }\n        order = index + 1;\n        if (order !== attribute.get('ORDER').value) {\n          attribute.get('ORDER').setValue(order);\n          attribute.get('ORDER').markAsDirty();\n        }\n        if (attribute.dirty) {\n          changedAttribute = {};\n          if (attribute.get('ATTR_GUID').value) { // Update Case\n            changedAttribute['action'] = 'update';\n            changedAttribute['ATTR_GUID'] = attribute.get('ATTR_GUID').value;\n            const attrFormGroup = attribute as FormGroup;\n            Object.keys(attrFormGroup.controls).forEach(key => {\n              const formControl = attrFormGroup.controls[key];\n              if (formControl.dirty) {\n                changedAttribute[key] = formControl.value;\n              }\n            });\n          } else { // New Add Case\n            changedAttribute['action'] = 'add';\n            const attrFormGroup = attribute as FormGroup;\n            Object.keys(attrFormGroup.controls).forEach(key => {\n              const formControl = attrFormGroup.controls[key];\n              changedAttribute[key] = formControl.value;\n            });\n          }\n        } else {\n          changedAttribute = null;\n        }\n        if (changedAttribute) {\n          changedAttributes.push(changedAttribute);\n        }\n      });\n\n      // Deletion Case\n      this.deletedAttributes.forEach(attribute => {\n        changedAttribute = {action: 'delete', ATTR_GUID: attribute.ATTR_GUID, ATTR_NAME: attribute.ATTR_NAME};\n        changedAttributes.push(changedAttribute);\n      });\n\n      return changedAttributes;\n    }\n  }\n\n  generateFormArray(): void {\n    const formArray = [];\n    if (this.attributes) {\n      this.attributes.forEach( attribute => {\n        const isDataElementAttribute = !!attribute.DATA_ELEMENT;\n        formArray.push(this.fb.group({\n          ATTR_GUID: [attribute.ATTR_GUID],\n          RELATION_ID: [attribute.RELATION_ID],\n          ATTR_NAME: [attribute.ATTR_NAME],\n          ATTR_DESC: [{value: attribute.ATTR_DESC, disabled: isDataElementAttribute}],\n          DATA_ELEMENT: [{value: attribute.DATA_ELEMENT, disabled: !isDataElementAttribute}],\n          DATA_TYPE: [{value: attribute.DATA_TYPE, disabled: this.readonly || this.isFieldGray(attribute) || isDataElementAttribute}],\n          DATA_LENGTH: [{value: attribute.DATA_LENGTH, disabled: isDataElementAttribute}],\n          DECIMAL: [{value: attribute.DECIMAL, disabled: isDataElementAttribute}],\n          ORDER: [attribute.ORDER],\n          PRIMARY_KEY: [{value: attribute.PRIMARY_KEY, disabled: this.readonly || this.isFieldGray(attribute)}],\n          AUTO_INCREMENT: [{\n            value: attribute.AUTO_INCREMENT,\n            disabled: this.readonly || this.isFieldGray(attribute) || attribute.DATA_TYPE !== 2}]\n        }));\n      });\n    }\n    if (this.isNewMode) {\n      formArray.push(this._createAnAttributeFormCtrl());\n    }\n    this.parentForm.addControl('ATTRIBUTES', new FormArray(formArray));\n  }\n\n  switchEditDisplay(readonly: boolean) {\n    if (!readonly) { // To Edit Mode\n      this.formArray.controls.forEach(attrFormGroup => {\n        if (!this.isFieldGray(attrFormGroup.value)) {\n          if (!attrFormGroup.get('DATA_ELEMENT').value) {\n            attrFormGroup.get('DATA_TYPE').enable();\n          }\n          attrFormGroup.get('PRIMARY_KEY').enable();\n          if (attrFormGroup.get('DATA_TYPE').value === 2) {\n            attrFormGroup.get('AUTO_INCREMENT').enable();\n          } else {\n            attrFormGroup.get('AUTO_INCREMENT').disable();\n          }\n        }\n      });\n      this.formArray.push(this._createAnAttributeFormCtrl());\n    } else { // To Display Mode\n      let lastIndex = this.formArray.length - 1;\n      while (lastIndex >= 0 && this.formArray.controls[lastIndex].get('ATTR_NAME').value.trim() === '') {\n        this.formArray.removeAt(lastIndex);\n        lastIndex--;\n      }\n      this.formArray.controls.forEach(attrFormGroup => {\n        attrFormGroup.get('DATA_TYPE').disable();\n        attrFormGroup.get('PRIMARY_KEY').disable();\n        attrFormGroup.get('AUTO_INCREMENT').disable();\n      });\n    }\n  }\n\n  isFieldGray(attribute: Attribute): boolean {\n    return this.relationID.substr(0, 3) === 'rs_' &&\n        attribute && attribute.ATTR_NAME &&\n       (attribute.ATTR_NAME === 'VALID_FROM' ||\n        attribute.ATTR_NAME === 'VALID_TO' ||\n        attribute.ATTR_NAME.substr(-14, 14) === '_INSTANCE_GUID' ||\n        attribute.ATTR_NAME.substr(-10, 10) === '_ENTITY_ID');\n  }\n}\n","export default \".dk-table {\\n  display: block;\\n  overflow-x: auto;\\n  white-space: nowrap;\\n  border: none;\\n}\\n.dk-actions{\\n  width: 4rem;\\n  min-width: 4rem;\\n  max-width: 4rem;\\n}\\n.dk-description{\\n  width: 20rem;\\n  min-width: 20rem;\\n  max-width: 20rem;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kZWwvZGF0YS1kb21haW4vZGF0YS1kb21haW4tZGV0YWlsL2RhdGEtZG9tYWluLWRldGFpbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsY0FBYztFQUNkLGdCQUFnQjtFQUNoQixtQkFBbUI7RUFDbkIsWUFBWTtBQUNkO0FBQ0E7RUFDRSxXQUFXO0VBQ1gsZUFBZTtFQUNmLGVBQWU7QUFDakI7QUFDQTtFQUNFLFlBQVk7RUFDWixnQkFBZ0I7RUFDaEIsZ0JBQWdCO0FBQ2xCIiwiZmlsZSI6InNyYy9hcHAvbW9kZWwvZGF0YS1kb21haW4vZGF0YS1kb21haW4tZGV0YWlsL2RhdGEtZG9tYWluLWRldGFpbC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmRrLXRhYmxlIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG92ZXJmbG93LXg6IGF1dG87XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIGJvcmRlcjogbm9uZTtcbn1cbi5kay1hY3Rpb25ze1xuICB3aWR0aDogNHJlbTtcbiAgbWluLXdpZHRoOiA0cmVtO1xuICBtYXgtd2lkdGg6IDRyZW07XG59XG4uZGstZGVzY3JpcHRpb257XG4gIHdpZHRoOiAyMHJlbTtcbiAgbWluLXdpZHRoOiAyMHJlbTtcbiAgbWF4LXdpZHRoOiAyMHJlbTtcbn1cbiJdfQ== */\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {AbstractControl, FormArray, FormBuilder, FormControl, FormGroup} from '@angular/forms';\nimport {ActivatedRoute, ParamMap, Router} from '@angular/router';\nimport {UniqueDataDomainValidator} from '../../model-validators';\nimport {Message, MessageService} from 'ui-message-angular';\nimport {ModelService} from '../../model.service';\nimport {DialogService} from '../../../dialog.service';\nimport {msgStore} from '../../../msgStore';\nimport {switchMap} from 'rxjs/operators';\nimport {Observable, of} from 'rxjs';\nimport {DataDomainMeta, SearchHelpComponent, EntityService, SearchHelp, SearchHelpMethod} from 'jor-angular';\n\n@Component({\n  selector: 'app-data-domain-detail',\n  templateUrl: './data-domain-detail.component.html',\n  styleUrls: ['./data-domain-detail.component.css']\n})\nexport class DataDomainDetailComponent implements OnInit {\n\n  dataDomainMeta: DataDomainMeta;\n  readonly = true;\n  isNewMode = false;\n  dataDomainForm: FormGroup;\n  dataTypes = [];\n  changedDataDomain = {};\n  relationsOfEntity = [];\n  bypassProtection = false;\n  isSearchListShown = true;\n  enableGeneralType = false;\n  enableRegExpr = false;\n  enableValueRelation = false;\n  enableArrayOrInterval = false;\n\n  @ViewChild(SearchHelpComponent, {static: false})\n  private searchHelpComponent !: SearchHelpComponent;\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private fb: FormBuilder,\n              private uniqueDataDomainValidator: UniqueDataDomainValidator,\n              private messageService: MessageService,\n              private modelService: ModelService,\n              private dialogService: DialogService,\n              private entityService: EntityService) {\n    this.messageService.setMessageStore(msgStore, 'EN');\n    this.dataTypes = this.modelService.dataTypes;\n  }\n\n  get domainValueFormArray() {\n    return this.dataDomainForm.get('DOMAIN_VALUES') as FormArray;\n  }\n\n  ngOnInit() {\n    this.route.paramMap.pipe(\n      switchMap((params: ParamMap) => {\n        const domainID = params.get('domainID');\n        if (domainID === 'new') {\n          const dataDomain = new DataDomainMeta();\n          dataDomain.DOMAIN_ID = '';\n          dataDomain.DOMAIN_DESC = '';\n          dataDomain.DATA_TYPE = 1; // Char by default\n          dataDomain.DATA_LENGTH = 10;\n          dataDomain.DOMAIN_TYPE = 0;\n          this.isNewMode = true;\n          this.readonly = false;\n          this.bypassProtection = false;\n          return of(dataDomain);\n        } else {\n          this.readonly = true;\n          this.isNewMode = false;\n          return this.entityService.getDataDomain(domainID);\n        }\n      })\n    ).subscribe(data => {\n      if ( 'msgName' in data) {\n        this.messageService.clearMessages();\n        this.dataDomainMeta = null;\n        this.dataDomainForm = null;\n        this.messageService.report(<Message>data);\n      } else {\n        this.messageService.clearMessages();\n        if (history.state.message) {\n          this.messageService.report(history.state.message);\n        }\n        this.dataDomainMeta = <DataDomainMeta>data;\n        this._generateDataDomainForm();\n        this._getRelationsOfEntity( this.dataDomainForm, false);\n      }\n    });\n\n    this.modelService.isSearchListShown$.subscribe( data => this.isSearchListShown = data);\n  }\n\n  showSearchList(): void {\n    this.isSearchListShown = true;\n    this.modelService.showSearchList();\n  }\n\n  _generateDataDomainForm(): void {\n    if (this.dataDomainForm) {\n      this.dataDomainForm.markAsPristine({onlySelf: false});\n      this.dataDomainForm.get('DOMAIN_ID').setValue(this.dataDomainMeta.DOMAIN_ID);\n      this.dataDomainForm.get('DOMAIN_DESC').setValue(this.dataDomainMeta.DOMAIN_DESC);\n      this.dataDomainForm.get('DATA_TYPE').setValue(this.dataDomainMeta.DATA_TYPE);\n      this.dataDomainForm.get('DATA_LENGTH').setValue(this.dataDomainMeta.DATA_LENGTH);\n      this.dataDomainForm.get('DECIMAL').setValue(this.dataDomainMeta.DECIMAL);\n      this.dataDomainForm.get('DOMAIN_TYPE').setValue(this.dataDomainMeta.DOMAIN_TYPE);\n      this.dataDomainForm.get('UNSIGNED').setValue(this.dataDomainMeta.UNSIGNED);\n      this.dataDomainForm.get('CAPITAL_ONLY').setValue(this.dataDomainMeta.CAPITAL_ONLY);\n      this.dataDomainForm.get('REG_EXPR').setValue(this.dataDomainMeta.REG_EXPR);\n      this.dataDomainForm.get('ENTITY_ID').setValue(this.dataDomainMeta.ENTITY_ID);\n      this.dataDomainForm.get('RELATION_ID').setValue(this.dataDomainMeta.RELATION_ID);\n      (<FormArray>this.dataDomainForm.get('DOMAIN_VALUES')).clear();\n      if (this.readonly) {\n        this.dataDomainForm.get('DOMAIN_TYPE').disable();\n        this.dataDomainForm.get('DATA_TYPE').disable();\n      }\n    } else {\n      this.dataDomainForm = this.fb.group({\n        DOMAIN_ID: [this.dataDomainMeta.DOMAIN_ID, {updateOn: 'blur'}],\n        DOMAIN_DESC: [this.dataDomainMeta.DOMAIN_DESC],\n        DATA_TYPE: [{value: this.dataDomainMeta.DATA_TYPE, disabled: this.readonly}],\n        DATA_LENGTH: [this.dataDomainMeta.DATA_LENGTH, [this._validateDataLength]],\n        DECIMAL: [this.dataDomainMeta.DECIMAL, [this._validateDecimal]],\n        DOMAIN_TYPE: [{value: this.dataDomainMeta.DOMAIN_TYPE, disabled: this.readonly}],\n        UNSIGNED: [{value: this.dataDomainMeta.UNSIGNED, disabled: this.readonly}],\n        CAPITAL_ONLY: [{value: this.dataDomainMeta.CAPITAL_ONLY, disabled: this.readonly}],\n        REG_EXPR: [this.dataDomainMeta.REG_EXPR],\n        ENTITY_ID: [this.dataDomainMeta.ENTITY_ID],\n        RELATION_ID: [{value: this.dataDomainMeta.RELATION_ID, disabled: this.readonly}],\n        DOMAIN_VALUES: this.fb.array([])\n      });\n    }\n    this._setNewModeState();\n    if (this.dataDomainMeta.DOMAIN_TYPE >= 3 && this.dataDomainMeta.DOMAIN_VALUES) { // Value Array/Interval\n      this.dataDomainMeta.DOMAIN_VALUES.forEach( domainValue => {\n        this.domainValueFormArray.push(\n          this.fb.group({\n            LOW_VALUE: [domainValue.LOW_VALUE],\n            LOW_VALUE_TEXT: [domainValue.LOW_VALUE_TEXT],\n            HIGH_VALUE: [domainValue.HIGH_VALUE]\n          })\n        );\n      });\n    }\n    this._setDomainType(this.dataDomainForm, false);\n    this._updateLengthAndDecimal(this.dataDomainForm, false);\n  }\n\n  _setNewModeState() {\n    if (this.isNewMode) {\n      this.dataDomainForm.get('DOMAIN_ID').setValidators(this._validateDataDomainID);\n      this.dataDomainForm.get('DOMAIN_ID').setAsyncValidators(\n        this.uniqueDataDomainValidator.validate.bind(this.uniqueDataDomainValidator));\n      this.dataDomainForm.get('DATA_TYPE').enable();\n      this.dataDomainForm.get('DOMAIN_TYPE').enable();\n      this.dataDomainForm.get('DATA_TYPE').markAsDirty(); // Default value mark as dirty\n      this.dataDomainForm.get('DATA_LENGTH').markAsDirty(); // Default value mark as dirty\n      this.dataDomainForm.get('DOMAIN_TYPE').markAsDirty(); // Default value mark as dirty\n    } else {\n      this.dataDomainForm.get('DOMAIN_ID').clearValidators();\n      this.dataDomainForm.get('DOMAIN_ID').clearAsyncValidators();\n      this.dataDomainForm.get('DOMAIN_ID').updateValueAndValidity();\n    }\n  }\n\n  _validateDataDomainID(c: FormControl) {\n    if (c.value.trim() === '') {\n      return {message: 'Data Domain ID is mandatory'};\n    }\n\n    if (c.value.toString().toLowerCase() === 'new') {\n      return {message: '\"NEW/new\" is reserved, thus is not allowed to use!'};\n    }\n\n    if (c.value.toString().length > 32) {\n      return {message: 'Data Domain ID must have length less than 32!'};\n    }\n    return null;\n  }\n\n  _validateDataLength(c: FormControl) {\n    if (c.enabled && !c.value) {\n      return {message: 'Please give a Length'};\n    }\n    return null;\n  }\n\n  _validateDecimal(c: FormControl) {\n    if (c.enabled && !c.value) {\n      return {message: 'Please give a decimal place'};\n    }\n    if (c.value < 1 || c.value > 37) {\n      return {message: 'Decimal place can only between 1 and 37'};\n    }\n    return null;\n  }\n  _validateEntityID(c: FormControl) {\n    if (c.enabled && !c.value) {\n      return {message: 'Please give an entity'};\n    }\n    return null;\n  }\n  _validateRelationID(c: FormControl) {\n    if (c.enabled && !c.value) {\n      return {message: 'Please give a relation'};\n    }\n    return null;\n  }\n\n  switchEditDisplay() {\n    if (this.isNewMode) {\n      this.dialogService.confirm('Discard the new Data Domain?').subscribe(confirm => {\n        if (confirm) {\n          this._switch2DisplayMode();\n          this.dataDomainMeta = null;\n          this.modelService.sendDialogAnswer('OK');\n        } else {\n          this.modelService.sendDialogAnswer('CANCEL');\n        }\n      });\n      return;\n    }\n\n    if (!this.readonly) { // In Change Mode -> Display Mode\n      if (this.dataDomainForm.dirty) {\n        this.dialogService.confirm('Discard changes?').subscribe(confirm => {\n          if (confirm) { // Discard changes and switch to Display Mode\n            this._generateDataDomainForm();\n            this.dataDomainForm.reset(this.dataDomainForm.value);\n            this._switch2DisplayMode();\n          }\n        });\n      } else { // Switch to display mode\n        this._switch2DisplayMode();\n      }\n    } else { // In Display Mode -> Change Mode\n      this._switch2EditMode();\n    }\n\n    this.messageService.clearMessages();\n  }\n\n  _switch2DisplayMode(): void {\n    this.readonly = true;\n    this.dataDomainForm.get('DOMAIN_TYPE').disable();\n    this.dataDomainForm.get('DATA_TYPE').disable();\n    this.dataDomainForm.get('UNSIGNED').disable();\n    this.dataDomainForm.get('CAPITAL_ONLY').disable();\n    this.dataDomainForm.get('RELATION_ID').disable();\n  }\n\n  _switch2EditMode(): void {\n    this.readonly = false;\n    this.dataDomainForm.get('DOMAIN_TYPE').enable();\n    this.dataDomainForm.get('DATA_TYPE').enable();\n    this._setDomainType(this.dataDomainForm, false);\n    this._updateLengthAndDecimal(this.dataDomainForm, false);\n  }\n\n  onChangeDataDomainID(): void {\n    this.modelService.updateDataDomainID(this.dataDomainForm.get('DOMAIN_ID').value);\n  }\n\n  onChangeDataDomainDesc(): void {\n    this.modelService.updateDataDomainDesc(this.dataDomainForm.get('DOMAIN_DESC').value);\n  }\n\n  onChangeDomainType(formGroup: AbstractControl): void {\n    this._setDomainType(formGroup, true);\n  }\n\n  onEntitySearchHelp(control: AbstractControl): void {\n    const searchHelpMeta = new SearchHelp();\n    searchHelpMeta.OBJECT_NAME = 'Entity ID';\n    searchHelpMeta.METHOD = function(entityService: EntityService): SearchHelpMethod {\n      return (searchTerm: string): Observable<object[]> => entityService.listEntityType(searchTerm);\n    }(this.entityService);\n    searchHelpMeta.BEHAVIOUR = 'M';\n    searchHelpMeta.MULTI = false;\n    searchHelpMeta.FUZZY_SEARCH = true;\n    searchHelpMeta.FIELDS = [\n      {FIELD_NAME: 'ENTITY_ID', FIELD_DESC: 'Entity', IMPORT: true, EXPORT: true, LIST_POSITION: 1, FILTER_POSITION: 0},\n      {FIELD_NAME: 'ENTITY_DESC', FIELD_DESC: 'Description', IMPORT: true, EXPORT: true, LIST_POSITION: 2, FILTER_POSITION: 0}\n    ];\n    searchHelpMeta.READ_ONLY = this.readonly || this.dataDomainForm.get('DOMAIN_TYPE').value !== 2;\n    const afterExportFn = function (context: any) {\n      return () => context.onChangeEntityID(control);\n    }(this).bind(this);\n    this.searchHelpComponent.openSearchHelpModal(searchHelpMeta, control, afterExportFn);\n  }\n\n  onChangeEntityID(formGroup: AbstractControl): void {\n    this._getRelationsOfEntity(formGroup, true);\n  }\n\n  _getRelationsOfEntity(dataDomainForm: AbstractControl, setDefault: boolean): void {\n    const domainEntityID = dataDomainForm.get('ENTITY_ID').value;\n    if (!domainEntityID) { return; }\n    this.entityService.getRelationMetaOfEntity(domainEntityID)\n      .subscribe(entityRelations => {\n        if (entityRelations[0]['msgType'] === 'E') {\n          dataDomainForm.get('ENTITY_ID').setErrors({message: entityRelations[0]['msgShortText']});\n        } else {\n          this.relationsOfEntity = entityRelations.map(relationMeta => relationMeta.RELATION_ID )\n            .filter(relationId => relationId.substr(0, 2) !== 'rs' );\n          if (setDefault) {\n            dataDomainForm.get('RELATION_ID').setValue(this.relationsOfEntity[0]);\n            dataDomainForm.get('RELATION_ID').markAsDirty();\n          }\n        }\n      });\n  }\n\n  _setDomainType(formGroup: AbstractControl, markAsDirty: boolean): void {\n    if (markAsDirty) { formGroup.get('DOMAIN_TYPE').markAsDirty(); }\n    switch (+formGroup.get('DOMAIN_TYPE').value) {\n      case 0: // General Type\n        if (+formGroup.get('DATA_TYPE').value === 2) {\n          if (!this.readonly) { formGroup.get('UNSIGNED').enable(); }\n          this._invalidField(formGroup.get('CAPITAL_ONLY'), markAsDirty);\n        } else if (+formGroup.get('DATA_TYPE').value === 1) {\n          if (!this.readonly) { formGroup.get('CAPITAL_ONLY').enable(); }\n          this._invalidField(formGroup.get('UNSIGNED'), markAsDirty);\n        }\n        this._invalidField(formGroup.get('REG_EXPR'), markAsDirty);\n        this._invalidField(formGroup.get('ENTITY_ID'), markAsDirty);\n        this._invalidField(formGroup.get('RELATION_ID'), markAsDirty);\n        this._invalidField(formGroup.get('DOMAIN_VALUES'), markAsDirty, true);\n        break;\n      case 1: // Regular Expression\n        // formGroup.get('REG_EXPR').setValidators(this._validateRegExpr);\n        if (!this.readonly) { formGroup.get('REG_EXPR').enable(); }\n        this._invalidField(formGroup.get('UNSIGNED'), markAsDirty);\n        this._invalidField(formGroup.get('CAPITAL_ONLY'), markAsDirty);\n        this._invalidField(formGroup.get('ENTITY_ID'), markAsDirty);\n        this._invalidField(formGroup.get('RELATION_ID'), markAsDirty);\n        this._invalidField(formGroup.get('DOMAIN_VALUES'), markAsDirty, true);\n        break;\n      case 2: // Value Relation\n        if (!this.readonly) {\n          formGroup.get('ENTITY_ID').enable();\n          formGroup.get('RELATION_ID').enable();\n          formGroup.get('ENTITY_ID').setValidators(this._validateEntityID);\n          formGroup.get('RELATION_ID').setValidators(this._validateRelationID);\n        }\n        this._invalidField(formGroup.get('REG_EXPR'), markAsDirty);\n        this._invalidField(formGroup.get('UNSIGNED'), markAsDirty);\n        this._invalidField(formGroup.get('CAPITAL_ONLY'), markAsDirty);\n        this._invalidField(formGroup.get('DOMAIN_VALUES'), markAsDirty, true);\n        break;\n      case 3: // Value Array\n        if (!this.readonly) { formGroup.get('DOMAIN_VALUES').enable(); }\n        this._invalidField(formGroup.get('ENTITY_ID'), markAsDirty);\n        this._invalidField(formGroup.get('RELATION_ID'), markAsDirty);\n        this._invalidField(formGroup.get('REG_EXPR'), markAsDirty);\n        this._invalidField(formGroup.get('UNSIGNED'), markAsDirty);\n        this._invalidField(formGroup.get('CAPITAL_ONLY'), markAsDirty);\n        this._generateEmptyLines(5);\n        break;\n      case 4: // Value Interval\n        if (!this.readonly) { formGroup.get('DOMAIN_VALUES').enable(); }\n        this._invalidField(formGroup.get('ENTITY_ID'), markAsDirty);\n        this._invalidField(formGroup.get('RELATION_ID'), markAsDirty);\n        this._invalidField(formGroup.get('REG_EXPR'), markAsDirty);\n        this._invalidField(formGroup.get('UNSIGNED'), markAsDirty);\n        this._invalidField(formGroup.get('CAPITAL_ONLY'), markAsDirty);\n        this._generateEmptyLines(5);\n        break;\n      default:\n    }\n  }\n\n  _generateEmptyLines(num: number): void {\n    const existingLines = this.domainValueFormArray.length;\n    for (let i = 0; i < num - existingLines; i++) {\n      this.domainValueFormArray.push(\n        this.fb.group({\n          LOW_VALUE: [''],\n          LOW_VALUE_TEXT: [''],\n          HIGH_VALUE: ['']\n        }));\n    }\n  }\n\n  onChangeDataType(formGroup: AbstractControl): void {\n    switch (+formGroup.get('DATA_TYPE').value) {\n      case 1: // char\n        formGroup.get('DATA_LENGTH').setValue(10);\n        formGroup.get('DECIMAL').setValue(null);\n        break;\n      case 4: // decimal\n        formGroup.get('DATA_LENGTH').setValue(23);\n        formGroup.get('DECIMAL').setValue(2);\n        break;\n      default:\n        formGroup.get('DATA_LENGTH').setValue(null);\n        formGroup.get('DECIMAL').setValue(null);\n    }\n    formGroup.get('DATA_LENGTH').markAsDirty();\n    formGroup.get('DECIMAL').markAsDirty();\n    this._updateLengthAndDecimal(formGroup, true);\n  }\n\n  _updateLengthAndDecimal(formGroup: AbstractControl, markAsDirty: boolean): void {\n    switch (+formGroup.get('DATA_TYPE').value) {\n      case 1: // char\n        if (!this.readonly) {\n          formGroup.get('DATA_LENGTH').enable();\n          formGroup.get('DATA_LENGTH').setValidators(this._validateDataLength);\n        }\n        this._invalidField(formGroup.get('DECIMAL'));\n        if (+formGroup.get('DOMAIN_TYPE').value === 0) {\n          if (!this.readonly) { formGroup.get('CAPITAL_ONLY').enable(); }\n          this._invalidField(formGroup.get('UNSIGNED'));\n        }\n        this.enableGeneralType = true;\n        this.enableRegExpr = true;\n        this.enableValueRelation = true;\n        this.enableArrayOrInterval = true;\n        break;\n      case 2: // Integer\n        formGroup.get('DATA_LENGTH').disable();\n        this._invalidField(formGroup.get('DECIMAL'), markAsDirty);\n        if (+formGroup.get('DOMAIN_TYPE').value === 0) {\n          if (!this.readonly) { formGroup.get('UNSIGNED').enable(); }\n          this._invalidField(formGroup.get('CAPITAL_ONLY'), markAsDirty);\n        } else if (+formGroup.get('DOMAIN_TYPE').value === 1 || +formGroup.get('DOMAIN_TYPE').value === 2) {\n          if (!this.readonly) { formGroup.get('DOMAIN_TYPE').setValue(0); }\n          this._setDomainType(formGroup, markAsDirty);\n        }\n        this.enableGeneralType = true;\n        this.enableRegExpr = false;\n        this.enableValueRelation = false;\n        this.enableArrayOrInterval = true;\n        break;\n      case 4: // decimal\n        if (!this.readonly) {\n          formGroup.get('DATA_LENGTH').enable();\n          formGroup.get('DATA_LENGTH').setValidators(this._validateDataLength);\n          formGroup.get('DECIMAL').enable();\n          formGroup.get('DECIMAL').setValidators(this._validateDecimal);\n          formGroup.get('UNSIGNED').enable();\n        }\n        this._invalidField(formGroup.get('CAPITAL_ONLY'), markAsDirty);\n        formGroup.get('DOMAIN_TYPE').setValue(0);\n        this._setDomainType(formGroup, markAsDirty);\n        this.enableGeneralType = true;\n        this.enableRegExpr = false;\n        this.enableValueRelation = false;\n        this.enableArrayOrInterval = false;\n        break;\n      case 5: // string\n        this._invalidField(formGroup.get('DATA_LENGTH'), markAsDirty);\n        this._invalidField(formGroup.get('DECIMAL'), markAsDirty);\n        formGroup.get('DOMAIN_TYPE').setValue(1);\n        this._setDomainType(formGroup, markAsDirty);\n        this.enableGeneralType = false;\n        this.enableRegExpr = true;\n        this.enableValueRelation = false;\n        this.enableArrayOrInterval = false;\n        break;\n      default:\n        this._invalidField(formGroup.get('DATA_LENGTH'), markAsDirty);\n        this._invalidField(formGroup.get('DECIMAL'), markAsDirty);\n        this._invalidField(formGroup.get('CAPITAL_ONLY'), markAsDirty);\n        this._invalidField(formGroup.get('UNSIGNED'), markAsDirty);\n        formGroup.get('DOMAIN_TYPE').setValue(0);\n        this._setDomainType(formGroup, markAsDirty);\n        this.enableGeneralType = true;\n        this.enableRegExpr = false;\n        this.enableValueRelation = false;\n        this.enableArrayOrInterval = false;\n    }\n  }\n\n  _invalidField(fieldCtrl: AbstractControl, markAsDirty: boolean = false, isArray: boolean = false): void {\n    fieldCtrl.clearValidators();\n    fieldCtrl.clearAsyncValidators();\n    fieldCtrl.disable();\n    if (markAsDirty) {\n      isArray ? (<FormArray>fieldCtrl).clear() : fieldCtrl.setValue(null);\n      fieldCtrl.markAsDirty();\n    }\n  }\n\n  onChangeDomainValue(index: number): void {\n    const currentDomainValueCtrl = this.domainValueFormArray.at(index);\n    if (!currentDomainValueCtrl.get('LOW_VALUE').value) { return; }\n    const indexFound = this.domainValueFormArray.controls.findIndex(\n      (ctrl, valueIndex) => index !== valueIndex && ctrl.value.LOW_VALUE === currentDomainValueCtrl.value.LOW_VALUE);\n    if (indexFound > -1) {\n      currentDomainValueCtrl.get('LOW_VALUE').setErrors({message: 'Value is duplicated!'});\n    } else {\n      currentDomainValueCtrl.get('LOW_VALUE').setErrors(null);\n    }\n\n    if (this.dataDomainForm.get('DOMAIN_TYPE').value === 4 && currentDomainValueCtrl.get('LOW_VALUE').value) {\n      if (!currentDomainValueCtrl.value.HIGH_VALUE ||\n        currentDomainValueCtrl.value.HIGH_VALUE <=  currentDomainValueCtrl.value.LOW_VALUE ) {\n        currentDomainValueCtrl.get('HIGH_VALUE').setErrors({message: 'High value must be greater!'});\n      } else {\n        currentDomainValueCtrl.get('HIGH_VALUE').setErrors(null);\n      }\n    }\n  }\n\n  insertDomainValue(index: number): void {\n    this.domainValueFormArray.insert(index, this.fb.group({\n        LOW_VALUE: [''],\n        LOW_VALUE_TEXT: [''],\n        HIGH_VALUE: ['']\n      }));\n  }\n\n  deleteDomainValue(index: number): void {\n    this.domainValueFormArray.removeAt(index);\n    this.domainValueFormArray.markAsDirty();\n  }\n\n  canDeactivate(): Observable<boolean> | boolean {\n    if (this.isNewMode || (!this.bypassProtection && this.dataDomainForm && this.dataDomainForm.dirty)) {\n      const dialogAnswer = this.dialogService.confirm('Discard changes?');\n      dialogAnswer.subscribe(confirm => {\n        if (confirm) {\n          this.modelService.sendDialogAnswer('OK');\n        } else {\n          this.modelService.sendDialogAnswer('CANCEL');\n        }\n      });\n      return dialogAnswer;\n    } else {\n      return true;\n    }\n  }\n\n  save(): void {\n    if (!this.dataDomainForm.dirty) {\n      return this.messageService.reportMessage('MODEL', 'NO_CHANGE', 'S');\n    }\n\n    if (this.dataDomainForm.invalid) {\n      return this.messageService.reportMessage('MODEL', 'INVALID_DATA', 'E');\n    }\n\n    if (this.isNewMode) {\n      this.changedDataDomain['action'] = 'add';\n      this.changedDataDomain['DOMAIN_ID'] = this.dataDomainForm.get('DOMAIN_ID').value;\n    } else {\n      this.changedDataDomain['action'] = 'update';\n      this.changedDataDomain['DOMAIN_ID'] = this.dataDomainMeta.DOMAIN_ID;\n    }\n    if (this.dataDomainForm.get('DOMAIN_DESC').dirty) {\n      this.changedDataDomain['DOMAIN_DESC'] = this.dataDomainForm.get('DOMAIN_DESC').value;\n    }\n    if (this.dataDomainForm.get('DATA_TYPE').dirty) {\n      this.changedDataDomain['DATA_TYPE'] = this.dataDomainForm.get('DATA_TYPE').value;\n    }\n    if (this.dataDomainForm.get('DATA_LENGTH').dirty) {\n      this.changedDataDomain['DATA_LENGTH'] = this.dataDomainForm.get('DATA_LENGTH').value;\n    }\n    if (this.dataDomainForm.get('DECIMAL').dirty) {\n      this.changedDataDomain['DECIMAL'] = this.dataDomainForm.get('DECIMAL').value;\n    }\n    if (this.dataDomainForm.get('DOMAIN_TYPE').dirty) {\n      this.changedDataDomain['DOMAIN_TYPE'] = this.dataDomainForm.get('DOMAIN_TYPE').value;\n    }\n    if (this.dataDomainForm.get('UNSIGNED').dirty) {\n      this.changedDataDomain['UNSIGNED'] = this.dataDomainForm.get('UNSIGNED').value;\n    }\n    if (this.dataDomainForm.get('CAPITAL_ONLY').dirty) {\n      this.changedDataDomain['CAPITAL_ONLY'] = this.dataDomainForm.get('CAPITAL_ONLY').value;\n    }\n    if (this.dataDomainForm.get('REG_EXPR').dirty) {\n      this.changedDataDomain['REG_EXPR'] = this.dataDomainForm.get('REG_EXPR').value;\n    }\n    if (this.dataDomainForm.get('ENTITY_ID').dirty) {\n      this.changedDataDomain['ENTITY_ID'] = this.dataDomainForm.get('ENTITY_ID').value;\n    }\n    if (this.dataDomainForm.get('RELATION_ID').dirty) {\n      this.changedDataDomain['RELATION_ID'] = this.dataDomainForm.get('RELATION_ID').value;\n    }\n    if (this.dataDomainForm.get('DOMAIN_VALUES').dirty) {\n      this.changedDataDomain['DOMAIN_VALUES'] = [];\n      this.dataDomainForm.get('DOMAIN_VALUES').value.forEach( domainValue => {\n        if (domainValue.LOW_VALUE) {\n          this.changedDataDomain['DOMAIN_VALUES'].push(domainValue);\n        }\n      });\n    }\n    this.entityService.saveDataDomain(this.changedDataDomain)\n      .subscribe(data => this._postActivityAfterSavingDataDomain(data));\n  }\n\n  _postActivityAfterSavingDataDomain(data: any) {\n    this.changedDataDomain = {};\n    if (data['DOMAIN_ID']) {\n      if (this.isNewMode) {\n        this.isNewMode = false;\n        this.bypassProtection = true;\n        this.router.navigate(['/model/data-domain/' + data['DOMAIN_ID']],\n          {state: {message: this.messageService.generateMessage(\n                'MODEL', 'DATA_DOMAIN_SAVED', 'S', data['DOMAIN_ID'])}});\n      } else {\n        this._switch2DisplayMode();\n        this.dataDomainMeta = data;\n        this._generateDataDomainForm();\n        this.messageService.reportMessage('MODEL', 'DATA_DOMAIN_SAVED', 'S', data['DOMAIN_ID']);\n      }\n    } else {\n      if (data instanceof Array) {\n        data.forEach(err => this.messageService.add(err));\n      } else {\n        this.messageService.report(<Message>data);\n      }\n    }\n  }\n}\n\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZGVsL2RhdGEtZG9tYWluL2RhdGEtZG9tYWluLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {ModelService} from '../model.service';\nimport {MessageService} from 'ui-message-angular';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {msgStore} from '../../msgStore';\nimport {debounceTime, distinctUntilChanged, switchMap} from 'rxjs/operators';\nimport {DataDomainH, DataDomainMeta, EntityService} from 'jor-angular';\n\n@Component({\n  selector: 'app-data-domain',\n  templateUrl: './data-domain.component.html',\n  styleUrls: ['./data-domain.component.css']\n})\nexport class DataDomainComponent implements OnInit {\n  dataDomainList: DataDomainH[] = [];\n  isSearchListShown = true;\n  private searchTerms = new Subject<string>();\n  private theSelectedDataDomain: DataDomainH;\n\n  constructor(private entityService: EntityService,\n              private modelService: ModelService,\n              private messageService: MessageService,\n              private route: ActivatedRoute,\n              private router: Router) {\n    this.messageService.setMessageStore(msgStore, 'EN');\n  }\n\n  ngOnInit() {\n    this.searchTerms.pipe(\n      debounceTime(300),\n      distinctUntilChanged(),\n      switchMap((term: string) => this.entityService.listDataDomain(term)),\n    ).subscribe(data => {\n      this.dataDomainList = data;\n      let domainID;\n      if (this.route.snapshot.firstChild) {\n        domainID = this.route.snapshot.firstChild.paramMap.get('domainID');\n      }\n      if (domainID ) {\n        if (domainID === 'new') {\n          this._newDataDomain();\n        } else {\n          this.onSelect(this.dataDomainList.find(dataDomain => dataDomain.DOMAIN_ID === domainID));\n        }\n      }\n    });\n    this.searchDataDomain(''); // The initial list\n\n    this.modelService.theSelectedDataDomain$.subscribe( data => {\n      if (this.theSelectedDataDomain) {\n        this.theSelectedDataDomain.DOMAIN_ID = data['DOMAIN_ID'];\n        this.theSelectedDataDomain.DOMAIN_DESC = data['DOMAIN_DESC'];\n      }\n    });\n\n    this.modelService.dialogAnswer$.subscribe( answer => {\n      if (answer === 'OK' && this.dataDomainList[0] && !this.dataDomainList[0].CREATE_TIME) {\n        this.dataDomainList.splice(0, 1); // Remove the first one.\n      } else if (answer === 'CANCEL') {\n        const domainID = this.route.snapshot.firstChild.paramMap.get('domainID');\n        if (domainID) {\n          if (domainID === 'new') {\n            this.onSelect(this.dataDomainList[0]);\n          } else {\n            this.onSelect(this.dataDomainList.find(dataDomain => dataDomain.DOMAIN_ID === domainID));\n          }\n        }\n      }\n    });\n\n    this.modelService.isSearchListShown$.subscribe( data => this.isSearchListShown = data);\n  }\n\n  hideSearchList(): void {\n    this.isSearchListShown = false;\n    this.modelService.hideSearchList();\n  }\n\n  onSelect(dataDomain: DataDomainH): void {\n    if (dataDomain) {\n      this.theSelectedDataDomain = dataDomain;\n      this.modelService.setSelectedDataDomain(dataDomain);\n    }\n  }\n\n  searchDataDomain(term: string): void {\n    this.searchTerms.next(term);\n  }\n\n  newDataDomian(): void {\n    if (this.route.snapshot.firstChild && this.route.snapshot.firstChild.paramMap.get('domainID') === 'new') {\n      this.messageService.reportMessage('MODEL', 'UNSAVED_NEW', 'E');\n    } else {\n      this._newDataDomain();\n      this.router.navigate(['/model/data-domain/new']);\n    }\n  }\n\n  _newDataDomain(): void {\n    this.theSelectedDataDomain = new DataDomainMeta();\n    this.theSelectedDataDomain.DOMAIN_ID = 'new';\n    this.theSelectedDataDomain.DOMAIN_DESC = 'description';\n    this.theSelectedDataDomain.VERSION_NO = 1;\n    this.theSelectedDataDomain.LAST_CHANGE_BY = 'DH001';\n    this.theSelectedDataDomain.LAST_CHANGE_TIME = new Date().toDateString();\n    this.modelService.setSelectedDataDomain(this.theSelectedDataDomain);\n    this.dataDomainList.splice(0, 0, this.theSelectedDataDomain);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZGVsL2RhdGEtZWxlbWVudC9kYXRhLWVsZW1lbnQtZGV0YWlsL2RhdGEtZWxlbWVudC1kZXRhaWwuY29tcG9uZW50LmNzcyJ9 */\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {AbstractControl, FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {ActivatedRoute, ParamMap, Router} from '@angular/router';\nimport {UniqueDataElementValidator} from '../../model-validators';\nimport {Message, MessageService} from 'ui-message-angular';\nimport {ModelService} from '../../model.service';\nimport {DialogService} from '../../../dialog.service';\nimport {msgStore} from '../../../msgStore';\nimport {switchMap} from 'rxjs/operators';\nimport {Observable, of} from 'rxjs';\nimport {DataElementMeta, EntityService, SearchHelp, SearchHelpComponent, SearchHelpMethod} from 'jor-angular';\n\n@Component({\n  selector: 'app-data-element-detail',\n  templateUrl: './data-element-detail.component.html',\n  styleUrls: ['./data-element-detail.component.css']\n})\nexport class DataElementDetailComponent implements OnInit {\n  dataElementMeta: DataElementMeta;\n  readonly = true;\n  isNewMode = false;\n  dataElementForm: FormGroup;\n  dataTypes = [];\n  changedDataElement = {};\n  bypassProtection = false;\n  isSearchListShown = true;\n\n  @ViewChild(SearchHelpComponent, {static: false})\n  private searchHelpComponent !: SearchHelpComponent;\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private fb: FormBuilder,\n              private uniqueDataElementValidator: UniqueDataElementValidator,\n              private messageService: MessageService,\n              private modelService: ModelService,\n              private dialogService: DialogService,\n              private entityService: EntityService) {\n    this.messageService.setMessageStore(msgStore, 'EN');\n    this.dataTypes = this.modelService.dataTypes;\n  }\n\n  ngOnInit() {\n    this.route.paramMap.pipe(\n      switchMap((params: ParamMap) => {\n        const elementID = params.get('elementID');\n        if (elementID === 'new') {\n          const dataElement = new DataElementMeta();\n          dataElement.ELEMENT_ID = '';\n          dataElement.ELEMENT_DESC = '';\n          dataElement.DATA_TYPE = 1;\n          dataElement.DATA_LENGTH = 10;\n          this.isNewMode = true;\n          this.readonly = false;\n          this.bypassProtection = false;\n          return of(dataElement);\n        } else {\n          this.readonly = true;\n          this.isNewMode = false;\n          return this.entityService.getDataElement(elementID);\n        }})\n    ).subscribe(data => {\n      if ( 'msgName' in data) {\n        this.messageService.clearMessages();\n        this.dataElementMeta = null;\n        this.dataElementForm = null;\n        this.messageService.report(<Message>data);\n      } else {\n        this.messageService.clearMessages();\n        if (history.state.message) {\n          this.messageService.report(history.state.message);\n        }\n        this.dataElementMeta = <DataElementMeta>data;\n        this._generateDataElementForm();\n      }\n    });\n\n    this.modelService.isSearchListShown$.subscribe( data => this.isSearchListShown = data);\n  }\n\n  showSearchList(): void {\n    this.isSearchListShown = true;\n    this.modelService.showSearchList();\n  }\n\n  onSearchHelp(control: AbstractControl): void {\n    const searchHelpMeta = new SearchHelp();\n    searchHelpMeta.OBJECT_NAME = 'Data Domain';\n    searchHelpMeta.METHOD = function(entityService: EntityService): SearchHelpMethod {\n      return (searchTerm: string): Observable<object[]> => entityService.listDataDomain(searchTerm);\n    }(this.entityService);\n    searchHelpMeta.BEHAVIOUR = 'A';\n    searchHelpMeta.MULTI = false;\n    searchHelpMeta.FUZZY_SEARCH = true;\n    searchHelpMeta.FIELDS = [\n      {FIELD_NAME: 'DOMAIN_ID', FIELD_DESC: 'Domain', IMPORT: true, EXPORT: true, LIST_POSITION: 1, FILTER_POSITION: 0},\n      {FIELD_NAME: 'DOMAIN_DESC', FIELD_DESC: 'Description', IMPORT: true, EXPORT: true, LIST_POSITION: 2, FILTER_POSITION: 0}\n    ];\n    searchHelpMeta.READ_ONLY = this.readonly || !this.dataElementForm.get('USE_DOMAIN').value;\n    const afterExportFn = function (context: any) {\n      return () => context.onChangeDataDomain(control);\n    }(this).bind(this);\n    this.searchHelpComponent.openSearchHelpModal(searchHelpMeta, control, afterExportFn);\n  }\n\n  _generateDataElementForm(): void {\n    if (this.dataElementForm) {\n      this.dataElementForm.markAsPristine({onlySelf: false});\n      this.dataElementForm.get('ELEMENT_ID').setValue(this.dataElementMeta.ELEMENT_ID);\n      this.dataElementForm.get('ELEMENT_DESC').setValue(this.dataElementMeta.ELEMENT_DESC);\n      this.dataElementForm.get('LABEL_TEXT').setValue(this.dataElementMeta.LABEL_TEXT);\n      this.dataElementForm.get('LIST_HEADER_TEXT').setValue(this.dataElementMeta.LIST_HEADER_TEXT);\n      this.dataElementForm.get('DOMAIN_ID').setValue(this.dataElementMeta.DOMAIN_ID);\n      this.dataElementForm.get('DATA_TYPE').setValue(this.dataElementMeta.DATA_TYPE);\n      this.dataElementForm.get('DATA_LENGTH').setValue(this.dataElementMeta.DATA_LENGTH);\n      this.dataElementForm.get('DECIMAL').setValue(this.dataElementMeta.DECIMAL);\n      this.dataElementForm.get('SEARCH_HELP_ID').setValue(this.dataElementMeta.SEARCH_HELP_ID);\n      this.dataElementForm.get('SEARCH_HELP_EXPORT_FIELD').setValue(this.dataElementMeta.SEARCH_HELP_EXPORT_FIELD);\n      this.dataElementForm.get('PARAMETER_ID').setValue(this.dataElementMeta.PARAMETER_ID);\n      if (this.dataElementMeta.DOMAIN_ID) {\n        this.dataElementForm.get('USE_DOMAIN').setValue(1);\n        this.dataElementForm.get('DATA_TYPE').disable();\n      } else {\n        this.dataElementForm.get('USE_DOMAIN').setValue(0);\n        this.dataElementForm.get('DATA_TYPE').enable();\n      }\n      if (this.readonly) {\n        this.dataElementForm.get('USE_DOMAIN').disable();\n        this.dataElementForm.get('DOMAIN_ID').disable();\n        this.dataElementForm.get('DATA_TYPE').disable();\n      }\n    } else {\n      this.dataElementForm = this.fb.group({\n        ELEMENT_ID: [this.dataElementMeta.ELEMENT_ID, {updateOn: 'blur'}],\n        ELEMENT_DESC: [this.dataElementMeta.ELEMENT_DESC],\n        LABEL_TEXT: [this.dataElementMeta.LABEL_TEXT],\n        LIST_HEADER_TEXT: [this.dataElementMeta.LIST_HEADER_TEXT],\n        DOMAIN_ID: [this.dataElementMeta.DOMAIN_ID],\n        DATA_TYPE: [{value: this.dataElementMeta.DATA_TYPE, disabled: this.readonly}],\n        DATA_LENGTH: [this.dataElementMeta.DATA_LENGTH, [this._validateDataLength]],\n        DECIMAL: [this.dataElementMeta.DECIMAL, [this._validateDecimal]],\n        SEARCH_HELP_ID: [this.dataElementMeta.SEARCH_HELP_ID],\n        SEARCH_HELP_EXPORT_FIELD: [this.dataElementMeta.SEARCH_HELP_EXPORT_FIELD],\n        PARAMETER_ID: [this.dataElementMeta.PARAMETER_ID],\n        USE_DOMAIN: [{value: this.dataElementMeta.DOMAIN_ID ? 1 : 0, disabled: this.readonly}]\n      });\n    }\n    this._setNewModeState();\n    if (this.dataElementForm.get('USE_DOMAIN').value) {\n      this.dataElementForm.get('DOMAIN_ID').setValidators(Validators.required);\n      this.onChangeDataDomain(this.dataElementForm);\n    } else {\n      this.dataElementForm.get('DOMAIN_ID').setErrors(null);\n      this.dataElementForm.get('DOMAIN_ID').clearValidators();\n    }\n    this._updateLengthAndDecimal(this.dataElementForm);\n  }\n\n  _setNewModeState() {\n    if (this.isNewMode) {\n      this.dataElementForm.get('ELEMENT_ID').setValidators(this._validateDataElementID);\n      this.dataElementForm.get('ELEMENT_ID').setAsyncValidators(\n        this.uniqueDataElementValidator.validate.bind(this.uniqueDataElementValidator));\n      this.dataElementForm.get('USE_DOMAIN').enable();\n      this.dataElementForm.get('DATA_TYPE').enable();\n      this.dataElementForm.get('DATA_TYPE').markAsDirty(); // Default value mark as dirty\n      this.dataElementForm.get('DATA_LENGTH').markAsDirty(); // Default value mark as dirty\n    } else {\n      this.dataElementForm.get('ELEMENT_ID').clearValidators();\n      this.dataElementForm.get('ELEMENT_ID').clearAsyncValidators() ;\n      this.dataElementForm.get('ELEMENT_ID').updateValueAndValidity();\n    }\n  }\n\n  _validateDataElementID(c: FormControl) {\n    if (c.value.trim() === '') {\n      return {message: 'Data Element ID is mandatory'};\n    }\n\n    if (c.value.toString().toLowerCase() === 'new') {\n      return {message: '\"NEW/new\" is reserved, thus is not allowed to use!'};\n    }\n\n    if (c.value.toString().length > 32) {\n      return {message: 'Data Element ID must have length less than 32!'};\n    }\n    return null;\n  }\n\n  _validateDataLength(c: FormControl) {\n    if (c.enabled && !c.value) {\n      return {message: 'Please give a Length'};\n    }\n    return null;\n  }\n\n  _validateDecimal(c: FormControl) {\n    if (c.enabled && !c.value) {\n      return {message: 'Please give a decimal place'};\n    }\n    return null;\n  }\n\n  switchEditDisplay() {\n    if (this.isNewMode) {\n      this.dialogService.confirm('Discard the new Data Element?').subscribe(confirm => {\n        if (confirm) {\n          this._switch2DisplayMode();\n          this.dataElementMeta = null;\n          this.modelService.sendDialogAnswer('OK');\n        } else {\n          this.modelService.sendDialogAnswer('CANCEL');\n        }\n      });\n      return;\n    }\n\n    if (!this.readonly) { // In Change Mode -> Display Mode\n      if (this.dataElementForm.dirty) {\n        this.dialogService.confirm('Discard changes?').subscribe(confirm => {\n          if (confirm) { // Discard changes and switch to Display Mode\n            this._generateDataElementForm();\n            this.dataElementForm.reset(this.dataElementForm.value);\n            this._switch2DisplayMode();\n          }\n        });\n      } else { // Switch to display mode\n        this._switch2DisplayMode();\n      }\n    } else { // In Display Mode -> Change Mode\n      this._switch2EditMode();\n    }\n\n    this.messageService.clearMessages();\n  }\n\n  _switch2DisplayMode(): void {\n    this.readonly = true;\n    this.dataElementForm.get('USE_DOMAIN').disable();\n    this.dataElementForm.get('DATA_TYPE').disable();\n  }\n\n  _switch2EditMode(): void {\n    this.readonly = false;\n    this.dataElementForm.get('USE_DOMAIN').enable();\n    this._setUseDomain(this.dataElementForm);\n  }\n\n  onChangeDataElementID(): void {\n    this.modelService.updateDataElementID(this.dataElementForm.get('ELEMENT_ID').value);\n  }\n\n  onChangeDataElementDesc(): void {\n    this.modelService.updateDataElementDesc(this.dataElementForm.get('ELEMENT_DESC').value);\n  }\n\n  onChangeUseDomain(formGroup: AbstractControl): void {\n    this._setUseDomain(formGroup, true);\n  }\n\n  onChangeDataDomain(formGroup: AbstractControl): void {\n    const dataDomainCtrl = formGroup.get('DOMAIN_ID');\n    this.entityService.getDataDomain(dataDomainCtrl.value).subscribe(data => {\n      if (data['msgCat']) {\n        dataDomainCtrl.setErrors({message: data['msgShortText']});\n      } else {\n        formGroup.get('DATA_TYPE').setValue(data['DATA_TYPE']);\n        formGroup.get('DATA_LENGTH').setValue(data['DATA_LENGTH']);\n        formGroup.get('DECIMAL').setValue(data['DECIMAL']);\n      }\n    });\n  }\n\n  _setUseDomain(formGroup: AbstractControl, markAsDirty: boolean = false): void {\n    if (formGroup.get('USE_DOMAIN').value) {\n      formGroup.get('DOMAIN_ID').enable();\n      formGroup.get('DOMAIN_ID').setValidators(Validators.required);\n      this._invalidField(formGroup.get('DATA_TYPE'), markAsDirty);\n      this._invalidField(formGroup.get('DATA_LENGTH'), markAsDirty);\n      this._invalidField(formGroup.get('DECIMAL'), markAsDirty);\n    } else {\n      this._invalidField(formGroup.get('DOMAIN_ID'), markAsDirty);\n      formGroup.get('DATA_TYPE').enable();\n      formGroup.get('DATA_TYPE').markAsDirty();\n      formGroup.get('DATA_LENGTH').enable();\n      formGroup.get('DATA_LENGTH').markAsDirty();\n      formGroup.get('DECIMAL').enable();\n      formGroup.get('DECIMAL').markAsDirty();\n      if (!formGroup.get('DATA_TYPE').value) {\n        formGroup.get('DATA_TYPE').setValue(1);\n        if (!formGroup.get('DATA_LENGTH').value) {\n          formGroup.get('DATA_LENGTH').setValue(10);\n        }\n      }\n      this._updateLengthAndDecimal(formGroup);\n    }\n  }\n\n  _invalidField(fieldCtrl: AbstractControl, markAsDirty: boolean = false): void {\n    fieldCtrl.clearValidators();\n    fieldCtrl.clearAsyncValidators();\n    fieldCtrl.disable();\n    if (markAsDirty) {\n      fieldCtrl.setValue(null);\n      fieldCtrl.markAsDirty();\n    }\n  }\n\n  onChangeDataType(formGroup: AbstractControl): void {\n    switch (+formGroup.get('DATA_TYPE').value) {\n      case 1: // char\n        formGroup.get('DATA_LENGTH').setValue(10);\n        formGroup.get('DECIMAL').setValue(null);\n        break;\n      case 4: // decimal\n        formGroup.get('DATA_LENGTH').setValue(23);\n        formGroup.get('DECIMAL').setValue(2);\n        break;\n      default:\n        formGroup.get('DATA_LENGTH').setValue(null);\n        formGroup.get('DECIMAL').setValue(null);\n    }\n    formGroup.get('DATA_LENGTH').markAsDirty();\n    formGroup.get('DECIMAL').markAsDirty();\n    this._updateLengthAndDecimal(formGroup);\n  }\n\n  _updateLengthAndDecimal(formGroup: AbstractControl): void {\n    switch (+formGroup.get('DATA_TYPE').value) {\n      case 1: // char\n        formGroup.get('DATA_LENGTH').enable();\n        formGroup.get('DATA_LENGTH').setValidators(this._validateDataLength);\n        formGroup.get('DECIMAL').disable();\n        break;\n      case 4: // decimal\n        formGroup.get('DATA_LENGTH').enable();\n        formGroup.get('DATA_LENGTH').setValidators(this._validateDataLength);\n        formGroup.get('DECIMAL').enable();\n        formGroup.get('DATA_LENGTH').setValidators(this._validateDecimal);\n        break;\n      default:\n        formGroup.get('DATA_LENGTH').disable();\n        formGroup.get('DECIMAL').disable();\n    }\n  }\n\n  canDeactivate(): Observable<boolean> | boolean {\n    if (this.isNewMode || (!this.bypassProtection && this.dataElementForm && this.dataElementForm.dirty)) {\n      const dialogAnswer = this.dialogService.confirm('Discard changes?');\n      dialogAnswer.subscribe(confirm => {\n        if (confirm) {\n          this.modelService.sendDialogAnswer('OK');\n        } else {\n          this.modelService.sendDialogAnswer('CANCEL');\n        }\n      });\n      return dialogAnswer;\n    } else {\n      return true;\n    }\n  }\n\n  save(): void {\n    if (!this.dataElementForm.dirty) {\n      return this.messageService.reportMessage('MODEL', 'NO_CHANGE', 'S');\n    }\n\n    if (this.dataElementForm.invalid) {\n      return this.messageService.reportMessage('MODEL', 'INVALID_DATA', 'E');\n    }\n\n    if (this.isNewMode) {\n      this.changedDataElement['action'] = 'add';\n      this.changedDataElement['ELEMENT_ID'] = this.dataElementForm.get('ELEMENT_ID').value;\n    } else {\n      this.changedDataElement['action'] = 'update';\n      this.changedDataElement['ELEMENT_ID'] = this.dataElementMeta.ELEMENT_ID;\n    }\n    if (this.dataElementForm.get('ELEMENT_DESC').dirty) {\n      this.changedDataElement['ELEMENT_DESC'] = this.dataElementForm.get('ELEMENT_DESC').value;\n    }\n    if (this.dataElementForm.get('DOMAIN_ID').dirty) {\n      this.changedDataElement['DOMAIN_ID'] = this.dataElementForm.get('DOMAIN_ID').value;\n    }\n    if (this.dataElementForm.get('DATA_TYPE').dirty) {\n      this.changedDataElement['DATA_TYPE'] = this.dataElementForm.get('USE_DOMAIN').value ?\n        null : this.dataElementForm.get('DATA_TYPE').value;\n    }\n    if (this.dataElementForm.get('DATA_LENGTH').dirty) {\n      this.changedDataElement['DATA_LENGTH'] = this.dataElementForm.get('USE_DOMAIN').value ?\n        null : this.dataElementForm.get('DATA_LENGTH').value;\n    }\n    if (this.dataElementForm.get('DECIMAL').dirty) {\n      this.changedDataElement['DECIMAL'] = this.dataElementForm.get('USE_DOMAIN').value ?\n        null : this.dataElementForm.get('DECIMAL').value;\n    }\n    if (this.dataElementForm.get('LABEL_TEXT').dirty) {\n      this.changedDataElement['LABEL_TEXT'] = this.dataElementForm.get('LABEL_TEXT').value;\n    }\n    if (this.dataElementForm.get('LIST_HEADER_TEXT').dirty) {\n      this.changedDataElement['LIST_HEADER_TEXT'] = this.dataElementForm.get('LIST_HEADER_TEXT').value;\n    }\n    if (this.dataElementForm.get('SEARCH_HELP_ID').dirty) {\n      this.changedDataElement['SEARCH_HELP_ID'] = this.dataElementForm.get('SEARCH_HELP_ID').value;\n    }\n    if (this.dataElementForm.get('SEARCH_HELP_EXPORT_FIELD').dirty) {\n      this.changedDataElement['SEARCH_HELP_EXPORT_FIELD'] = this.dataElementForm.get('SEARCH_HELP_EXPORT_FIELD').value;\n    }\n    if (this.dataElementForm.get('PARAMETER_ID').dirty) {\n      this.changedDataElement['PARAMETER_ID'] = this.dataElementForm.get('PARAMETER_ID').value;\n    }\n    this.entityService.saveDataElement(this.changedDataElement)\n      .subscribe(data => this._postActivityAfterSavingDataElement(data));\n  }\n\n  _postActivityAfterSavingDataElement(data: any) {\n    this.changedDataElement = {};\n    if (data['ELEMENT_ID']) {\n      if (this.isNewMode) {\n        this.isNewMode = false;\n        this.bypassProtection = true;\n        this.router.navigate(['/model/data-element/' + data['ELEMENT_ID']],\n          {state: {message: this.messageService.generateMessage(\n            'MODEL', 'DATA_ELEMENT_SAVED', 'S', data['ELEMENT_ID'])}});\n      } else {\n        this._switch2DisplayMode();\n        this.dataElementMeta = data;\n        this._generateDataElementForm();\n        this.messageService.reportMessage(\n          'MODEL', 'DATA_ELEMENT_SAVED', 'S', data['ELEMENT_ID']);\n      }\n    } else {\n      if (data instanceof Array) {\n        data.forEach(err => this.messageService.add(err));\n      } else {\n        this.messageService.report(<Message>data);\n      }\n    }\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZGVsL2RhdGEtZWxlbWVudC9kYXRhLWVsZW1lbnQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {ModelService} from '../model.service';\nimport {MessageService} from 'ui-message-angular';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {msgStore} from '../../msgStore';\nimport {debounceTime, distinctUntilChanged, switchMap} from 'rxjs/operators';\nimport {DataElementH, EntityService, DataElementMeta} from 'jor-angular';\n\n@Component({\n  selector: 'app-data-element',\n  templateUrl: './data-element.component.html',\n  styleUrls: ['./data-element.component.css']\n})\nexport class DataElementComponent implements OnInit {\n  dataElementList: DataElementH[] = [];\n  isSearchListShown = true;\n  private searchTerms = new Subject<string>();\n  private theSelectedDataElement: DataElementH;\n\n  constructor(private entityService: EntityService,\n              private modelService: ModelService,\n              private messageService: MessageService,\n              private route: ActivatedRoute,\n              private router: Router) {\n    this.messageService.setMessageStore(msgStore, 'EN');\n  }\n\n  ngOnInit() {\n    this.searchTerms.pipe(\n      debounceTime(300),\n      distinctUntilChanged(),\n      switchMap((term: string) => this.entityService.listDataElement(term)),\n    ).subscribe(data => {\n      this.dataElementList = data;\n      let elementID;\n      if (this.route.snapshot.firstChild) {\n        elementID = this.route.snapshot.firstChild.paramMap.get('elementID');\n      }\n      if (elementID ) {\n        if (elementID === 'new') {\n          this._newDataElement();\n        } else {\n          this.onSelect(this.dataElementList.find(dataEle => dataEle.ELEMENT_ID === elementID));\n        }\n      }\n    });\n    this.searchDataElement(''); // The initial list\n\n    this.modelService.theSelectedDataElement$.subscribe( data => {\n      if (this.theSelectedDataElement) {\n        this.theSelectedDataElement.ELEMENT_ID = data['ELEMENT_ID'];\n        this.theSelectedDataElement.ELEMENT_DESC = data['ELEMENT_DESC'];\n      }\n    });\n\n    this.modelService.dialogAnswer$.subscribe( answer => {\n      if (answer === 'OK' && this.dataElementList[0] && !this.dataElementList[0].CREATE_TIME) {\n        this.dataElementList.splice(0, 1); // Remove the first one.\n      } else if (answer === 'CANCEL') {\n        const elementID = this.route.snapshot.firstChild.paramMap.get('elementID');\n        if (elementID) {\n          if (elementID === 'new') {\n            this.onSelect(this.dataElementList[0]);\n          } else {\n            this.onSelect(this.dataElementList.find(dataElement => dataElement.ELEMENT_ID === elementID));\n          }\n        }\n      }\n    });\n\n    this.modelService.isSearchListShown$.subscribe( data => this.isSearchListShown = data);\n  }\n\n  hideSearchList(): void {\n    this.isSearchListShown = false;\n    this.modelService.hideSearchList();\n  }\n\n  onSelect(dataElement: DataElementH): void {\n    if (dataElement) {\n      this.theSelectedDataElement = dataElement;\n      this.modelService.setSelectedDataElement(dataElement);\n    }\n  }\n\n  searchDataElement(term: string): void {\n    this.searchTerms.next(term);\n  }\n\n  newDataElement(): void {\n    if (this.route.snapshot.firstChild && this.route.snapshot.firstChild.paramMap.get('elementID') === 'new') {\n      this.messageService.reportMessage('MODEL', 'UNSAVED_NEW', 'E');\n    } else {\n      this._newDataElement();\n      this.router.navigate(['/model/data-element/new']);\n    }\n  }\n\n  _newDataElement(): void {\n    this.theSelectedDataElement = new DataElementMeta();\n    this.theSelectedDataElement.ELEMENT_ID = 'new';\n    this.theSelectedDataElement.ELEMENT_DESC = 'description';\n    this.theSelectedDataElement.VERSION_NO = 1;\n    this.theSelectedDataElement.LAST_CHANGE_BY = 'DH001';\n    this.theSelectedDataElement.LAST_CHANGE_TIME = new Date().toDateString();\n    this.modelService.setSelectedDataElement(this.theSelectedDataElement);\n    this.dataElementList.splice(0, 0, this.theSelectedDataElement);\n  }\n}\n","export default \".dk-table {\\n  display: block;\\n  overflow-x: auto;\\n  white-space: nowrap;\\n  border: none;\\n}\\n.dk-actions{\\n  width: 3rem;\\n  min-width: 3rem;\\n  max-width: 3rem;\\n}\\n.dk-description{\\n  width: 15rem;\\n  min-width: 15rem;\\n  max-width: 15rem;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kZWwvZW50aXR5LXR5cGUvZW50aXR5LXR5cGUtZGV0YWlsL2VudGl0eS10eXBlLWRldGFpbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsY0FBYztFQUNkLGdCQUFnQjtFQUNoQixtQkFBbUI7RUFDbkIsWUFBWTtBQUNkO0FBQ0E7RUFDRSxXQUFXO0VBQ1gsZUFBZTtFQUNmLGVBQWU7QUFDakI7QUFDQTtFQUNFLFlBQVk7RUFDWixnQkFBZ0I7RUFDaEIsZ0JBQWdCO0FBQ2xCIiwiZmlsZSI6InNyYy9hcHAvbW9kZWwvZW50aXR5LXR5cGUvZW50aXR5LXR5cGUtZGV0YWlsL2VudGl0eS10eXBlLWRldGFpbC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmRrLXRhYmxlIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG92ZXJmbG93LXg6IGF1dG87XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIGJvcmRlcjogbm9uZTtcbn1cbi5kay1hY3Rpb25ze1xuICB3aWR0aDogM3JlbTtcbiAgbWluLXdpZHRoOiAzcmVtO1xuICBtYXgtd2lkdGg6IDNyZW07XG59XG4uZGstZGVzY3JpcHRpb257XG4gIHdpZHRoOiAxNXJlbTtcbiAgbWluLXdpZHRoOiAxNXJlbTtcbiAgbWF4LXdpZHRoOiAxNXJlbTtcbn1cbiJdfQ== */\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute, ParamMap, Router} from '@angular/router';\nimport {switchMap} from 'rxjs/operators';\nimport {AbstractControl, FormArray, FormBuilder, FormControl, FormGroup} from '@angular/forms';\nimport {Message, MessageService} from 'ui-message-angular';\nimport {msgStore} from '../../../msgStore';\nimport {forkJoin, Observable, of} from 'rxjs';\nimport {AttributeMetaComponent} from '../../attribute-meta/attribute-meta.component';\nimport {ModelService} from '../../model.service';\nimport {DialogService} from '../../../dialog.service';\nimport {UniqueEntityTypeValidator} from '../../model-validators';\nimport {SearchHelpMethod, SearchHelp, SearchHelpComponent, EntityService, Attribute, EntityMeta} from 'jor-angular';\n\n@Component({\n  selector: 'app-entity-type-detail',\n  templateUrl: './entity-type-detail.component.html',\n  styleUrls: ['./entity-type-detail.component.css']\n})\nexport class EntityTypeDetailComponent implements OnInit {\n  entityMeta: EntityMeta;\n  attributes: Attribute[];\n  readonly = true;\n  isNewMode = false;\n  entityTypeForm: FormGroup;\n  changedEntityType = {};\n  bypassProtection = false;\n  isSearchListShown = true;\n\n  @ViewChild(AttributeMetaComponent, {static: false})\n  private attrComponent !: AttributeMetaComponent;\n  @ViewChild(SearchHelpComponent, {static: false})\n  private searchHelpComponent !: SearchHelpComponent;\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private fb: FormBuilder,\n              private uniqueEntityTypeValidator: UniqueEntityTypeValidator,\n              private messageService: MessageService,\n              private modelService: ModelService,\n              private dialogService: DialogService,\n              private entityService: EntityService) {\n    this.messageService.setMessageStore(msgStore, 'EN');\n  }\n\n  get roleFormArray() {\n    return this.entityTypeForm.get('ROLES') as FormArray;\n  }\n\n  get attrFormArray() {\n    return this.entityTypeForm.get('ATTRIBUTES') as FormArray;\n  }\n\n  ngOnInit() {\n    this.route.paramMap.pipe(\n      switchMap((params: ParamMap) => {\n        const entityID = params.get('entityID');\n        if (entityID === 'new') {\n          const entityType = new EntityMeta();\n          entityType.ENTITY_ID = '';\n          entityType.ENTITY_DESC = '';\n          entityType.ROLES = [];\n          this.isNewMode = true;\n          this.readonly = false;\n          this.bypassProtection = false;\n          return forkJoin(of(entityType), of([]));\n        } else {\n          this.readonly = true;\n          this.isNewMode = false;\n          return forkJoin(\n            this.entityService.getEntityMeta(entityID),\n            this.entityService.getRelationMeta(entityID));\n        }\n      })\n    ).subscribe(data => {\n      if ( 'ENTITY_ID' in data[0]) {\n        this.messageService.clearMessages();\n        if (history.state.message) {\n          this.messageService.report(history.state.message);\n        }\n        this.entityMeta = <EntityMeta>data[0];\n        this.attributes = 'RELATION_ID' in data[1] ? data[1]['ATTRIBUTES'] : [];\n        this._generateEntityTypeForm();\n      } else {\n        this.messageService.clearMessages();\n        this.entityMeta = null;\n        this.entityTypeForm = null;\n        if (data[0] instanceof Array) {\n          data[0].forEach(err => this.messageService.add(err) );\n        } else {\n          this.messageService.report(<Message>data[0]);\n        }\n      }\n    });\n\n    this.modelService.isSearchListShown$.subscribe( data => this.isSearchListShown = data);\n  }\n\n  showSearchList(): void {\n    this.isSearchListShown = true;\n    this.modelService.showSearchList();\n  }\n\n  onSearchHelp(control: AbstractControl, rowID: number): void {\n    const searchHelpMeta = new SearchHelp();\n    searchHelpMeta.OBJECT_NAME = 'Role';\n    searchHelpMeta.METHOD = function(entityService: EntityService): SearchHelpMethod {\n      return (searchTerm: string): Observable<object[]> => entityService.listRole(searchTerm);\n    }(this.entityService);\n    searchHelpMeta.BEHAVIOUR = 'A';\n    searchHelpMeta.MULTI = false;\n    searchHelpMeta.FUZZY_SEARCH = true;\n    searchHelpMeta.FIELDS = [\n      {FIELD_NAME: 'ROLE_ID', FIELD_DESC: 'Role', IMPORT: true, EXPORT: true, LIST_POSITION: 1, FILTER_POSITION: 0},\n      {FIELD_NAME: 'ROLE_DESC', FIELD_DESC: 'Description', IMPORT: true, EXPORT: true, LIST_POSITION: 2, FILTER_POSITION: 0}\n    ];\n    searchHelpMeta.READ_ONLY = this.readonly || this.oldRole(control) && control.valid;\n\n    const afterExportFn = function (context: any, ruleIdx: number) {\n      return () => context.onChangeRoleID(ruleIdx, true);\n    }(this, rowID).bind(this);\n    this.searchHelpComponent.openSearchHelpModal(searchHelpMeta, control, afterExportFn);\n  }\n\n  _generateEntityTypeForm(): void {\n    this.entityTypeForm = this.fb.group({});\n    this.entityTypeForm.addControl('ENTITY_ID',\n      new FormControl(this.entityMeta.ENTITY_ID, {updateOn: 'blur'}));\n    if (this.isNewMode) {\n      this.entityTypeForm.get('ENTITY_ID').setValidators(this._validateEntityId);\n      this.entityTypeForm.get('ENTITY_ID').setAsyncValidators(\n        this.uniqueEntityTypeValidator.validate.bind(this.uniqueEntityTypeValidator));\n    }\n    this.entityTypeForm.addControl('ENTITY_DESC', new FormControl(this.entityMeta.ENTITY_DESC));\n\n    // Compose roles\n    const formArray = [];\n    this.entityMeta.ROLES.forEach( role => {\n      formArray.push(this.fb.group({\n        ROLE_ID: [role.ROLE_ID],\n        ROLE_DESC: [role.ROLE_DESC],\n        CONDITIONAL_ATTR: [{value: role.CONDITIONAL_ATTR, disabled: this.readonly}],\n        CONDITIONAL_VALUE: [role.CONDITIONAL_VALUE]\n      }));\n    });\n    if (this.isNewMode) {\n      formArray.push(\n        this.fb.group({\n          ROLE_ID: [''],\n          ROLE_DESC: [''],\n          CONDITIONAL_ATTR: [''],\n          CONDITIONAL_VALUE: ['']\n        }));\n    }\n    this.entityTypeForm.addControl('ROLES', new FormArray(formArray));\n  }\n\n  _validateEntityId(c: FormControl) {\n    if (c.value.trim() === '') {\n      return {message: 'Entity ID is mandatory'};\n    }\n\n    if (c.value.toString().toLowerCase() === 'new') {\n      return {message: '\"NEW/new\" is reserved, thus is not allowed to use!'};\n    }\n\n    if (c.value.toString().toLowerCase().substr(0, 2) === 'r_' ||\n        c.value.toString().toLowerCase().substr(0, 3) === 'rs_') {\n      return {message: 'Entity ID cannot be started with \"r_\" or \"rs_\"!'};\n    }\n    return null;\n  }\n\n  switchEditDisplay() {\n    if (this.isNewMode) {\n      this.dialogService.confirm('Discard the new Entity Type?').subscribe(confirm => {\n        if (confirm) {\n          this._switch2DisplayMode();\n          this.entityMeta = null;\n          this.modelService.sendDialogAnswer('OK');\n        } else {\n          this.modelService.sendDialogAnswer('CANCEL');\n        }\n      });\n      return;\n    }\n\n    if (!this.readonly) { // In Change Mode -> Display Mode\n      if (this.entityTypeForm.dirty) {\n        this.dialogService.confirm('Discard changes?').subscribe(confirm => {\n          if (confirm) { // Discard changes and switch to Display Mode\n            this._generateEntityTypeForm();\n            this.entityTypeForm.reset(this.entityTypeForm.value);\n            this._switch2DisplayMode();\n          }\n        });\n      } else { // Switch to display mode\n        this._switch2DisplayMode();\n      }\n    } else { // In Display Mode -> Change Mode\n      this.readonly = false;\n      this.attrComponent.switchEditDisplay(this.readonly);\n      this.roleFormArray.controls.forEach(roleFormGroup => roleFormGroup.get('CONDITIONAL_ATTR').enable());\n      this.roleFormArray.push(\n        this.fb.group({\n          ROLE_ID: [''],\n          ROLE_DESC: [''],\n          CONDITIONAL_ATTR: [''],\n          CONDITIONAL_VALUE: ['']\n        })\n      );\n    }\n    this.messageService.clearMessages();\n  }\n\n  _switch2DisplayMode(): void {\n    this.readonly = true;\n    this.attrComponent.switchEditDisplay(this.readonly);\n    this.roleFormArray.controls.forEach(roleFormGroup => {\n      roleFormGroup.get('CONDITIONAL_ATTR').disable();\n    });\n    let lastIndex = this.roleFormArray.length - 1;\n    while (lastIndex >= 0 && this.roleFormArray.controls[lastIndex].get('ROLE_ID').value.trim() === '') {\n      this.roleFormArray.removeAt(lastIndex);\n      lastIndex--;\n    }\n  }\n\n  onChangeEntityID(): void {\n    this.modelService.updateEntityID(this.entityTypeForm.get('ENTITY_ID').value);\n  }\n\n  onChangeEntityDesc(): void {\n    this.modelService.updateEntityDesc(this.entityTypeForm.get('ENTITY_DESC').value);\n  }\n\n  deleteRole(index: number): void {\n    if (index !== this.roleFormArray.length - 1) {\n      this.roleFormArray.removeAt(index);\n      this.roleFormArray.markAsDirty();\n    }\n  }\n\n  onChangeRoleID(index: number, isExportedFromSH?: boolean): void {\n    const currentRoleFormGroup = this.roleFormArray.controls[index];\n    if (this.roleFormArray.controls.findIndex((roleCtrl, i) =>\n      i !== index && roleCtrl.get('ROLE_ID').value === currentRoleFormGroup.get('ROLE_ID').value\n    ) !== -1) {\n      currentRoleFormGroup.get('ROLE_ID').setErrors({message: 'Duplicate roles'});\n      return;\n    }\n\n    if (index === this.roleFormArray.length - 1 && currentRoleFormGroup.value.ROLE_ID.trim() !== '') {\n      // Only work for the last New line\n      this.roleFormArray.push(\n        this.fb.group({\n          ROLE_ID: [''],\n          ROLE_DESC: [''],\n          CONDITIONAL_ATTR: [''],\n          CONDITIONAL_VALUE: ['']\n        })\n      );\n    }\n\n    if (!isExportedFromSH) {\n      this.entityService.getRoleDesc(currentRoleFormGroup.value.ROLE_ID).subscribe(data => {\n        if (data['msgCat']) {\n          currentRoleFormGroup.get('ROLE_ID').setErrors({message: data['msgShortText']});\n        } else {\n          currentRoleFormGroup.get('ROLE_DESC').setValue(data);\n        }\n      });\n    }\n  }\n\n  oldRole(formGroup: AbstractControl): boolean {\n    return this.entityMeta.ROLES ?\n      this.entityMeta.ROLES.findIndex(\n        role => role.ROLE_ID === formGroup.get('ROLE_ID').value ) !== -1 :\n      false;\n  }\n\n  canDeactivate(): Observable<boolean> | boolean {\n    if (this.isNewMode || (!this.bypassProtection && this.entityTypeForm && this.entityTypeForm.dirty)) {\n      const dialogAnswer = this.dialogService.confirm('Discard changes?');\n      dialogAnswer.subscribe(confirm => {\n        if (confirm) {\n          this.modelService.sendDialogAnswer('OK');\n        } else {\n          this.modelService.sendDialogAnswer('CANCEL');\n        }\n      });\n      return dialogAnswer;\n    } else {\n      return true;\n    }\n  }\n\n  save(): void {\n    if (!this.entityTypeForm.dirty) {\n      return this.messageService.reportMessage('MODEL', 'NO_CHANGE', 'S');\n    }\n\n    if (!this.entityTypeForm.valid) {\n      return this.messageService.reportMessage('MODEL', 'INVALID_DATA', 'E');\n    }\n\n    if (this.isNewMode) {\n      this.changedEntityType['action'] = 'add';\n      this.changedEntityType['ENTITY_ID'] = this.entityTypeForm.controls['ENTITY_ID'].value;\n    } else {\n      this.changedEntityType['action'] = 'update';\n      this.changedEntityType['ENTITY_ID'] = this.entityMeta.ENTITY_ID;\n    }\n    if (this.entityTypeForm.controls['ENTITY_DESC'].dirty) {\n      this.changedEntityType['ENTITY_DESC'] = this.entityTypeForm.controls['ENTITY_DESC'].value;\n    }\n\n    this.changedEntityType['ATTRIBUTES'] = this.attrComponent.processChangedAttributes();\n    this._processChangedRoles();\n\n    this.entityService.saveEntityType(this.changedEntityType)\n      .subscribe(data => this._postActivityAfterSavingEntityType(data));\n  }\n\n  _processChangedRoles(): void {\n    const changedRoles = [];\n    if (this.roleFormArray.dirty) {\n      this.changedEntityType['ROLES'] = changedRoles;\n      let action;\n      // Add/Update Case\n      this.roleFormArray.controls.forEach(role => {\n        if (role.get('ROLE_ID').value.trim() === '') { return; }\n        const index = this.entityMeta.ROLES.findIndex(\n          existRole => role.value.ROLE_ID === existRole.ROLE_ID);\n        action = index === -1 ? 'add' : 'update';\n        if (role.dirty) {\n          const changedRole = { action: action, ROLE_ID: role.value.ROLE_ID };\n          if (role.get('CONDITIONAL_ATTR').dirty) {\n            changedRole['CONDITIONAL_ATTR'] = role.value.CONDITIONAL_ATTR;\n          }\n          if (role.get('CONDITIONAL_VALUE').dirty) {\n            changedRole['CONDITIONAL_VALUE'] = role.value.CONDITIONAL_VALUE;\n          }\n          changedRoles.push(changedRole);\n        }\n      });\n\n      // Deletion Case\n      this.entityMeta.ROLES.forEach(role => {\n        const index = this.roleFormArray.controls.findIndex(\n          roleControl => roleControl.get('ROLE_ID').value === role.ROLE_ID);\n        if (index === -1) {\n          const deletedRole = {action: 'delete', ROLE_ID: role.ROLE_ID};\n          changedRoles.push(deletedRole);\n        }\n      });\n    }\n  }\n\n  _postActivityAfterSavingEntityType(data: any) {\n    this.changedEntityType = {};\n    if (data[0] && data[0]['ENTITY_ID']) {\n      if (this.isNewMode) {\n        this.isNewMode = false;\n        this.bypassProtection = true;\n        this.router.navigate(['/model/entity-type/' + data[0]['ENTITY_ID']],\n          {state: {message: this.messageService.generateMessage(\n                'MODEL', 'ENTITY_TYPE_SAVED', 'S', data[0]['ENTITY_ID'])}});\n      } else {\n        this.readonly = true;\n        this.entityMeta = data[0];\n        this.attributes = data[1].ATTRIBUTES;\n        this._generateEntityTypeForm();\n        this.messageService.reportMessage('MODEL', 'ENTITY_TYPE_SAVED', 'S',\n          this.entityMeta.ENTITY_ID);\n      }\n    } else {\n      if (data instanceof Array) {\n        data.forEach(err => this.messageService.add(err));\n      } else {\n        this.messageService.report(<Message>data);\n      }\n    }\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZGVsL2VudGl0eS10eXBlL2VudGl0eS10eXBlLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport {EntityService} from 'jor-angular';\nimport {EntityType} from 'jor-angular';\nimport { debounceTime, distinctUntilChanged, switchMap} from 'rxjs/operators';\nimport {Subject} from 'rxjs';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {ModelService} from '../model.service';\nimport {MessageService} from 'ui-message-angular';\nimport {msgStore} from '../../msgStore';\n\n@Component({\n  selector: 'app-entity-type',\n  templateUrl: './entity-type.component.html',\n  styleUrls: ['./entity-type.component.css']\n})\nexport class EntityTypeComponent implements OnInit {\n  entityTypeList: EntityType[];\n  isSearchListShown = true;\n\n  private searchTerms = new Subject<string>();\n  private theSelectedEntityType: EntityType;\n\n  constructor(private entityService: EntityService,\n              private modelService: ModelService,\n              private messageService: MessageService,\n              private route: ActivatedRoute,\n              private router: Router) {\n    this.messageService.setMessageStore(msgStore, 'EN');\n  }\n\n  ngOnInit() {\n    this.searchTerms.pipe(\n      debounceTime(300),\n      distinctUntilChanged(),\n      switchMap((term: string) => this.entityService.listEntityType(term)),\n    ).subscribe(data => {\n      this.entityTypeList = data;\n      let entityID;\n      if (this.route.snapshot.firstChild) {\n        entityID = this.route.snapshot.firstChild.paramMap.get('entityID');\n      }\n      if (entityID ) {\n        if (entityID === 'new') {\n          this._newEntityType();\n        } else {\n          this.onSelect(this.entityTypeList.find(entityType => entityType.ENTITY_ID === entityID));\n        }\n      }\n    });\n    this.searchEntityType(''); // The initial list\n\n    this.modelService.theSelectedEntityType$.subscribe( data => {\n      if (this.theSelectedEntityType) {\n        this.theSelectedEntityType.ENTITY_ID = data.ENTITY_ID;\n        this.theSelectedEntityType.ENTITY_DESC = data.ENTITY_DESC;\n      }\n    });\n\n    this.modelService.isSearchListShown$.subscribe( data => this.isSearchListShown = data);\n\n    this.modelService.dialogAnswer$.subscribe( answer => {\n      if (answer === 'OK' && this.entityTypeList[0] && !this.entityTypeList[0].CREATE_TIME) {\n        this.entityTypeList.splice(0, 1); // Remove the first one.\n      } else if (answer === 'CANCEL') {\n        const entityID = this.route.snapshot.firstChild.paramMap.get('entityID');\n        if (entityID) {\n          if (entityID === 'new') {\n            this.onSelect(this.entityTypeList[0]);\n          } else {\n            this.onSelect(this.entityTypeList.find(entityType => entityType.ENTITY_ID === entityID));\n          }\n        }\n      }\n    });\n  }\n\n  onSelect(entityType: EntityType): void {\n    if (entityType) {\n      this.theSelectedEntityType = entityType;\n      this.modelService.setSelectedEntityType(entityType);\n    }\n  }\n\n  searchEntityType(term: string): void {\n    this.searchTerms.next(term);\n  }\n\n  hideSearchList(): void {\n    this.isSearchListShown = false;\n    this.modelService.hideSearchList();\n  }\n\n  newEntityType(): void {\n    if (this.route.snapshot.firstChild && this.route.snapshot.firstChild.paramMap.get('entityID') === 'new') {\n      this.messageService.reportMessage('MODEL', 'UNSAVED_NEW', 'E');\n    } else {\n      this._newEntityType();\n      this.router.navigate(['/model/entity-type/new']);\n    }\n  }\n\n  _newEntityType(): void {\n    this.theSelectedEntityType = new EntityType();\n    this.theSelectedEntityType.ENTITY_ID = 'new';\n    this.theSelectedEntityType.ENTITY_DESC = 'description';\n    this.theSelectedEntityType.VERSION_NO = 1;\n    this.theSelectedEntityType.LAST_CHANGE_BY = 'DH001';\n    this.theSelectedEntityType.LAST_CHANGE_TIME = new Date().toDateString();\n    this.modelService.setSelectedEntityType(this.theSelectedEntityType);\n    this.entityTypeList.splice(0, 0, this.theSelectedEntityType);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {ModelComponent} from './model.component';\nimport {EntityTypeComponent} from './entity-type/entity-type.component';\nimport {EntityTypeDetailComponent} from './entity-type/entity-type-detail/entity-type-detail.component';\nimport {RelationComponent} from './relation/relation.component';\nimport {RelationDetailComponent} from './relation/relation-detail/relation-detail.component';\nimport {WorkProtectionGuard} from '../work-protection.guard';\nimport {RelationshipComponent} from './relationship/relationship.component';\nimport {RelationshipDetailComponent} from './relationship/relationship-detail/relationship-detail.component';\nimport {RoleComponent} from './role/role.component';\nimport {RoleDetailComponent} from './role/role-detail/role-detail.component';\nimport {DataElementComponent} from './data-element/data-element.component';\nimport {DataDomainComponent} from './data-domain/data-domain.component';\nimport {DataDomainDetailComponent} from './data-domain/data-domain-detail/data-domain-detail.component';\nimport {DataElementDetailComponent} from './data-element/data-element-detail/data-element-detail.component';\n\nconst routes: Routes = [\n  { path: '',\n    component: ModelComponent,\n    children: [\n      { path: 'entity-type', component: EntityTypeComponent,\n        children: [{ path: ':entityID', canDeactivate: [WorkProtectionGuard], component: EntityTypeDetailComponent }] },\n      { path: 'role', component: RoleComponent,\n        children: [{ path: ':roleID', canDeactivate: [WorkProtectionGuard], component: RoleDetailComponent }] },\n      { path: 'relation', component: RelationComponent,\n        children: [{ path: ':relationID', canDeactivate: [WorkProtectionGuard], component: RelationDetailComponent }] },\n      { path: 'relationship', component: RelationshipComponent,\n        children: [{ path: ':relationshipID', canDeactivate: [WorkProtectionGuard], component: RelationshipDetailComponent }] },\n      { path: 'data-element', component: DataElementComponent,\n        children: [{ path: ':elementID', canDeactivate: [WorkProtectionGuard], component: DataElementDetailComponent }] },\n      { path: 'data-domain', component: DataDomainComponent,\n        children: [{ path: ':domainID', canDeactivate: [WorkProtectionGuard], component: DataDomainDetailComponent }] },\n      { path: '**', redirectTo: '/model/entity-type', pathMatch: 'full' },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [ RouterModule ]\n})\nexport class ModelRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport {AbstractControl, AsyncValidator, ValidationErrors} from '@angular/forms';\nimport {EntityService} from 'jor-angular';\nimport {Observable, of} from 'rxjs';\nimport {catchError, map} from 'rxjs/operators';\nimport {ModelService} from './model.service';\n\n// noinspection JSAnnotator\n@Injectable({\n  providedIn: 'root'\n})\nexport class UniqueDataDomainValidator implements AsyncValidator {\n  constructor(private entityService: EntityService,\n              private modelService: ModelService) {}\n\n  validate(\n    ctrl: AbstractControl\n  ): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> {\n    return this.entityService.getDataDomainDesc(ctrl.value).pipe(\n      map(data => {\n        if (data['msgName'] && data['msgName'] === 'DATA_DOMAIN_NOT_EXIST') {\n          this.modelService.updateDataDomainID(ctrl.value);\n          return null;\n        } else {\n          return { message: '\"' + ctrl.value + '\" already exists' };\n        }\n      }),\n      catchError(() => null)\n    );\n  }\n}\n\n// noinspection JSAnnotator\n@Injectable({\n  providedIn: 'root'\n})\nexport class UniqueDataElementValidator implements AsyncValidator {\n  constructor(private entityService: EntityService,\n              private modelService: ModelService) {}\n\n  validate(\n    ctrl: AbstractControl\n  ): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> {\n    return this.entityService.getDataElementDesc(ctrl.value).pipe(\n      map(data => {\n        if (data['msgName'] && data['msgName'] === 'DATA_ELEMENT_NOT_EXIST') {\n          this.modelService.updateDataElementID(ctrl.value);\n          return null;\n        } else {\n          return { message: '\"' + ctrl.value + '\" already exists' };\n        }\n      }),\n      catchError(() => null)\n    );\n  }\n}\n\n// noinspection JSAnnotator\n@Injectable({\n  providedIn: 'root'\n})\nexport class UniqueRoleValidator implements AsyncValidator {\n  constructor(private entityService: EntityService,\n              private modelService: ModelService) {}\n\n  validate(\n    ctrl: AbstractControl\n  ): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> {\n    return this.entityService.getRoleDesc(ctrl.value).pipe(\n      map(data => {\n        if (data['msgName'] && data['msgName'] === 'ROLE_NOT_EXIST') {\n          this.modelService.updateRoleID(ctrl.value);\n          return null;\n        } else {\n          return { message: '\"' + ctrl.value + '\" already exists' };\n        }\n      }),\n      catchError(() => null)\n    );\n  }\n}\n\n// noinspection JSAnnotator\n@Injectable({\n  providedIn: 'root'\n})\nexport class UniqueRelationValidator implements AsyncValidator {\n  constructor(private entityService: EntityService,\n              private modelService: ModelService) {}\n\n  validate(\n    ctrl: AbstractControl\n  ): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> {\n    if (ctrl.value === 'r_') { return of(null); }\n    return this.entityService.getRelationDesc(ctrl.value).pipe(\n      map(data => {\n        if (data['msgName'] && data['msgName'] === 'RELATION_NOT_EXIST') {\n          this.modelService.updateRelationID(ctrl.value);\n          return null;\n        } else {\n          return { message: '\"' + ctrl.value + '\" already exists' };\n        }\n      }),\n      catchError(() => null)\n    );\n  }\n}\n\n// noinspection JSAnnotator\n@Injectable({\n  providedIn: 'root'\n})\nexport class UniqueRelationshipValidator implements AsyncValidator {\n  constructor(private entityService: EntityService,\n              private modelService: ModelService) {}\n\n  validate(\n    ctrl: AbstractControl\n  ): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> {\n    if (ctrl.value === 'rs_') { return of(null); }\n    return this.entityService.getRelationshipDesc(ctrl.value).pipe(\n      map(data => {\n        if (data['msgName'] && data['msgName'] === 'RELATIONSHIP_NOT_EXIST') {\n          this.modelService.updateRelationshipID(ctrl.value);\n          return null;\n        } else {\n          return { message: '\"' + ctrl.value + '\" already exists' };\n        }\n      }),\n      catchError(() => null)\n    );\n  }\n}\n\n// noinspection JSAnnotator\n@Injectable({\n  providedIn: 'root'\n})\nexport class UniqueEntityTypeValidator implements AsyncValidator {\n  constructor(private entityService: EntityService,\n              private modelService: ModelService) {}\n\n  validate(\n    ctrl: AbstractControl\n  ): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> {\n    return this.entityService.getEntityTypeDesc(ctrl.value).pipe(\n      map(data => {\n        if (data['msgName'] && data['msgName'] === 'ENTITY_TYPE_NOT_EXIST') {\n          this.modelService.updateEntityID(ctrl.value);\n          return null;\n        } else {\n          return { message: '\"' + ctrl.value + '\" already exists' };\n        }\n      }),\n      catchError(() => null)\n    );\n  }\n}\n","export default \".dk-model-content {\\n  margin-top: .5rem;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kZWwvbW9kZWwuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGlCQUFpQjtBQUNuQiIsImZpbGUiOiJzcmMvYXBwL21vZGVsL21vZGVsLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZGstbW9kZWwtY29udGVudCB7XG4gIG1hcmdpbi10b3A6IC41cmVtO1xufVxuIl19 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-model',\n  templateUrl: './model.component.html',\n  styleUrls: ['./model.component.css']\n})\nexport class ModelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ModelComponent } from './model.component';\nimport { ModelRoutingModule } from './model-routing.module';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport { EntityTypeComponent } from './entity-type/entity-type.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport { EntityTypeDetailComponent } from './entity-type/entity-type-detail/entity-type-detail.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { AttributeMetaComponent } from './attribute-meta/attribute-meta.component';\nimport {MessageModule} from 'ui-message-angular';\nimport { RelationComponent } from './relation/relation.component';\nimport {RelationDetailComponent} from './relation/relation-detail/relation-detail.component';\nimport { RelationshipComponent } from './relationship/relationship.component';\nimport { RelationshipDetailComponent } from './relationship/relationship-detail/relationship-detail.component';\nimport { RoleComponent } from './role/role.component';\nimport { RoleDetailComponent } from './role/role-detail/role-detail.component';\nimport { DataElementComponent } from './data-element/data-element.component';\nimport { DataDomainComponent } from './data-domain/data-domain.component';\nimport { DataDomainDetailComponent } from './data-domain/data-domain-detail/data-domain-detail.component';\nimport { DataElementDetailComponent } from './data-element/data-element-detail/data-element-detail.component';\nimport {JorAngularModule} from 'jor-angular';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ModelRoutingModule,\n    MessageModule,\n    NgbModule,\n    JorAngularModule\n  ],\n  declarations: [\n    ModelComponent,\n    EntityTypeComponent,\n    EntityTypeDetailComponent,\n    AttributeMetaComponent,\n    RelationComponent,\n    RelationDetailComponent,\n    RelationshipComponent,\n    RelationshipDetailComponent,\n    RoleComponent,\n    RoleDetailComponent,\n    DataElementComponent,\n    DataElementDetailComponent,\n    DataDomainComponent,\n    DataDomainDetailComponent\n  ]\n})\nexport class ModelModule { }\n","import { Injectable } from '@angular/core';\nimport {EntityType, Relation, RelationshipH, RoleH, DataDomainH, DataElementH} from 'jor-angular';\nimport {Subject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModelService {\n  dataTypes = [\n    {key: 1, value: 'Char'},\n    {key: 2, value: 'Integer'},\n    {key: 3, value: 'Boolean'},\n    {key: 4, value: 'Decimal'},\n    {key: 5, value: 'String'},\n    {key: 6, value: 'Binary'},\n    {key: 7, value: 'Date'},\n    {key: 8, value: 'Timestamp'}\n  ];\n\n  private dialogAnswer = new Subject<string>();\n  dialogAnswer$ = this.dialogAnswer.asObservable();\n\n  private isSearchListShown = new Subject<boolean>();\n  isSearchListShown$ = this.isSearchListShown.asObservable();\n\n  private theSelectedEntityType: EntityType;\n  private selectedEntityTypeSource = new Subject<EntityType>();\n  theSelectedEntityType$ = this.selectedEntityTypeSource.asObservable();\n\n  private theSelectedRelation: Relation;\n  private selectedRelationSource = new Subject<Relation>();\n  theSelectedRelation$ = this.selectedRelationSource.asObservable();\n\n  private theSelectedRelationship: RelationshipH;\n  private selectedRelationshipSource = new Subject<RelationshipH>();\n  theSelectedRelationship$ = this.selectedRelationshipSource.asObservable();\n\n  private theSelectedRole: RoleH;\n  private selectedRoleSource = new Subject<RoleH>();\n  theSelectedRole$ = this.selectedRoleSource.asObservable();\n\n  private theSelectedDataElement: DataElementH;\n  private selectedDataElementSource = new Subject<DataElementH>();\n  theSelectedDataElement$ = this.selectedDataElementSource.asObservable();\n\n  private theSelectedDataDomain: DataDomainH;\n  private selectedDataDomainSource = new Subject<DataDomainH>();\n  theSelectedDataDomain$ = this.selectedDataDomainSource.asObservable();\n\n  showSearchList(): void {\n    this.isSearchListShown.next(true);\n  }\n\n  hideSearchList(): void {\n    this.isSearchListShown.next(false);\n  }\n  updateEntityID(entityID: string) {\n    this.theSelectedEntityType.ENTITY_ID = entityID;\n    this.selectedEntityTypeSource.next(this.theSelectedEntityType);\n  }\n\n  updateEntityDesc(entityDesc: string) {\n    this.theSelectedEntityType.ENTITY_DESC = entityDesc;\n    this.selectedEntityTypeSource.next(this.theSelectedEntityType);\n  }\n\n  setSelectedEntityType(entityType: EntityType): void {\n    this.theSelectedEntityType = entityType;\n  }\n\n  updateRelationID(relationID: string) {\n    this.theSelectedRelation.RELATION_ID = relationID;\n    this.selectedRelationSource.next(this.theSelectedRelation);\n  }\n\n  updateRelationDesc(relationDesc: string) {\n    this.theSelectedRelation.RELATION_DESC = relationDesc;\n    this.selectedRelationSource.next(this.theSelectedRelation);\n  }\n\n  setSelectedRelation(relation: Relation): void {\n    this.theSelectedRelation = relation;\n  }\n\n  updateRelationshipID(relationshipID: string) {\n    this.theSelectedRelationship.RELATIONSHIP_ID = relationshipID;\n    this.selectedRelationshipSource.next(this.theSelectedRelationship);\n  }\n\n  updateRelationshipDesc(relationshipDesc: string) {\n    this.theSelectedRelationship.RELATIONSHIP_DESC = relationshipDesc;\n    this.selectedRelationshipSource.next(this.theSelectedRelationship);\n  }\n\n  setSelectedRelationship(relationship: RelationshipH): void {\n    this.theSelectedRelationship = relationship;\n  }\n\n  updateRoleID(roleID: string) {\n    this.theSelectedRole.ROLE_ID = roleID;\n    this.selectedRoleSource.next(this.theSelectedRole);\n  }\n\n  updateRoleDesc(roleDesc: string) {\n    this.theSelectedRole.ROLE_DESC = roleDesc;\n    this.selectedRoleSource.next(this.theSelectedRole);\n  }\n\n  setSelectedRole(role: RoleH): void {\n    this.theSelectedRole = role;\n  }\n\n  updateDataElementID(elementID: string) {\n    this.theSelectedDataElement.ELEMENT_ID = elementID;\n    this.selectedDataElementSource.next(this.theSelectedDataElement);\n  }\n\n  updateDataElementDesc(elementDesc: string) {\n    this.theSelectedDataElement.ELEMENT_DESC = elementDesc;\n    this.selectedDataElementSource.next(this.theSelectedDataElement);\n  }\n\n  setSelectedDataElement(element: DataElementH): void {\n    this.theSelectedDataElement = element;\n  }\n\n  updateDataDomainID(domainID: string) {\n    this.theSelectedDataDomain.DOMAIN_ID = domainID;\n    this.selectedDataDomainSource.next(this.theSelectedDataDomain);\n  }\n\n  updateDataDomainDesc(domainDesc: string) {\n    this.theSelectedDataDomain.DOMAIN_DESC = domainDesc;\n    this.selectedDataDomainSource.next(this.theSelectedDataDomain);\n  }\n\n  setSelectedDataDomain(domain: DataDomainH): void {\n    this.theSelectedDataDomain = domain;\n  }\n\n  sendDialogAnswer(answer: string): void {\n    this.dialogAnswer.next(answer);\n  }\n}\n","export default \".dk-actions{\\n  width: 5rem;\\n  min-width: 5rem;\\n  max-width: 5rem;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kZWwvcmVsYXRpb24vcmVsYXRpb24tZGV0YWlsL3JlbGF0aW9uLWRldGFpbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVztFQUNYLGVBQWU7RUFDZixlQUFlO0FBQ2pCIiwiZmlsZSI6InNyYy9hcHAvbW9kZWwvcmVsYXRpb24vcmVsYXRpb24tZGV0YWlsL3JlbGF0aW9uLWRldGFpbC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmRrLWFjdGlvbnN7XG4gIHdpZHRoOiA1cmVtO1xuICBtaW4td2lkdGg6IDVyZW07XG4gIG1heC13aWR0aDogNXJlbTtcbn1cbiJdfQ== */\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {Association, RelationMeta} from 'jor-angular';\nimport {AbstractControl, FormArray, FormBuilder, FormControl, FormGroup} from '@angular/forms';\nimport {ActivatedRoute, ParamMap, Router} from '@angular/router';\nimport {Message, MessageService} from 'ui-message-angular';\nimport {EntityService} from 'jor-angular';\nimport {msgStore} from '../../../msgStore';\nimport {switchMap} from 'rxjs/operators';\nimport {Observable, of} from 'rxjs';\nimport {AttributeMetaComponent} from '../../attribute-meta/attribute-meta.component';\nimport {ModelService} from '../../model.service';\nimport {DialogService} from '../../../dialog.service';\nimport {UniqueRelationValidator} from '../../model-validators';\nimport {SearchHelpComponent} from 'jor-angular';\nimport {SearchHelp, SearchHelpMethod} from 'jor-angular';\n\n@Component({\n  selector: 'app-relation-detail',\n  templateUrl: './relation-detail.component.html',\n  styleUrls: ['./relation-detail.component.css']\n})\nexport class RelationDetailComponent implements OnInit {\n  relationMeta: RelationMeta;\n  readonly = true;\n  isNewMode = false;\n  isFieldMapShown = false;\n  relationForm: FormGroup;\n  currentAssociationForm: AbstractControl;\n  currentAssociation: Association;\n  currentRightRelationMeta: RelationMeta;\n  changedRelation = {};\n  bypassProtection = false;\n  isSearchListShown = true;\n\n  @ViewChild(AttributeMetaComponent, {static: false})\n  private attrComponent!: AttributeMetaComponent;\n  @ViewChild(SearchHelpComponent, {static: false})\n  private searchHelpComponent!: SearchHelpComponent;\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private fb: FormBuilder,\n              private uniqueRelationValidator: UniqueRelationValidator,\n              private messageService: MessageService,\n              private modelService: ModelService,\n              private dialogService: DialogService,\n              private entityService: EntityService) {\n    this.messageService.setMessageStore(msgStore, 'EN');\n  }\n\n  get associationFormArray() {\n    return this.relationForm.get('ASSOCIATIONS') as FormArray;\n  }\n  get fieldMapFormArray() {\n    if (this.currentAssociationForm) {\n      return this.currentAssociationForm.get('FIELDS_MAPPING') as FormArray;\n    } else {\n      return null;\n    }\n  }\n  get displayFieldMapModal() {\n    return this.isFieldMapShown ? 'block' : 'none';\n  }\n\n  ngOnInit() {\n    this.route.paramMap.pipe(\n      switchMap((params: ParamMap) => {\n        const relationID = params.get('relationID');\n        if (relationID === 'new') {\n          const relation = new RelationMeta();\n          relation.RELATION_ID = 'r_';\n          relation.RELATION_DESC = '';\n          relation.ATTRIBUTES = [];\n          this.isNewMode = true;\n          this.readonly = false;\n          this.bypassProtection = false;\n          return of(relation);\n        } else {\n          this.readonly = true;\n          this.isNewMode = false;\n          return this.entityService.getRelationMeta(params.get('relationID'));\n        }\n      })\n    ).subscribe(data => {\n      if ( 'RELATION_ID' in data) { // If the return data is a message\n        this.messageService.clearMessages();\n        if (history.state.message) {\n          this.messageService.report(history.state.message);\n        }\n        this.relationMeta = <RelationMeta>data;\n        this._generateRelationForm();\n      } else {\n        this.messageService.clearMessages();\n        this.relationMeta = null;\n        this.relationForm = null;\n        if (data instanceof Array) {\n          data.forEach(err => this.messageService.add(err));\n        } else {\n          this.messageService.report(<Message>data);\n        }\n      }\n    });\n\n    this.modelService.isSearchListShown$.subscribe( data => this.isSearchListShown = data);\n  }\n\n  showSearchList(): void {\n    this.isSearchListShown = true;\n    this.modelService.showSearchList();\n  }\n\n  onSearchHelp(fieldName: string, control: AbstractControl, rowID: number): void {\n    const searchHelpMeta = new SearchHelp();\n    searchHelpMeta.OBJECT_NAME = 'Relation';\n    searchHelpMeta.METHOD = function(entityService: EntityService): SearchHelpMethod {\n      return (searchTerm: string): Observable<object[]> => entityService.listRelation(searchTerm);\n    }(this.entityService);\n    searchHelpMeta.BEHAVIOUR = 'A';\n    searchHelpMeta.MULTI = false;\n    searchHelpMeta.FUZZY_SEARCH = true;\n    searchHelpMeta.FIELDS = [\n      {FIELD_NAME: 'RELATION_ID', FIELD_DESC: 'Relation', IMPORT: true, EXPORT: true, IE_FIELD_NAME: fieldName,\n        LIST_POSITION: 1, FILTER_POSITION: 0},\n      {FIELD_NAME: 'RELATION_DESC', FIELD_DESC: 'Description', IMPORT: true, EXPORT: true, LIST_POSITION: 2, FILTER_POSITION: 0}\n    ];\n    searchHelpMeta.READ_ONLY = this.readonly;\n\n    const afterExportFn = function (context: any, ruleIdx: number) {\n      return () => context.onChangeRightRelationID(ruleIdx, true);\n    }(this, rowID).bind(this);\n    this.searchHelpComponent.openSearchHelpModal(searchHelpMeta, control, afterExportFn);\n  }\n\n  _generateRelationForm(): void {\n    this.relationForm = this.fb.group({});\n    this.relationForm.addControl('RELATION_ID', new FormControl(this.relationMeta.RELATION_ID, {updateOn: 'blur'}));\n    if (this.isNewMode) {\n      this.relationForm.get('RELATION_ID').setValidators(this._validateRelationId);\n      this.relationForm.get('RELATION_ID').setAsyncValidators(this.uniqueRelationValidator.validate.bind(this.uniqueRelationValidator));\n    }\n    this.relationForm.addControl('RELATION_DESC', new FormControl(this.relationMeta.RELATION_DESC));\n\n    // Compose Associations\n    const formArray = [];\n    if (this.relationMeta.ASSOCIATIONS) {\n      this.relationMeta.ASSOCIATIONS.forEach( association => {\n        const fieldsMapArray = [];\n        association.FIELDS_MAPPING.forEach( fieldsMap => {\n          fieldsMapArray.push(this.fb.group({\n            LEFT_FIELD: [fieldsMap.LEFT_FIELD],\n            RIGHT_FIELD: [fieldsMap.RIGHT_FIELD]\n          }));\n        });\n        formArray.push(this.fb.group({\n          ASSOCIATION_NAME: [association.ASSOCIATION_NAME],\n          RIGHT_RELATION_ID: [association.RIGHT_RELATION_ID],\n          CARDINALITY: [{value: association.CARDINALITY, disabled: this.readonly}],\n          FOREIGN_KEY_CHECK: [{\n            value: association.FOREIGN_KEY_CHECK,\n            disabled: this.readonly || association.CARDINALITY === '[0..1]' || association.CARDINALITY === '[0..N]'}],\n          FIELDS_MAPPING: this.fb.array(fieldsMapArray)\n        }));\n      });\n    }\n\n    if (this.isNewMode) {\n      this._appendEmptyAssociation(formArray);\n    }\n    this.relationForm.addControl('ASSOCIATIONS', new FormArray(formArray));\n  }\n\n  _appendEmptyAssociation(formArray: any) {\n    formArray.push(\n      this.fb.group({\n        ASSOCIATION_NAME: [''],\n        RIGHT_RELATION_ID: [''],\n        CARDINALITY: ['[0..1]'],\n        FOREIGN_KEY_CHECK: [{value: 0, disabled: true}],\n        FIELDS_MAPPING: this.fb.array([])\n    }));\n  }\n\n  _validateRelationId(c: FormControl) {\n    if (c.value.trim() === '') {\n      return {message: 'Relation ID is mandatory'};\n    }\n\n    if (c.value.toString().toLowerCase() === 'new') {\n      return {message: '\"NEW/new\" is reserved, thus is not allowed to use!'};\n    }\n\n    if (c.value.toString().toLowerCase().substr(0, 2) !== 'r_') {\n      return {message: 'Relation name must be started with \"r_\"!'};\n    }\n\n    if (c.value.toString().length < 3) {\n      return {message: 'Relation name must have length larger than 2!'};\n    }\n\n    return null;\n  }\n\n  switchEditDisplay() {\n    if (this.isNewMode) {\n      this.dialogService.confirm('Discard the new Entity Type?').subscribe(confirm => {\n        if (confirm) {\n          this._switch2DisplayMode();\n          this.relationMeta = null;\n          this.modelService.sendDialogAnswer('OK');\n        } else {\n          this.modelService.sendDialogAnswer('CANCEL');\n        }\n      });\n      return;\n    }\n\n    if (!this.readonly) { // In Change Mode -> Display Mode\n      if (this.relationForm.dirty) {\n        this.dialogService.confirm('Discard changes?').subscribe(confirm => {\n          if (confirm) { // Discard changes and switch to Display Mode\n            this._generateRelationForm();\n            this.relationForm.reset(this.relationForm.value);\n            this._switch2DisplayMode();\n          }\n        });\n      } else { // Switch to display mode\n        this._switch2DisplayMode();\n      }\n    } else { // In Display Mode -> Change Mode\n      this.readonly = false;\n      this.associationFormArray.controls.forEach(associationFormGroup => {\n        associationFormGroup.get('CARDINALITY').enable();\n        if ( associationFormGroup.get('CARDINALITY').value === '[1..1]' ||\n             associationFormGroup.get('CARDINALITY').value === '[1..N]' ) {\n          associationFormGroup.get('FOREIGN_KEY_CHECK').enable();\n        }\n      });\n      this._appendEmptyAssociation(this.associationFormArray);\n      this.attrComponent.switchEditDisplay(this.readonly);\n    }\n    this.messageService.clearMessages();\n  }\n\n  _switch2DisplayMode(): void {\n    this.readonly = true;\n    let lastIndex = this.associationFormArray.length - 1;\n    while (lastIndex >= 0 && this.associationFormArray.controls[lastIndex].get('ASSOCIATION_NAME').value.trim() === '') {\n      this.associationFormArray.removeAt(lastIndex);\n      lastIndex--;\n    }\n    this.associationFormArray.controls.forEach(associationFormGroup => {\n      associationFormGroup.get('CARDINALITY').disable();\n      associationFormGroup.get('FOREIGN_KEY_CHECK').disable();\n    });\n    this.attrComponent.switchEditDisplay(this.readonly);\n  }\n\n  onChangeRelationID(): void {\n    this.modelService.updateRelationID(this.relationForm.get('RELATION_ID').value);\n  }\n\n  onChangeRelationDesc(): void {\n    this.modelService.updateRelationDesc(this.relationForm.get('RELATION_DESC').value);\n  }\n\n  deleteAssociation(index: number): void {\n    if (index !== this.associationFormArray.length - 1) {\n      this.associationFormArray.removeAt(index);\n      this.associationFormArray.markAsDirty();\n    }\n  }\n\n  openFieldMapModal(index: number): void {\n    this.currentAssociationForm = this.associationFormArray.controls[index];\n    if (this.currentAssociationForm.get('RIGHT_RELATION_ID').value.trim() === '') {\n      return;\n    }\n\n    this.entityService.getRelationMeta(this.currentAssociationForm.get('RIGHT_RELATION_ID').value)\n      .subscribe( data => {\n        this.currentRightRelationMeta = <RelationMeta>data;\n      });\n\n    if (this.readonly === false) {\n      this.fieldMapFormArray.push(this.fb.group({LEFT_FIELD: [''], RIGHT_FIELD: ['']}));\n    }\n    this.currentAssociation = this.relationMeta.ASSOCIATIONS ? this.relationMeta.ASSOCIATIONS[index] : null;\n    this.isFieldMapShown = true;\n  }\n\n  closeFieldMapModal(): void {\n    // this.currentAssociationForm.setValue(this.currentAssociationForm.value); // Or the value won't be updated.\n    let lastIndex = this.fieldMapFormArray.length - 1;\n    while (lastIndex >= 0 && this.fieldMapFormArray.controls[lastIndex].get('RIGHT_FIELD').value.trim() === '') {\n      this.fieldMapFormArray.removeAt(lastIndex);\n      lastIndex--;\n    }\n    this.isFieldMapShown = false;\n  }\n\n  deleteFieldMap(index: number): void {\n    if (index !== this.fieldMapFormArray.length - 1) {\n      this.fieldMapFormArray.removeAt(index);\n      this.fieldMapFormArray.markAsDirty();\n    }\n  }\n\n  onChangeAssociationName(index: number): void {\n    const currentAssocFormGroup = this.associationFormArray.at(index);\n    if (this.associationFormArray.controls.findIndex((assocCtrl, i) =>\n      i !== index && assocCtrl.get('ASSOCIATION_NAME').value === currentAssocFormGroup.get('ASSOCIATION_NAME').value\n    ) !== -1) {\n      currentAssocFormGroup.get('ASSOCIATION_NAME').setErrors({message: 'Duplicate association name!'});\n      return;\n    }\n\n    if (index === this.associationFormArray.length - 1 && currentAssocFormGroup.value.ASSOCIATION_NAME.trim() !== '') {\n      this._appendEmptyAssociation(this.associationFormArray);\n    }\n  }\n\n  onChangeRightRelationID(index: number, isExportedFromSH?: boolean): void {\n    const currentAssocFormGroup = this.associationFormArray.controls[index];\n\n    if (currentAssocFormGroup.get('RIGHT_RELATION_ID').value === this.relationMeta.RELATION_ID) {\n      currentAssocFormGroup.get('RIGHT_RELATION_ID').setErrors({message: 'Self association is not allowed'});\n      return;\n    }\n\n    if (!isExportedFromSH) {\n      this.entityService.getRelationDesc(currentAssocFormGroup.value.RIGHT_RELATION_ID)\n        .subscribe(data => {\n          if (data['msgCat']) {\n            currentAssocFormGroup.get('RIGHT_RELATION_ID').setErrors({message: data['msgShortText']});\n          }\n        });\n    }\n  }\n\n  onChangeCardinality(formGroup: FormGroup): void {\n    const cardinality = formGroup.get('CARDINALITY');\n    if ( cardinality.value === '[1..1]' || cardinality.value === '[1..N]' ) {\n      formGroup.get('FOREIGN_KEY_CHECK').enable();\n    } else {\n      formGroup.get('FOREIGN_KEY_CHECK').setValue(0);\n      formGroup.get('FOREIGN_KEY_CHECK').markAsDirty();\n      formGroup.get('FOREIGN_KEY_CHECK').disable();\n    }\n  }\n\n  onChangeLeftField(index: number): void {\n    const currentFieldMapFormGroup = this.fieldMapFormArray.controls[index];\n    if (this.relationMeta.ATTRIBUTES.findIndex( attribute =>\n        attribute.ATTR_NAME === currentFieldMapFormGroup.get('LEFT_FIELD').value) === -1) {\n      currentFieldMapFormGroup.get('LEFT_FIELD').setErrors({message: 'Field Not Exist'});\n      return;\n    }\n\n    if (this.fieldMapFormArray.controls.findIndex((fieldMapCtrl, i) =>\n      i !== index && fieldMapCtrl.get('LEFT_FIELD') && fieldMapCtrl.get('RIGHT_FIELD') &&\n      fieldMapCtrl.get('LEFT_FIELD').value === currentFieldMapFormGroup.get('LEFT_FIELD').value &&\n      fieldMapCtrl.get('RIGHT_FIELD').value === currentFieldMapFormGroup.get('RIGHT_FIELD').value\n    ) !== -1) {\n      currentFieldMapFormGroup.get('LEFT_FIELD').setErrors({message: 'Duplicate Fields Mapping'});\n      return;\n    }\n\n    if (index === this.fieldMapFormArray.length - 1 && currentFieldMapFormGroup.value.LEFT_FIELD.trim() !== '') {\n      this.fieldMapFormArray.push(\n        this.fb.group( {LEFT_FIELD: [''], RIGHT_FIELD: ['']})\n      );\n    }\n  }\n\n  onChangeRightField(index: number): void {\n    const currentFieldMapFormGroup = this.fieldMapFormArray.controls[index];\n    if (this.currentRightRelationMeta &&\n        this.currentRightRelationMeta.ATTRIBUTES.findIndex( attribute =>\n          attribute.ATTR_NAME === currentFieldMapFormGroup.get('RIGHT_FIELD').value) === -1) {\n      currentFieldMapFormGroup.get('RIGHT_FIELD').setErrors({message: 'Field Not Exist'});\n      return;\n    }\n\n    if (this.fieldMapFormArray.controls.findIndex((fieldMapCtrl, i) =>\n      i !== index && fieldMapCtrl.get('LEFT_FIELD') && fieldMapCtrl.get('RIGHT_FIELD') &&\n      fieldMapCtrl.get('LEFT_FIELD').value === currentFieldMapFormGroup.get('LEFT_FIELD').value &&\n      fieldMapCtrl.get('RIGHT_FIELD').value === currentFieldMapFormGroup.get('RIGHT_FIELD').value\n    ) !== -1) {\n      currentFieldMapFormGroup.get('RIGHT_FIELD').setErrors({message: 'Duplicate Fields Mapping'});\n      return;\n    }\n\n    if (index === this.fieldMapFormArray.length - 1 && currentFieldMapFormGroup.value.RIGHT_FIELD.trim() !== '') {\n      this.fieldMapFormArray.push(\n        this.fb.group( {LEFT_FIELD: [''], RIGHT_FIELD: ['']})\n      );\n    }\n  }\n\n  oldAssociationName(formGroup: AbstractControl): boolean {\n    return this.relationMeta.ASSOCIATIONS ?\n      this.relationMeta.ASSOCIATIONS.findIndex(\n      association => association.ASSOCIATION_NAME === formGroup.get('ASSOCIATION_NAME').value ) !== -1 :\n      false;\n  }\n\n  oldFieldMap(formGroup: AbstractControl): boolean {\n    return this.currentAssociation ?\n      this.currentAssociation.FIELDS_MAPPING.findIndex(\n      fieldMap => fieldMap.LEFT_FIELD === formGroup.get('LEFT_FIELD').value &&\n                            fieldMap.RIGHT_FIELD === formGroup.get('RIGHT_FIELD').value ) !== -1 :\n      false;\n  }\n\n  canDeactivate(): Observable<boolean> | boolean {\n    if (this.isNewMode || (!this.bypassProtection && this.relationForm && this.relationForm.dirty)) {\n      const dialogAnswer = this.dialogService.confirm('Discard changes?');\n      dialogAnswer.subscribe(confirm => {\n        if (confirm) {\n          this.modelService.sendDialogAnswer('OK');\n        } else {\n          this.modelService.sendDialogAnswer('CANCEL');\n        }\n      });\n      return dialogAnswer;\n    } else {\n      return true;\n    }\n  }\n\n  save(): void {\n    if (!this.relationForm.dirty) {\n      return this.messageService.reportMessage('MODEL', 'NO_CHANGE', 'S');\n    }\n\n    if (!this.relationForm.valid) {\n      return this.messageService.reportMessage('MODEL', 'INVALID_DATA', 'E');\n    }\n\n    if (this.isNewMode) {\n      this.changedRelation['action'] = 'add';\n      this.changedRelation['RELATION_ID'] = this.relationForm.controls['RELATION_ID'].value;\n    } else {\n      this.changedRelation['action'] = 'update';\n      this.changedRelation['RELATION_ID'] = this.relationMeta.RELATION_ID;\n    }\n    if (this.relationForm.controls['RELATION_DESC'].dirty) {\n      this.changedRelation['RELATION_DESC'] = this.relationForm.controls['RELATION_DESC'].value;\n    }\n\n    const checkErrs = this.attrComponent.checkAttributes();\n    if (checkErrs.length > 0) {\n      checkErrs.forEach( errMsg => this.messageService.add( errMsg ) );\n      return;\n    }\n    this.changedRelation['ATTRIBUTES'] = this.attrComponent.processChangedAttributes();\n    if (!this._processChangedAssociation()) {\n      return;\n    }\n\n    this.entityService.saveRelation(this.changedRelation)\n      .subscribe(data => this._postActivityAfterSavingRelation(data));\n  }\n\n  _processChangedAssociation(): boolean {\n    const changedAssociations = [];\n    const errMessages = [];\n    if (!this.associationFormArray.dirty) { return true; }\n\n    this.changedRelation['ASSOCIATIONS'] = changedAssociations;\n\n    this.associationFormArray.controls.forEach(associationControl => {\n      if (!associationControl.get('ASSOCIATION_NAME').value ||\n          !associationControl.get('RIGHT_RELATION_ID').value) { return; }\n      const changedAssociation = {};\n      const associationMeta = this.relationMeta.ASSOCIATIONS.find(\n        association => associationControl.get('ASSOCIATION_NAME').value === association.ASSOCIATION_NAME);\n      if (!associationMeta) {// New Add Case\n        changedAssociation['action'] = 'add';\n        changedAssociation['ASSOCIATION_NAME'] = associationControl.get('ASSOCIATION_NAME').value;\n        changedAssociation['RIGHT_RELATION_ID'] = associationControl.get('RIGHT_RELATION_ID').value;\n        changedAssociation['CARDINALITY'] = associationControl.get('CARDINALITY').value;\n        changedAssociation['FOREIGN_KEY_CHECK'] = associationControl.get('FOREIGN_KEY_CHECK').value;\n        changedAssociation['FIELDS_MAPPING'] = [];\n        const fieldMapArray = associationControl.get('FIELDS_MAPPING') as FormArray;\n        if (fieldMapArray.length === 0) {\n          errMessages.push(this.messageService.generateMessage(\n            'MODEL', 'MISS_RELATION_ASSOCIATION_FIELD_MAPPING', 'E', changedAssociation['RIGHT_RELATION_ID']));\n          return;\n        }\n        fieldMapArray.controls.forEach(fieldMap => {\n          changedAssociation['FIELDS_MAPPING'].push(\n            {action: 'add', RIGHT_FIELD: fieldMap.get('RIGHT_FIELD').value, LEFT_FIELD: fieldMap.get('LEFT_FIELD').value});\n        });\n        changedAssociations.push(changedAssociation);\n      } else {\n        if (associationControl.dirty) {// Change Case\n          changedAssociation['action'] = 'update';\n          changedAssociation['ASSOCIATION_NAME'] = associationControl.get('ASSOCIATION_NAME').value;\n          if (associationControl.get('RIGHT_RELATION_ID').dirty) {\n            changedAssociation['RIGHT_RELATION_ID'] = associationControl.get('RIGHT_RELATION_ID').value;\n          }\n          if (associationControl.get('CARDINALITY').dirty) {\n            changedAssociation['CARDINALITY'] = associationControl.get('CARDINALITY').value;\n          }\n          if (associationControl.get('FOREIGN_KEY_CHECK').dirty) {\n            changedAssociation['FOREIGN_KEY_CHECK'] = associationControl.get('FOREIGN_KEY_CHECK').value;\n          }\n          if (associationControl.get('FIELDS_MAPPING').dirty) {\n            changedAssociation['FIELDS_MAPPING'] = [];\n            const fieldMapArray = associationControl.get('FIELDS_MAPPING') as FormArray;\n            if (fieldMapArray.length === 0) {\n              errMessages.push(this.messageService.generateMessage(\n                'MODEL', 'MISS_RELATION_ASSOCIATION_FIELD_MAPPING', 'E', changedAssociation['RIGHT_RELATION_ID']));\n              return;\n            }\n            fieldMapArray.controls.forEach(fieldMap => {\n              if (fieldMap.dirty) {\n                changedAssociation['FIELDS_MAPPING'].push(\n                  {action: 'add', RIGHT_FIELD: fieldMap.get('RIGHT_FIELD').value, LEFT_FIELD: fieldMap.get('LEFT_FIELD').value});\n              }\n            });\n            associationMeta.FIELDS_MAPPING.forEach( oldFieldMap => {\n              const index = fieldMapArray.controls.findIndex(fieldMap =>\n                fieldMap.get('LEFT_FIELD').value === oldFieldMap.LEFT_FIELD &&\n                fieldMap.get('RIGHT_FIELD').value === oldFieldMap.RIGHT_FIELD);\n              if (index === -1) {\n                changedAssociation['FIELDS_MAPPING'].push(\n                  {action: 'delete', RIGHT_FIELD: oldFieldMap.LEFT_FIELD, LEFT_FIELD: oldFieldMap.RIGHT_FIELD});\n              }\n            });\n          }\n          changedAssociations.push(changedAssociation);\n        }\n      }\n    });\n    if (errMessages.length > 0) {\n      errMessages.forEach( errMessage => this.messageService.add(errMessage));\n      return false;\n    }\n    // Deletion Case\n    this.relationMeta.ASSOCIATIONS.forEach(associationMeta => {\n      const index = this.associationFormArray.controls.findIndex(\n        associationControl => associationControl.get('ASSOCIATION_NAME').value === associationMeta.ASSOCIATION_NAME);\n      if (index === -1) { // The association must be deleted\n        changedAssociations.push({action: 'delete', ASSOCIATION_NAME: associationMeta.ASSOCIATION_NAME});\n      }\n    });\n    return true;\n  }\n\n  _postActivityAfterSavingRelation(data: any) {\n    this.changedRelation = {};\n    if (data['RELATION_ID']) {\n      if (this.isNewMode) {\n        this.isNewMode = false;\n        this.bypassProtection = true;\n        this.router.navigate(['/model/relation/' + data['RELATION_ID']],\n          {state: {message: this.messageService.generateMessage(\n                'MODEL', 'RELATION_SAVED', 'S', data['RELATION_ID'])}});\n      } else {\n        this.readonly = true;\n        this.relationMeta = data;\n        this._generateRelationForm();\n        this.messageService.reportMessage('MODEL', 'RELATION_SAVED', 'S', data['RELATION_ID']);\n      }\n    } else {\n      if (data instanceof Array) {\n        data.forEach(err => this.messageService.add(err));\n      } else {\n        this.messageService.report(<Message>data);\n      }\n    }\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZGVsL3JlbGF0aW9uL3JlbGF0aW9uLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport {Relation} from 'jor-angular';\nimport {Subject} from 'rxjs';\nimport {EntityService} from 'jor-angular';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {debounceTime, distinctUntilChanged, switchMap} from 'rxjs/operators';\nimport {ModelService} from '../model.service';\nimport {MessageService} from 'ui-message-angular';\nimport {msgStore} from '../../msgStore';\n\n@Component({\n  selector: 'app-relation',\n  templateUrl: './relation.component.html',\n  styleUrls: ['./relation.component.css']\n})\nexport class RelationComponent implements OnInit {\n\n  relationList: Relation[];\n  isSearchListShown = true;\n  private searchTerms = new Subject<string>();\n  private theSelectedRelation: Relation;\n\n  constructor(private entityService: EntityService,\n              private modelService: ModelService,\n              private messageService: MessageService,\n              private route: ActivatedRoute,\n              private router: Router) {\n    this.messageService.setMessageStore(msgStore, 'EN');\n  }\n\n  ngOnInit() {\n    this.searchTerms.pipe(\n      debounceTime(300),\n      distinctUntilChanged(),\n      switchMap((term: string) => this.entityService.listRelation(term)),\n    ).subscribe(data => {\n      this.relationList = data;\n      let relationID;\n      if (this.route.snapshot.firstChild) {\n        relationID = this.route.snapshot.firstChild.paramMap.get('relationID');\n      }\n      if (relationID) {\n        if (relationID === 'new') {\n          this._newRelation();\n        } else {\n          this.onSelect(this.relationList.find(relation => relation.RELATION_ID === relationID));\n        }\n      }\n    });\n    this.searchRelation(''); // The initial list\n\n    this.modelService.theSelectedRelation$.subscribe( data => {\n      if (this.theSelectedRelation) {\n        this.theSelectedRelation.RELATION_ID = data.RELATION_ID;\n        this.theSelectedRelation.RELATION_DESC = data.RELATION_DESC;\n      }\n    });\n\n    this.modelService.dialogAnswer$.subscribe( answer => {\n      if (answer === 'OK' && this.relationList[0] && !this.relationList[0].CREATE_TIME) {\n        this.relationList.splice(0, 1); // Remove the first one.\n      } else if (answer === 'CANCEL') {\n        const relationID = this.route.snapshot.firstChild.paramMap.get('relationID');\n        if (relationID) {\n          if (relationID === 'new') {\n            this.onSelect(this.relationList[0]);\n          } else {\n            this.onSelect(this.relationList.find(relation => relation.RELATION_ID === relationID));\n          }\n        }\n      }\n    });\n\n    this.modelService.isSearchListShown$.subscribe( data => this.isSearchListShown = data);\n  }\n\n  searchRelation(term: string): void {\n    this.searchTerms.next(term);\n  }\n\n  hideSearchList(): void {\n    this.isSearchListShown = false;\n    this.modelService.hideSearchList();\n  }\n\n  onSelect(relation: Relation): void {\n    if (relation) {\n      this.theSelectedRelation = relation;\n      this.modelService.setSelectedRelation(relation);\n    }\n  }\n\n  newRelation(): void {\n    if (this.route.snapshot.firstChild && this.route.snapshot.firstChild.paramMap.get('relationID') === 'new') {\n      this.messageService.reportMessage('MODEL', 'UNSAVED_NEW', 'E');\n    } else {\n      this._newRelation();\n      this.router.navigate(['/model/relation/new']);\n    }\n  }\n\n  _newRelation(): void {\n    this.theSelectedRelation = new Relation();\n    this.theSelectedRelation.RELATION_ID = 'r_new';\n    this.theSelectedRelation.RELATION_DESC = 'description';\n    this.theSelectedRelation.VERSION_NO = 1;\n    this.theSelectedRelation.LAST_CHANGE_BY = 'DH001';\n    this.theSelectedRelation.LAST_CHANGE_TIME = new Date().toDateString();\n    this.modelService.setSelectedRelation(this.theSelectedRelation);\n    this.relationList.splice(0, 0, this.theSelectedRelation);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZGVsL3JlbGF0aW9uc2hpcC9yZWxhdGlvbnNoaXAtZGV0YWlsL3JlbGF0aW9uc2hpcC1kZXRhaWwuY29tcG9uZW50LmNzcyJ9 */\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {Attribute, RelationshipMeta} from 'jor-angular';\nimport {AbstractControl, FormArray, FormBuilder, FormControl, FormGroup} from '@angular/forms';\nimport {AttributeMetaComponent} from '../../attribute-meta/attribute-meta.component';\nimport {ActivatedRoute, ParamMap, Router} from '@angular/router';\nimport {Message, MessageService} from 'ui-message-angular';\nimport {ModelService} from '../../model.service';\nimport {DialogService} from '../../../dialog.service';\nimport {EntityService} from 'jor-angular';\nimport {msgStore} from '../../../msgStore';\nimport {switchMap} from 'rxjs/operators';\nimport {forkJoin, Observable, of} from 'rxjs';\nimport {UniqueRelationshipValidator} from '../../model-validators';\nimport {SearchHelp, SearchHelpMethod} from 'jor-angular';\nimport {SearchHelpComponent} from 'jor-angular';\n\n@Component({\n  selector: 'app-relationship-detail',\n  templateUrl: './relationship-detail.component.html',\n  styleUrls: ['./relationship-detail.component.css']\n})\nexport class RelationshipDetailComponent implements OnInit {\n  relationshipMeta: RelationshipMeta;\n  attributes: Attribute[];\n  readonly = true;\n  isNewMode = false;\n  relationshipForm: FormGroup;\n  changedRelationship = {};\n  bypassProtection = false;\n  isSearchListShown = true;\n\n  @ViewChild(AttributeMetaComponent, {static: false})\n  private attrComponent!: AttributeMetaComponent;\n  @ViewChild(SearchHelpComponent, {static: false})\n  private searchHelpComponent!: SearchHelpComponent;\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private fb: FormBuilder,\n              private uniqueRelationshipValidator: UniqueRelationshipValidator,\n              private messageService: MessageService,\n              private modelService: ModelService,\n              private dialogService: DialogService,\n              private entityService: EntityService) {\n    this.messageService.setMessageStore(msgStore, 'EN');\n  }\n\n  get involveFormArray() {\n    return this.relationshipForm.get('INVOLVES') as FormArray;\n  }\n\n  ngOnInit() {\n    this.route.paramMap.pipe(\n      switchMap((params: ParamMap) => {\n        const relationshipID = params.get('relationshipID');\n        if (relationshipID === 'new') {\n          const relationship = new RelationshipMeta();\n          relationship.RELATIONSHIP_ID = 'rs_';\n          relationship.RELATIONSHIP_DESC = '';\n          relationship.VALID_PERIOD = 0;\n          relationship.SINGLETON = false;\n          relationship.INVOLVES = [];\n          this.isNewMode = true;\n          this.readonly = false;\n          this.bypassProtection = false;\n          return forkJoin(of(relationship), of([]));\n        } else {\n          this.readonly = true;\n          this.isNewMode = false;\n          return forkJoin([\n            this.entityService.getRelationship(relationshipID),\n            this.entityService.getRelationMeta(relationshipID)\n          ]);\n        }\n      })\n    ).subscribe(data => {\n      if ( 'msgName' in data[0]) {\n        this.messageService.clearMessages();\n        this.relationshipMeta = null;\n        this.relationshipForm = null;\n        this.messageService.report(<Message>data[0]);\n      } else {\n        this.messageService.clearMessages();\n        if (history.state.message) {\n          this.messageService.report(history.state.message);\n        }\n        this.relationshipMeta = data[0];\n        this.attributes = 'msgName' in data[1] ? [] : data[1]['ATTRIBUTES'];\n        this._generateRelationshipForm();\n        if (this.readonly) {\n          this.relationshipForm.get('TIME_DEPENDENT').disable();\n          this.relationshipForm.get('SINGLETON').disable();\n        }\n      }\n    });\n\n    this.modelService.isSearchListShown$.subscribe( data => this.isSearchListShown = data);\n  }\n\n  showSearchList(): void {\n    this.isSearchListShown = true;\n    this.modelService.showSearchList();\n  }\n\n  onSearchHelp(control: AbstractControl, rowID: number): void {\n    const searchHelpMeta = new SearchHelp();\n    searchHelpMeta.OBJECT_NAME = 'Role';\n    searchHelpMeta.METHOD = function(entityService: EntityService): SearchHelpMethod {\n      return (searchTerm: string): Observable<object[]> => entityService.listRole(searchTerm);\n    }(this.entityService);\n    searchHelpMeta.BEHAVIOUR = 'A';\n    searchHelpMeta.MULTI = false;\n    searchHelpMeta.FUZZY_SEARCH = true;\n    searchHelpMeta.FIELDS = [\n      {FIELD_NAME: 'ROLE_ID', FIELD_DESC: 'Role', IMPORT: true, EXPORT: true, LIST_POSITION: 1, FILTER_POSITION: 0},\n      {FIELD_NAME: 'ROLE_DESC', FIELD_DESC: 'Description', IMPORT: true, EXPORT: true, LIST_POSITION: 2, FILTER_POSITION: 0}\n    ];\n    searchHelpMeta.READ_ONLY = this.readonly || this.oldInvolve(control) && control.valid;\n\n    const afterExportFn = function (context: any, ruleIdx: number) {\n      return () => context.onChangeRoleID(ruleIdx, true);\n    }(this, rowID).bind(this);\n    this.searchHelpComponent.openSearchHelpModal(searchHelpMeta, control, afterExportFn);\n  }\n\n  _generateRelationshipForm(): void {\n    if (this.relationshipForm) {\n      this.relationshipForm.markAsPristine({onlySelf: false});\n      this.relationshipForm.get('RELATIONSHIP_ID').setValue(this.relationshipMeta.RELATIONSHIP_ID);\n      this.relationshipForm.get('RELATIONSHIP_DESC').setValue(this.relationshipMeta.RELATIONSHIP_DESC);\n      this.relationshipForm.get('TIME_DEPENDENT').setValue(this.relationshipMeta.VALID_PERIOD > 0);\n      this.relationshipForm.get('VALID_PERIOD').setValue(this.relationshipMeta.VALID_PERIOD);\n      this.relationshipForm.get('SINGLETON').setValue(this.relationshipMeta.SINGLETON);\n      this.relationshipForm.removeControl('ATTRIBUTES');\n    } else {\n      this.relationshipForm = this.fb.group({\n        RELATIONSHIP_ID: [this.relationshipMeta.RELATIONSHIP_ID, {updateOn: 'blur'}],\n        RELATIONSHIP_DESC: [this.relationshipMeta.RELATIONSHIP_DESC],\n        TIME_DEPENDENT: [this.relationshipMeta.VALID_PERIOD > 0],\n        VALID_PERIOD: [this.relationshipMeta.VALID_PERIOD, this._validateValidPeriod],\n        SINGLETON: [this.relationshipMeta.SINGLETON]\n      });\n    }\n\n    // Compose Involves\n    const formArray = [];\n    this.relationshipMeta.INVOLVES.forEach( involve => {\n      formArray.push(this.fb.group({\n        ROLE_ID: [involve.ROLE_ID],\n        ROLE_DESC: [involve.ROLE_DESC],\n        CARDINALITY: [{value: involve.CARDINALITY, disabled: this.readonly}],\n        DIRECTION: [involve.DIRECTION]\n      }));\n    });\n\n    if (this.isNewMode) {\n      this.relationshipForm.get('RELATIONSHIP_ID').setValidators(this._validateRelationshipID);\n      this.relationshipForm.get('RELATIONSHIP_ID').setAsyncValidators(\n        this.uniqueRelationshipValidator.validate.bind(this.uniqueRelationshipValidator));\n      this.relationshipForm.get('TIME_DEPENDENT').enable();\n      formArray.push(\n        this.fb.group({\n          ROLE_ID: [''],\n          ROLE_DESC: [''],\n          CARDINALITY: ['[1..1]'],\n          DIRECTION: ['']\n        }));\n    } else {\n      this.relationshipForm.get('RELATIONSHIP_ID').clearValidators();\n      this.relationshipForm.get('RELATIONSHIP_ID').clearAsyncValidators();\n      this.relationshipForm.get('RELATIONSHIP_ID').updateValueAndValidity();\n    }\n\n    this.relationshipForm.setControl('INVOLVES', new FormArray(formArray));\n  }\n\n  _validateRelationshipID(c: FormControl) {\n    if (c.value.trim() === '') {\n      return {message: 'Relationship ID is mandatory'};\n    }\n\n    if (c.value.toString().toLowerCase() === 'new') {\n      return {message: '\"NEW/new\" is reserved, thus is not allowed to use!'};\n    }\n\n    if (c.value.toString().toLowerCase().substr(0, 3) !== 'rs_') {\n      return {message: 'Relationship ID must be started with \"rs_\"!'};\n    }\n\n    if (c.value.toString().length < 4) {\n      return {message: 'Relationship ID must have length larger than 3!'};\n    }\n    if (c.value.toString().length > 32) {\n      return {message: 'Relationship ID must have length less than 32!'};\n    }\n    return null;\n  }\n\n  _validateValidPeriod(c: FormControl) {\n    if (c.parent && c.parent.value.TIME_DEPENDENT && c.value <= 0) {\n      return {message: 'must be larger than 0'};\n    }\n    return null;\n  }\n\n  switchEditDisplay() {\n    if (this.isNewMode) {\n      this.dialogService.confirm('Discard the new Relationship?').subscribe(confirm => {\n        if (confirm) {\n          this._switch2DisplayMode();\n          this.relationshipMeta = null;\n          this.modelService.sendDialogAnswer('OK');\n        } else {\n          this.modelService.sendDialogAnswer('CANCEL');\n        }\n      });\n      return;\n    }\n\n    if (!this.readonly) { // In Change Mode -> Display Mode\n      if (this.relationshipForm.dirty) {\n        this.dialogService.confirm('Discard changes?').subscribe(confirm => {\n          if (confirm) { // Discard changes and switch to Display Mode\n            this._generateRelationshipForm();\n            this.relationshipForm.reset(this.relationshipForm.value);\n            this._switch2DisplayMode();\n          }\n        });\n      } else { // Switch to display mode\n        this._switch2DisplayMode();\n      }\n    } else { // In Display Mode -> Change Mode\n      this.readonly = false;\n      this.relationshipForm.get('TIME_DEPENDENT').enable();\n      this.relationshipForm.get('SINGLETON').enable();\n      this.attrComponent.switchEditDisplay(this.readonly);\n      this.involveFormArray.controls.forEach(involveFormGroup => {\n        involveFormGroup.get('CARDINALITY').enable();\n      });\n      this.involveFormArray.push(\n        this.fb.group({\n          ROLE_ID: [''],\n          ROLE_DESC: [''],\n          CARDINALITY: ['[1..1]'],\n          DIRECTION: ['']\n        })\n      );\n    }\n\n    this.messageService.clearMessages();\n  }\n\n  _switch2DisplayMode(): void {\n    this.readonly = true;\n    this.relationshipForm.get('TIME_DEPENDENT').disable();\n    this.relationshipForm.get('SINGLETON').disable();\n    this.attrComponent.switchEditDisplay(this.readonly);\n    let lastIndex = this.involveFormArray.length - 1;\n    while (lastIndex >= 0 && this.involveFormArray.controls[lastIndex].get('ROLE_ID').value.trim() === '') {\n      this.involveFormArray.removeAt(lastIndex);\n      lastIndex--;\n    }\n    this.involveFormArray.controls.forEach(involveFormGroup => {\n      involveFormGroup.get('CARDINALITY').disable();\n    });\n  }\n\n  onChangeRelationshipID(): void {\n    this.modelService.updateRelationshipID(this.relationshipForm.get('RELATIONSHIP_ID').value);\n  }\n\n  onChangeTimeDependency(): void {\n    const timeDependent = this.relationshipForm.get('TIME_DEPENDENT').value;\n    const validPeriodCtrl = this.relationshipForm.get('VALID_PERIOD');\n    const relationID = this.relationshipForm.get('RELATIONSHIP_ID').value;\n    const attrFormArray = this.relationshipForm.get('ATTRIBUTES') as FormArray;\n    if (timeDependent) {\n      validPeriodCtrl.setValue(28080000); // 3600 * 24 * 365\n      validPeriodCtrl.markAsDirty();\n      validPeriodCtrl.enable();\n      const validFromFormGroup = this.fb.group({\n        ATTR_GUID: [''],\n        RELATION_ID: [relationID],\n        ATTR_NAME: ['VALID_FROM'],\n        ATTR_DESC: ['Valid from'],\n        DATA_ELEMENT: [''],\n        DATA_TYPE: [{value: 8, disabled: true}],\n        DATA_LENGTH: [null],\n        DECIMAL: [null],\n        ORDER: [null],\n        PRIMARY_KEY: [false],\n        AUTO_INCREMENT: [false]\n      });\n      validFromFormGroup.markAsDirty();\n      attrFormArray.insert(attrFormArray.length - 1, validFromFormGroup);\n      const validToFormGroup = this.fb.group({\n        ATTR_GUID: [''],\n        RELATION_ID: [relationID],\n        ATTR_NAME: ['VALID_TO'],\n        ATTR_DESC: ['Valid to'],\n        DATA_ELEMENT: [''],\n        DATA_TYPE: [{value: 8, disabled: true}],\n        DATA_LENGTH: [null],\n        DECIMAL: [null],\n        ORDER: [null],\n        PRIMARY_KEY: [false],\n        AUTO_INCREMENT: [false]\n      });\n      validToFormGroup.markAsDirty();\n      attrFormArray.insert(attrFormArray.length - 1, validToFormGroup);\n    } else {\n      validPeriodCtrl.setValue(0);\n      validPeriodCtrl.disable();\n      validPeriodCtrl.markAsDirty();\n      const attributeValidFromIndex = attrFormArray.controls.findIndex(\n        attrCtrl => attrCtrl.get('ATTR_NAME').value === 'VALID_FROM');\n      if (attributeValidFromIndex >= 0) { this.attrComponent.deleteAttribute(attributeValidFromIndex); }\n      const attributeValidToIndex = attrFormArray.controls.findIndex(\n        attrCtrl => attrCtrl.get('ATTR_NAME').value === 'VALID_TO');\n      if (attributeValidToIndex >= 0) { this.attrComponent.deleteAttribute(attributeValidToIndex); }\n    }\n\n  }\n\n  onChangeRelationshipDesc(): void {\n    this.modelService.updateRelationshipDesc(this.relationshipForm.get('RELATIONSHIP_DESC').value);\n  }\n\n  deleteInvolve(index: number): void {\n    if (index !== this.involveFormArray.length - 1) {\n      const currentRoleID = this.involveFormArray.at(index).get('ROLE_ID').value;\n      this.involveFormArray.removeAt(index);\n      this.involveFormArray.markAsDirty();\n      const attrFormArray = this.relationshipForm.get('ATTRIBUTES') as FormArray;\n      const attributeInstanceGUIDIndex = attrFormArray.controls.findIndex(\n        attrCtrl => attrCtrl.get('ATTR_NAME').value === currentRoleID + '_INSTANCE_GUID');\n      if (attributeInstanceGUIDIndex >= 0) { this.attrComponent.deleteAttribute(attributeInstanceGUIDIndex); }\n      const attributeEntityIDIndex = attrFormArray.controls.findIndex(\n        attrCtrl => attrCtrl.get('ATTR_NAME').value === currentRoleID + '_ENTITY_ID');\n      if (attributeEntityIDIndex >= 0) { this.attrComponent.deleteAttribute(attributeEntityIDIndex); }\n    }\n  }\n\n  onChangeRoleID(index: number): void {\n    const currentInvolveFormGroup = this.involveFormArray.controls[index];\n    if (this.involveFormArray.controls.findIndex((involveCtrl, i) =>\n      i !== index && involveCtrl.get('ROLE_ID').value === currentInvolveFormGroup.get('ROLE_ID').value\n    ) !== -1) {\n      currentInvolveFormGroup.get('ROLE_ID').setErrors({message: 'Duplicate roles'});\n      return;\n    }\n\n    if (index === this.involveFormArray.length - 1 && currentInvolveFormGroup.value.ROLE_ID.trim() !== '') {\n      // Only work for the last New line\n      this.involveFormArray.push(\n        this.fb.group({\n          ROLE_ID: [''],\n          ROLE_DESC: [''],\n          CARDINALITY: ['[1..1]'],\n          DIRECTION: ['']\n        })\n      );\n    }\n\n    this.entityService.getRoleDesc(currentInvolveFormGroup.value.ROLE_ID).subscribe(data => {\n      if (data['msgCat']) {\n        currentInvolveFormGroup.get('ROLE_ID').setErrors({message: data['msgShortText']});\n      } else {\n        currentInvolveFormGroup.get('ROLE_DESC').setValue(data);\n        const attrFormArray = this.relationshipForm.get('ATTRIBUTES') as FormArray;\n        const relationID = this.relationshipForm.get('RELATIONSHIP_ID').value;\n        const instanceGUIDFormGroup = this.fb.group({\n          ATTR_GUID: [''],\n          RELATION_ID: [relationID],\n          ATTR_NAME: [currentInvolveFormGroup.value.ROLE_ID + '_INSTANCE_GUID'],\n          ATTR_DESC: ['Entity Instance GUID of role ' + currentInvolveFormGroup.value.ROLE_ID],\n          DATA_ELEMENT: [null],\n          DATA_TYPE: [{value: 1, disabled: true}],\n          DATA_LENGTH: [32],\n          DECIMAL: [null],\n          ORDER: [null],\n          PRIMARY_KEY: [false],\n          AUTO_INCREMENT: [false]\n        });\n        instanceGUIDFormGroup.markAsDirty();\n        attrFormArray.insert(attrFormArray.length - 1, instanceGUIDFormGroup);\n        const entityIDFormGroup = this.fb.group({\n          ATTR_GUID: [''],\n          RELATION_ID: [relationID],\n          ATTR_NAME: [currentInvolveFormGroup.value.ROLE_ID + '_ENTITY_ID'],\n          ATTR_DESC: ['Entity ID of role ' + currentInvolveFormGroup.value.ROLE_ID],\n          DATA_ELEMENT: [null],\n          DATA_TYPE: [{value: 1, disabled: true}],\n          DATA_LENGTH: [32],\n          DECIMAL: [null],\n          ORDER: [null],\n          PRIMARY_KEY: [false],\n          AUTO_INCREMENT: [false]\n        });\n        entityIDFormGroup.markAsDirty();\n        attrFormArray.insert(attrFormArray.length - 1, entityIDFormGroup);\n        attrFormArray.markAsDirty();\n      }\n    });\n  }\n\n  oldInvolve(formGroup: AbstractControl): boolean {\n    return this.relationshipMeta.INVOLVES.findIndex( role => role.ROLE_ID === formGroup.get('ROLE_ID').value ) !== -1;\n  }\n\n  canDeactivate(): Observable<boolean> | boolean {\n    if (this.isNewMode || (!this.bypassProtection && this.relationshipForm && this.relationshipForm.dirty)) {\n      const dialogAnswer = this.dialogService.confirm('Discard changes?');\n      dialogAnswer.subscribe(confirm => {\n        if (confirm) {\n          this.modelService.sendDialogAnswer('OK');\n        } else {\n          this.modelService.sendDialogAnswer('CANCEL');\n        }\n      });\n      return dialogAnswer;\n    } else {\n      return true;\n    }\n  }\n\n  save(): void {\n    if (!this.relationshipForm.dirty) {\n      return this.messageService.reportMessage('MODEL', 'NO_CHANGE', 'S');\n    }\n\n    if (!this.relationshipForm.valid) {\n      return this.messageService.reportMessage('MODEL', 'INVALID_DATA', 'E');\n    }\n\n    if (this.isNewMode) {\n      this.changedRelationship['action'] = 'add';\n      this.changedRelationship['RELATIONSHIP_ID'] = this.relationshipForm.controls['RELATIONSHIP_ID'].value;\n    } else {\n      this.changedRelationship['action'] = 'update';\n      this.changedRelationship['RELATIONSHIP_ID'] = this.relationshipMeta.RELATIONSHIP_ID;\n    }\n    if (this.relationshipForm.controls['RELATIONSHIP_DESC'].dirty) {\n      this.changedRelationship['RELATIONSHIP_DESC'] = this.relationshipForm.controls['RELATIONSHIP_DESC'].value;\n    }\n    if (this.isNewMode || this.relationshipForm.controls['VALID_PERIOD'].dirty) {\n      this.changedRelationship['VALID_PERIOD'] = this.relationshipForm.controls['VALID_PERIOD'].value;\n    }\n    if (this.isNewMode || this.relationshipForm.controls['SINGLETON'].dirty) {\n      this.changedRelationship['SINGLETON'] = this.relationshipForm.controls['SINGLETON'].value;\n    }\n\n    this.changedRelationship['ATTRIBUTES'] = this.attrComponent.processChangedAttributes();\n\n    if (this._processChangedInvolves()) {\n      // console.log(this.changedRelationship);\n      this.entityService.saveRelationship(this.changedRelationship)\n        .subscribe(data => this._postActivityAfterSavingRelationship(data));\n    }\n  }\n\n  _processChangedInvolves(): boolean {\n    if (this.involveFormArray.length <= 2) { // An empty line is included\n      this.messageService.reportMessage('MODEL', 'RELATIONSHIP_LACK_INVOLVED_ROLES', 'E');\n      return false;\n    }\n    const changedInvolves = [];\n    if (this.involveFormArray.dirty) {\n      this.changedRelationship['INVOLVES'] = changedInvolves;\n\n      this.involveFormArray.controls.forEach(involveControl => {\n        if (involveControl.get('ROLE_ID').value.trim() === '') { return; }\n        let action;\n        const index = this.relationshipMeta.INVOLVES.findIndex(\n          involve => involveControl.get('ROLE_ID').value === involve.ROLE_ID);\n        if (index === -1) { // New Add Case\n          action = 'add';\n        } else { // New Update Case\n          if (involveControl.dirty) { action = 'update'; }\n        }\n        if (action) {\n          changedInvolves.push({ action: action, ROLE_ID: involveControl.get('ROLE_ID').value,\n            CARDINALITY: involveControl.get('CARDINALITY').value, DIRECTION: involveControl.get('DIRECTION').value });\n        }\n      });\n\n      // Deletion Case\n      this.relationshipMeta.INVOLVES.forEach(involve => {\n        const index = this.involveFormArray.controls.findIndex(\n          roleControl => roleControl.get('ROLE_ID').value === involve.ROLE_ID);\n        if (index === -1) { // The attribute must be deleted\n          const deletedRole = {action: 'delete', ROLE_ID: involve.ROLE_ID};\n          changedInvolves.push(deletedRole);\n        }\n      });\n    }\n    return true;\n  }\n\n  _postActivityAfterSavingRelationship(data: any) {\n    this.changedRelationship = {};\n    if (data[0] && data[0]['RELATIONSHIP_ID']) {\n      if (this.isNewMode) {\n        this.isNewMode = false;\n        this.bypassProtection = true;\n        this.router.navigate(['/model/relationship/' + data[0]['RELATIONSHIP_ID']],\n          {state: {message: this.messageService.generateMessage(\n                'MODEL', 'RELATIONSHIP_SAVED', 'S', data[0]['RELATIONSHIP_ID'])}});\n      } else {\n        this.readonly = true;\n        this.relationshipForm.get('TIME_DEPENDENT').disable();\n        this.relationshipForm.get('SINGLETON').disable();\n        this.relationshipMeta = data[0];\n        this.attributes = data[1].ATTRIBUTES;\n        this._generateRelationshipForm();\n        this.messageService.reportMessage(\n          'MODEL', 'RELATIONSHIP_SAVED', 'S', this.relationshipMeta.RELATIONSHIP_ID);\n      }\n    } else {\n      if (data instanceof Array) {\n        data.forEach(err => this.messageService.add(err));\n      } else {\n        this.messageService.report(<Message>data);\n      }\n    }\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZGVsL3JlbGF0aW9uc2hpcC9yZWxhdGlvbnNoaXAuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { RelationshipH} from 'jor-angular';\nimport {Subject} from 'rxjs';\nimport {EntityService} from 'jor-angular';\nimport {ModelService} from '../model.service';\nimport {MessageService} from 'ui-message-angular';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {msgStore} from '../../msgStore';\nimport {debounceTime, distinctUntilChanged, switchMap} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-relationship',\n  templateUrl: './relationship.component.html',\n  styleUrls: ['./relationship.component.css']\n})\nexport class RelationshipComponent implements OnInit {\n  relationshipList: RelationshipH[];\n  isSearchListShown = true;\n  private searchTerms = new Subject<string>();\n  private theSelectedRelationship: RelationshipH;\n\n  constructor(private entityService: EntityService,\n              private modelService: ModelService,\n              private messageService: MessageService,\n              private route: ActivatedRoute,\n              private router: Router) {\n    this.messageService.setMessageStore(msgStore, 'EN');\n  }\n\n  ngOnInit() {\n    this.searchTerms.pipe(\n      debounceTime(300),\n      distinctUntilChanged(),\n      switchMap((term: string) => this.entityService.listRelationship(term)),\n    ).subscribe(data => {\n      this.relationshipList = data;\n      let relationshipID;\n      if (this.route.snapshot.firstChild) {\n        relationshipID = this.route.snapshot.firstChild.paramMap.get('relationshipID');\n      }\n      if (relationshipID ) {\n        if (relationshipID === 'new') {\n          this._newRelationship();\n        } else {\n          this.onSelect(this.relationshipList.find(relationship => relationship.RELATIONSHIP_ID === relationshipID));\n        }\n      }\n    });\n    this.searchRelationship(''); // The initial list\n\n    this.modelService.theSelectedRelationship$.subscribe( data => {\n      if (this.theSelectedRelationship) {\n        this.theSelectedRelationship.RELATIONSHIP_ID = data['RELATIONSHIP_ID'];\n        this.theSelectedRelationship.RELATIONSHIP_DESC = data['RELATIONSHIP_DESC'];\n      }\n    });\n\n    this.modelService.dialogAnswer$.subscribe( answer => {\n      if (answer === 'OK' && this.relationshipList[0] && !this.relationshipList[0].CREATE_TIME) {\n        this.relationshipList.splice(0, 1); // Remove the first one.\n      } else if (answer === 'CANCEL') {\n        const relationshipID = this.route.snapshot.firstChild.paramMap.get('relationshipID');\n        if (relationshipID) {\n          if (relationshipID === 'new') {\n            this.onSelect(this.relationshipList[0]);\n          } else {\n            this.onSelect(this.relationshipList.find(relationship => relationship.RELATIONSHIP_ID === relationshipID));\n          }\n        }\n      }\n    });\n\n    this.modelService.isSearchListShown$.subscribe( data => this.isSearchListShown = data);\n  }\n\n  hideSearchList(): void {\n    this.isSearchListShown = false;\n    this.modelService.hideSearchList();\n  }\n\n  onSelect(relationship: RelationshipH): void {\n    if (relationship) {\n      this.theSelectedRelationship = relationship;\n      this.modelService.setSelectedRelationship(relationship);\n    }\n  }\n\n  searchRelationship(term: string): void {\n    this.searchTerms.next(term);\n  }\n\n  newRelationship(): void {\n    if (this.route.snapshot.firstChild && this.route.snapshot.firstChild.paramMap.get('relationshipID') === 'new') {\n      this.messageService.reportMessage('MODEL', 'UNSAVED_NEW', 'E');\n    } else {\n      this._newRelationship();\n      this.router.navigate(['/model/relationship/new']);\n    }\n  }\n\n  _newRelationship(): void {\n    this.theSelectedRelationship = new RelationshipH();\n    this.theSelectedRelationship.RELATIONSHIP_ID = 'new';\n    this.theSelectedRelationship.RELATIONSHIP_DESC = 'description';\n    this.theSelectedRelationship.VERSION_NO = 1;\n    this.theSelectedRelationship.LAST_CHANGE_BY = 'DH001';\n    this.theSelectedRelationship.LAST_CHANGE_TIME = new Date().toDateString();\n    this.modelService.setSelectedRelationship(this.theSelectedRelationship);\n    this.relationshipList.splice(0, 0, this.theSelectedRelationship);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZGVsL3JvbGUvcm9sZS1kZXRhaWwvcm9sZS1kZXRhaWwuY29tcG9uZW50LmNzcyJ9 */\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {RoleMeta} from 'jor-angular';\nimport {AbstractControl, FormArray, FormBuilder, FormControl, FormGroup} from '@angular/forms';\nimport {ActivatedRoute, ParamMap, Router} from '@angular/router';\nimport {Message, MessageService} from 'ui-message-angular';\nimport {ModelService} from '../../model.service';\nimport {DialogService} from '../../../dialog.service';\nimport {EntityService} from 'jor-angular';\nimport {msgStore} from '../../../msgStore';\nimport {switchMap} from 'rxjs/operators';\nimport {Observable, of} from 'rxjs';\nimport {UniqueRoleValidator} from '../../model-validators';\nimport {SearchHelp, SearchHelpMethod} from 'jor-angular';\nimport {SearchHelpComponent} from 'jor-angular';\nimport {AttributeMetaComponent} from '../../attribute-meta/attribute-meta.component';\n\n@Component({\n  selector: 'app-role-detail',\n  templateUrl: './role-detail.component.html',\n  styleUrls: ['./role-detail.component.css']\n})\nexport class RoleDetailComponent implements OnInit {\n  roleMeta: RoleMeta;\n  readonly = true;\n  isNewMode = false;\n  roleForm: FormGroup;\n  changedRole = {};\n  bypassProtection = false;\n  isSearchListShown = true;\n\n  @ViewChild(SearchHelpComponent, {static: false})\n  private searchHelpComponent!: SearchHelpComponent;\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private fb: FormBuilder,\n              private uniqueRoleValidator: UniqueRoleValidator,\n              private messageService: MessageService,\n              private modelService: ModelService,\n              private dialogService: DialogService,\n              private entityService: EntityService) {\n    this.messageService.setMessageStore(msgStore, 'EN');\n  }\n\n  get relationFormArray() {\n    return this.roleForm.get('RELATIONS') as FormArray;\n  }\n\n  ngOnInit() {\n    this.route.paramMap.pipe(\n      switchMap((params: ParamMap) => {\n        const roleID = params.get('roleID');\n        if (roleID === 'new') {\n          const role = new RoleMeta();\n          role.ROLE_ID = '';\n          role.ROLE_DESC = '';\n          role.RELATIONS = [];\n          this.isNewMode = true;\n          this.readonly = false;\n          this.bypassProtection = false;\n          return of(role);\n        } else {\n          this.readonly = true;\n          this.isNewMode = false;\n          return this.entityService.getRole(roleID);\n        }\n      })\n    ).subscribe(data => {\n      if ( 'msgName' in data) {\n        this.messageService.clearMessages();\n        this.roleMeta = null;\n        this.roleForm = null;\n        this.messageService.report(<Message>data);\n      } else {\n        this.messageService.clearMessages();\n        if (history.state.message) {\n          this.messageService.report(history.state.message);\n        }\n        this.roleMeta = <RoleMeta>data;\n        this._generateRoleForm();\n      }\n    });\n\n    this.modelService.isSearchListShown$.subscribe( data => this.isSearchListShown = data);\n  }\n\n  showSearchList(): void {\n    this.isSearchListShown = true;\n    this.modelService.showSearchList();\n  }\n\n  onSearchHelp(control: AbstractControl, rowID: number): void {\n    const searchHelpMeta = new SearchHelp();\n    searchHelpMeta.OBJECT_NAME = 'Relation';\n    searchHelpMeta.METHOD = function(entityService: EntityService): SearchHelpMethod {\n      return (searchTerm: string): Observable<object[]> => entityService.listRelation(searchTerm);\n    }(this.entityService);\n    searchHelpMeta.BEHAVIOUR = 'A';\n    searchHelpMeta.MULTI = false;\n    searchHelpMeta.FUZZY_SEARCH = true;\n    searchHelpMeta.FIELDS = [\n      {FIELD_NAME: 'RELATION_ID', FIELD_DESC: 'Relation', IMPORT: true, EXPORT: true, LIST_POSITION: 1, FILTER_POSITION: 0},\n      {FIELD_NAME: 'RELATION_DESC', FIELD_DESC: 'Description', IMPORT: true, EXPORT: true, LIST_POSITION: 2, FILTER_POSITION: 0}\n    ];\n    searchHelpMeta.READ_ONLY = this.readonly || this.oldRelation(control) && control.valid;\n\n    const afterExportFn = function (context: any, ruleIdx: number) {\n      return () => context.onChangeRelationID(ruleIdx, true);\n    }(this, rowID).bind(this);\n    this.searchHelpComponent.openSearchHelpModal(searchHelpMeta, control, afterExportFn);\n  }\n\n  _generateRoleForm(): void {\n    this.roleForm = this.fb.group({});\n    this.roleForm.addControl('ROLE_ID', new FormControl(this.roleMeta.ROLE_ID, {updateOn: 'blur'}));\n    if (this.isNewMode) {\n      this.roleForm.get('ROLE_ID').setValidators(this._validateRoleID);\n      this.roleForm.get('ROLE_ID').setAsyncValidators(this.uniqueRoleValidator.validate.bind(this.uniqueRoleValidator));\n    }\n    this.roleForm.addControl('ROLE_DESC', new FormControl(this.roleMeta.ROLE_DESC));\n\n    // Compose Involves\n    const formArray = [];\n    this.roleMeta.RELATIONS.forEach( relation => {\n      formArray.push(this.fb.group({\n        RELATION_ID: [relation.RELATION_ID],\n        RELATION_DESC: [relation.RELATION_DESC],\n        CARDINALITY: [{value: relation.CARDINALITY, disabled: this.readonly}]\n      }));\n    });\n    if (this.isNewMode) {\n      formArray.push(\n        this.fb.group({\n          RELATION_ID: [''],\n          RELATION_DESC: [''],\n          CARDINALITY: ['[0..1]']\n        }));\n    }\n    this.roleForm.addControl('RELATIONS', new FormArray(formArray));\n  }\n\n  _validateRoleID(c: FormControl) {\n    if (c.value.trim() === '') {\n      return {message: 'Role ID is mandatory'};\n    }\n\n    if (c.value.toString().toLowerCase() === 'new') {\n      return {message: '\"NEW/new\" is reserved, thus is not allowed to use!'};\n    }\n\n    return null;\n  }\n\n  switchEditDisplay() {\n    if (this.isNewMode) {\n      this.dialogService.confirm('Discard the new Role?').subscribe(confirm => {\n        if (confirm) {\n          this._switch2DisplayMode();\n          this.roleMeta = null;\n          this.modelService.sendDialogAnswer('OK');\n        } else {\n          this.modelService.sendDialogAnswer('CANCEL');\n        }\n      });\n      return;\n    }\n\n    if (!this.readonly) { // In Change Mode -> Display Mode\n      if (this.roleForm.dirty) {\n        this.dialogService.confirm('Discard changes?').subscribe(confirm => {\n          if (confirm) { // Discard changes and switch to Display Mode\n            this._generateRoleForm();\n            this.roleForm.reset(this.roleForm.value);\n            this._switch2DisplayMode();\n          }\n        });\n      } else { // Switch to display mode\n        this._switch2DisplayMode();\n      }\n    } else { // In Display Mode -> Change Mode\n      this.readonly = false;\n      this.relationFormArray.controls.forEach(relationFormGroup => {\n        relationFormGroup.get('CARDINALITY').enable();\n      });\n      this.relationFormArray.push(\n        this.fb.group({\n          RELATION_ID: [''],\n          RELATION_DESC: [''],\n          CARDINALITY: ['[0..1]']\n        })\n      );\n    }\n\n    this.messageService.clearMessages();\n  }\n\n  _switch2DisplayMode(): void {\n    this.readonly = true;\n    let lastIndex = this.relationFormArray.length - 1;\n    while (lastIndex >= 0 && this.relationFormArray.controls[lastIndex].get('ROLE_ID').value.trim() === '') {\n      this.relationFormArray.removeAt(lastIndex);\n      lastIndex--;\n    }\n    this.relationFormArray.controls.forEach(relationFormGroup => {\n      relationFormGroup.get('CARDINALITY').disable();\n    });\n  }\n\n  onChangeRoleID(): void {\n    this.modelService.updateRoleID(this.roleForm.get('ROLE_ID').value);\n  }\n\n  onChangeRoleDesc(): void {\n    this.modelService.updateRoleDesc(this.roleForm.get('ROLE_DESC').value);\n  }\n\n  deleteRelation(index: number): void {\n    if (index !== this.relationFormArray.length - 1) {\n      this.relationFormArray.removeAt(index);\n      this.relationFormArray.markAsDirty();\n    }\n  }\n\n  onChangeRelationID(index: number, isExportedFromSH?: boolean): void {\n    const currentRelationFormGroup = this.relationFormArray.controls[index];\n    if (this.relationFormArray.controls.findIndex((relationCtrl, i) =>\n      i !== index && relationCtrl.get('RELATION_ID').value === currentRelationFormGroup.get('RELATION_ID').value\n    ) !== -1) {\n      currentRelationFormGroup.get('RELATION_ID').setErrors({message: 'Duplicate Relations'});\n      return;\n    }\n\n    if (index === this.relationFormArray.length - 1 && currentRelationFormGroup.value.RELATION_ID.trim() !== '') {\n      // Only work for the last New line\n      this.relationFormArray.push(\n        this.fb.group({\n          RELATION_ID: [''],\n          RELATION_DESC: [''],\n          CARDINALITY: ['[0..1]']\n        })\n      );\n    }\n\n    if (!isExportedFromSH) {\n      this.entityService.getRelationDesc(currentRelationFormGroup.value.RELATION_ID).subscribe(data => {\n        if (data['msgCat']) {\n          currentRelationFormGroup.get('RELATION_ID').setErrors({message: data['msgShortText']});\n        } else {\n          currentRelationFormGroup.get('RELATION_DESC').setValue(data);\n        }\n      });\n    }\n  }\n\n  oldRelation(formGroup: AbstractControl): boolean {\n    return this.roleMeta.RELATIONS ?\n      this.roleMeta.RELATIONS.findIndex(\n        relation => relation.RELATION_ID === formGroup.get('RELATION_ID').value ) !== -1 :\n      false;\n  }\n\n  canDeactivate(): Observable<boolean> | boolean {\n    if (this.isNewMode || (!this.bypassProtection && this.roleForm && this.roleForm.dirty)) {\n      const dialogAnswer = this.dialogService.confirm('Discard changes?');\n      dialogAnswer.subscribe(confirm => {\n        if (confirm) {\n          this.modelService.sendDialogAnswer('OK');\n        } else {\n          this.modelService.sendDialogAnswer('CANCEL');\n        }\n      });\n      return dialogAnswer;\n    } else {\n      return true;\n    }\n  }\n\n  save(): void {\n    if (!this.roleForm.dirty) {\n      return this.messageService.reportMessage('MODEL', 'NO_CHANGE', 'S');\n    }\n\n    if (!this.roleForm.valid) {\n      return this.messageService.reportMessage('MODEL', 'INVALID_DATA', 'E');\n    }\n\n    if (this.isNewMode) {\n      this.changedRole['action'] = 'add';\n      this.changedRole['ROLE_ID'] = this.roleForm.controls['ROLE_ID'].value;\n    } else {\n      this.changedRole['action'] = 'update';\n      this.changedRole['ROLE_ID'] = this.roleMeta.ROLE_ID;\n    }\n    if (this.roleForm.controls['ROLE_DESC'].dirty) {\n      this.changedRole['ROLE_DESC'] = this.roleForm.controls['ROLE_DESC'].value;\n    }\n\n    this._processChangedRelation();\n\n    this.entityService.saveRole(this.changedRole)\n      .subscribe(data => this._postActivityAfterSavingRole(data));\n  }\n\n  _processChangedRelation(): void {\n    const changedRelations = [];\n    if (!this.relationFormArray.dirty) { return; }\n\n    this.changedRole['RELATIONS'] = changedRelations;\n\n    this.relationFormArray.controls.forEach(relationControl => {\n      if (relationControl.get('RELATION_ID').value.trim() === '') { return; }\n      let action;\n      const index = this.roleMeta.RELATIONS.findIndex(\n        relation => relationControl.get('RELATION_ID').value === relation.RELATION_ID);\n      if (index === -1) {// New Add Case\n        action = 'add';\n      } else {\n        if (relationControl.dirty) {// Change Case\n          action = 'update';\n        }\n      }\n      if (action) {\n        changedRelations.push({\n          action: action, RELATION_ID: relationControl.get('RELATION_ID').value, CARDINALITY: relationControl.get('CARDINALITY').value\n        });\n      }\n    });\n\n    // Deletion Case\n    this.roleMeta.RELATIONS.forEach(relation => {\n      const index = this.relationFormArray.controls.findIndex(\n        relationControl => relationControl.get('RELATION_ID').value === relation.RELATION_ID);\n      if (index === -1) { // The attribute must be deleted\n        const deletedRelation = {action: 'delete', RELATION_ID: relation.RELATION_ID};\n        changedRelations.push(deletedRelation);\n      }\n    });\n  }\n\n  _postActivityAfterSavingRole(data: any) {\n    this.changedRole = {};\n    if (data && data['ROLE_ID']) {\n      if (this.isNewMode) {\n        this.isNewMode = false;\n        this.bypassProtection = true;\n        this.router.navigate(['/model/role/' + data['ROLE_ID']],\n          {state: {message: this.messageService.generateMessage(\n                'MODEL', 'ROLE_SAVED', 'S', data['ROLE_ID'])}});\n      } else {\n        this.readonly = true;\n        this.roleMeta = data;\n        this._generateRoleForm();\n        this.messageService.reportMessage('MODEL', 'ROLE_SAVED', 'S', this.roleMeta.ROLE_ID);\n      }\n    } else {\n      if (data instanceof Array) {\n        data.forEach(err => this.messageService.add(err));\n      } else {\n        this.messageService.report(<Message>data);\n      }\n    }\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZGVsL3JvbGUvcm9sZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { RoleH} from 'jor-angular';\nimport {Subject} from 'rxjs';\nimport {EntityService} from 'jor-angular';\nimport {ModelService} from '../model.service';\nimport {MessageService} from 'ui-message-angular';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {msgStore} from '../../msgStore';\nimport {debounceTime, distinctUntilChanged, switchMap} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-role',\n  templateUrl: './role.component.html',\n  styleUrls: ['./role.component.css']\n})\nexport class RoleComponent implements OnInit {\n  roleList: RoleH[];\n  isSearchListShown = true;\n  private searchTerms = new Subject<string>();\n  private theSelectedRole: RoleH;\n\n  constructor(private entityService: EntityService,\n              private modelService: ModelService,\n              private messageService: MessageService,\n              private route: ActivatedRoute,\n              private router: Router) {\n    this.messageService.setMessageStore(msgStore, 'EN');\n  }\n\n  ngOnInit() {\n    this.searchTerms.pipe(\n      debounceTime(300),\n      distinctUntilChanged(),\n      switchMap((term: string) => this.entityService.listRole(term)),\n    ).subscribe(data => {\n      this.roleList = data;\n      let roleID;\n      if (this.route.snapshot.firstChild) {\n        roleID = this.route.snapshot.firstChild.paramMap.get('roleID');\n      }\n      if (roleID ) {\n        if (roleID === 'new') {\n          this._newRole();\n        } else {\n          this.onSelect(this.roleList.find(role => role.ROLE_ID === roleID ));\n        }\n      }\n    });\n    this.searchRole(''); // The initial list\n\n    this.modelService.theSelectedRole$.subscribe( data => {\n      if (this.theSelectedRole) {\n        this.theSelectedRole.ROLE_ID = data['ROLE_ID'];\n        this.theSelectedRole.ROLE_DESC = data['ROLE_DESC'];\n      }\n    });\n\n    this.modelService.dialogAnswer$.subscribe( answer => {\n      if (answer === 'OK' && this.roleList[0] && !this.roleList[0].CREATE_TIME) {\n        this.roleList.splice(0, 1); // Remove the first one.\n      } else if (answer === 'CANCEL') {\n        const roleID = this.route.snapshot.firstChild.paramMap.get('roleID');\n        if (roleID) {\n          if (roleID === 'new') {\n            this.onSelect(this.roleList[0]);\n          } else {\n            this.onSelect(this.roleList.find(role => role.ROLE_ID === roleID));\n          }\n        }\n      }\n    });\n\n    this.modelService.isSearchListShown$.subscribe( data => this.isSearchListShown = data);\n  }\n\n  onSelect(role: RoleH): void {\n    if (role) {\n      this.theSelectedRole = role;\n      this.modelService.setSelectedRole(role);\n    }\n  }\n\n  searchRole(term: string): void {\n    this.searchTerms.next(term);\n  }\n\n  hideSearchList(): void {\n    this.isSearchListShown = false;\n    this.modelService.hideSearchList();\n  }\n\n  newRole(): void {\n    if (this.route.snapshot.firstChild && this.route.snapshot.firstChild.paramMap.get('roleID') === 'new') {\n      this.messageService.reportMessage('MODEL', 'UNSAVED_NEW', 'E');\n    } else {\n      this._newRole();\n      this.router.navigate(['/model/role/new']);\n    }\n  }\n\n  _newRole(): void {\n    this.theSelectedRole = new RoleH();\n    this.theSelectedRole.ROLE_ID = 'new';\n    this.theSelectedRole.ROLE_DESC = 'description';\n    this.theSelectedRole.VERSION_NO = 1;\n    this.theSelectedRole.LAST_CHANGE_BY = 'DH001';\n    this.theSelectedRole.LAST_CHANGE_TIME = new Date().toDateString();\n    this.modelService.setSelectedRole(this.theSelectedRole);\n    this.roleList.splice(0, 0, this.theSelectedRole);\n  }\n\n}\n"],"sourceRoot":"webpack:///","file":"model-model-module-es5.js"}
{"version":3,"sources":["webpack:///dist/logon/__ivy_ngcc__/fesm2015/ui-logon-angular.js","webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/admin-info/admin-info.component.ts","webpack:///src/app/admin-info/admin-info.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app/app-detail/app-categories/app-categories.component.ts","webpack:///src/app/app/app-detail/app-categories/app-categories.component.html","webpack:///src/app/app/app-detail/app-detail.component.ts","webpack:///src/app/app/app-detail/app-detail.component.html","webpack:///src/app/app/app-detail/app-target/app-target.component.ts","webpack:///src/app/app/app-detail/app-target/app-target.component.html","webpack:///src/app/app/app-list/app-list.component.ts","webpack:///src/app/app/app-list/app-list.component.html","webpack:///src/app/app_category/app-category-detail/app-category-detail-app/app-category-detail-app.component.ts","webpack:///src/app/app_category/app-category-detail/app-category-detail-app/app-category-detail-app.component.html","webpack:///src/app/app_category/app-category-detail/app-category-detail-role/app-category-detail-role.component.ts","webpack:///src/app/app_category/app-category-detail/app-category-detail-role/app-category-detail-role.component.html","webpack:///src/app/app_category/app-category-detail/app-category-detail.component.ts","webpack:///src/app/app_category/app-category-detail/app-category-detail.component.html","webpack:///src/app/app_category/app-category-list/app-category-list.component.ts","webpack:///src/app/app_category/app-category-list/app-category-list.component.html","webpack:///src/app/async-validators.ts","webpack:///src/app/auth_object/auth-object-detail/auth-object-detail.component.ts","webpack:///src/app/auth_object/auth-object-detail/auth-object-detail.component.html","webpack:///src/app/auth_object/auth-object-detail/auth-object-field/auth-object-field.component.ts","webpack:///src/app/auth_object/auth-object-detail/auth-object-field/auth-object-field.component.html","webpack:///src/app/auth_object/auth-object-list/auth-object-list.component.ts","webpack:///src/app/auth_object/auth-object-list/auth-object-list.component.html","webpack:///src/app/authorization/auth-value/auth-value-selopts/auth-value-selopts.component.ts","webpack:///src/app/authorization/auth-value/auth-value-selopts/auth-value-selopts.component.html","webpack:///src/app/authorization/auth-value/auth-value-singles/auth-value-singles.component.ts","webpack:///src/app/authorization/auth-value/auth-value-singles/auth-value-singles.component.html","webpack:///src/app/authorization/auth-value/auth-value.component.ts","webpack:///src/app/authorization/auth-value/auth-value.component.html","webpack:///src/app/authorization/authorization.component.ts","webpack:///src/app/authorization/authorization.component.html","webpack:///src/app/custom.reuse.strategy.ts","webpack:///src/app/dialog.service.ts","webpack:///src/app/identity.service.ts","webpack:///src/app/identity.ts","webpack:///src/app/msgStore.ts","webpack:///src/app/permission/permission-detail/permission-detail-category/permission-detail-category.component.ts","webpack:///src/app/permission/permission-detail/permission-detail-category/permission-detail-category.component.html","webpack:///src/app/permission/permission-detail/permission-detail-profile/permission-detail-profile.component.ts","webpack:///src/app/permission/permission-detail/permission-detail-profile/permission-detail-profile.component.html","webpack:///src/app/permission/permission-detail/permission-detail-user/permission-detail-user.component.ts","webpack:///src/app/permission/permission-detail/permission-detail-user/permission-detail-user.component.html","webpack:///src/app/permission/permission-detail/permission-detail.component.ts","webpack:///src/app/permission/permission-detail/permission-detail.component.html","webpack:///src/app/permission/permission-list/permission-list.component.ts","webpack:///src/app/permission/permission-list/permission-list.component.html","webpack:///src/app/profile/profile-detail/profile-detail.component.ts","webpack:///src/app/profile/profile-detail/profile-detail.component.html","webpack:///src/app/profile/profile-list/profile-list.component.ts","webpack:///src/app/profile/profile-list/profile-list.component.html","webpack:///src/app/user/user-detail/user-address/user-address.component.ts","webpack:///src/app/user/user-detail/user-address/user-address.component.html","webpack:///src/app/user/user-detail/user-basic/user-basic.component.ts","webpack:///src/app/user/user-detail/user-basic/user-basic.component.html","webpack:///src/app/user/user-detail/user-detail.component.ts","webpack:///src/app/user/user-detail/user-detail.component.html","webpack:///src/app/user/user-detail/user-email/user-email.component.ts","webpack:///src/app/user/user-detail/user-email/user-email.component.html","webpack:///src/app/user/user-detail/user-personalization/user-personalization.component.ts","webpack:///src/app/user/user-detail/user-personalization/user-personalization.component.html","webpack:///src/app/user/user-detail/user-role/user-role.component.ts","webpack:///src/app/user/user-detail/user-role/user-role.component.html","webpack:///src/app/user/user-list/user-list.component.ts","webpack:///src/app/user/user-list/user-list.component.html","webpack:///src/app/work-protection.guard.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["_c0","_c1","LogonComponent_i_18_Template","rf","ctx","msgStore","msgCat","msgName","msgText","EN","shortText","longText","httpOptions","headers","LogonService","http","messageService","host","setMessageStore","userid","password","post","username","pipe","handleError","delete","get","queryObject","instanceGUID","operation","result","error","console","addMessage","Exception","JSON","stringify","ɵfac","LogonService_Factory","t","ctorParameters","type","ɵprov","factory","token","providedIn","User","PluralField","QueryObject","Projection","Selection","Sort","Session","LogonComponent","document","router","route","autofill","logonService","user","isWaiting","title","userLabel","pwdLabel","btnLabel","redirectUrl","redirectPath","monitor","inputUserID","nativeElement","inputPassword","snapshot","data","setHost","stopMonitoring","logon","subscribe","err","Array","isArray","forEach","add","report","displayName","locked","pwdState","name","navigateByUrl","location","href","LogonComponent_Factory","ɵcmp","selectors","viewQuery","LogonComponent_Query","_t","first","inputs","decls","vars","consts","template","LogonComponent_Template","LogonComponent_Template_form_ngSubmit_0_listener","$event","LogonComponent_Template_input_ngModelChange_8_listener","LogonComponent_Template_input_ngModelChange_13_listener","directives","styles","undefined","decorators","args","read","static","prototype","Object","LandingPageComponent","logout","session","ENTITY_ID","RELATION_ID","query","LandingPageComponent_Factory","LandingPageComponent_Template","LandingPageComponent_Template_button_click_3_listener","LandingPageComponent_Template_button_click_5_listener","LandingPageComponent_Template_button_click_7_listener","LandingPageComponent_Template_button_click_9_listener","pipes","encapsulation","LogonModule","ɵmod","ɵinj","LogonModule_Factory","imports","selector","ngJitMode","declarations","exports","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","id","AdminInfoComponent","attributeControlService","adminForm","mainForm","attrCtrls","toAttributeControl","relationMetas","find","relationMeta","adminRelation","ATTRIBUTES","fieldName","attrCtrl","templateUrl","styleUrls","AppComponent","entityService","identityService","setOriginalHost","originalHost","setSession","LANGUAGE","appRoutes","path","component","canDeactivate","redirectTo","pathMatch","AppModule","provide","useClass","forRoot","providers","bootstrap","AppCategoriesComponent","appCategoryFormArray","rowID","exportObject","afterExportFn","context","rowIDx","onChangeKey","bind","searchHelpComponent","openSearchHelpModalByEntity","readonly","AppDetailComponent","fb","dialogService","uiMapperService","isNewMode","originalValue","changedValue","tabStrip","paramMap","params","action","getRelationMetaOfEntity","_createNewEntity","getAppDetail","_generateMainForm","_switch2EditMode","_switch2DisplayMode","errorMessages","msg","tabStripID","dirty","confirm","reset","clearMessages","_setCheckBoxState","appIDCtrl","clearAsyncValidators","appCategoryArray","lastIndex","length","appCategoryGroup","at","invalid","value","ID","removeAt","markAsPristine","window","history","replaceState","setAsyncValidators","appDetail","APP_ID","NAME","ROUTE_LINK","IS_EXTERNAL","CREATED_BY","CREATE_TIME","CHANGED_BY","CHANGE_TIME","group","required","target","admin","parsedRelationship","_parseRelationships","addControl","array","appCategories","map","appCategory","appAuthObjects","appAuthObject","getRawValue","relationships","relationship","RELATIONSHIP_ID","__parseAppCategory","parseProfileAuthObject","values","push","RELATIONSHIP_INSTANCE_GUID","ORDER","app_category_INSTANCE_GUID","ICON","__parseAppAuthObject","authorization","parse","status","AuthFieldValue","findIndex","authValue","CHECKED","COLLAPSED","NODE_ID","STATUS","auth_object_INSTANCE_GUID","AUTH_VALUE","OBJ_NAME","DESC","ROW_TYPE","FIELD_NAME","DATA_ELEMENT","authObjectFields","value2","authFieldName","disable","enable","_composeChanges","save","appID","instance","_resetValue","reportMessage","USER_ID","CurrentTime","appAuthObjFormArray","composeAuthChanges","switchEditDisplay","AppTargetComponent","appTargetForm","AppListComponent","showDeletionConfirmation","apps","trim","appName","searchApps","Warning","messages","keyCode","search","navigate","toBeDeletedInstance","toBeDeletedInstanceGUID","ele","INSTANCE_GUID","errorMsg","enterSearch","new","cancelDeletion","confirmDeletion","AppCategoryDetailAppComponent","appFormArray","controls","ctrl","index","markAsDirty","currentFormGroup","isExisting","setErrors","message","portal_app_INSTANCE_GUID","getAppByID","setValue","key","existIndex","pristine","AppCategoryDetailRoleComponent","roleFormArray","AppCategoryDetailComponent","getAppCategoryDetail","appCategoryIDCtrl","appArray","appGroup","appCategoryDetail","TYPE","app","roles","role","__parseApp","__parseSystemRole","system_role_INSTANCE_GUID","DESCRIPTION","appCategoryID","composeChangedRelationship","ROLE_ID","AppCategoryListComponent","appCategoryName","searchAppCategories","existingUserNameValidator","userID","control","getUserByUserName","generateMessage","msgShortText","existingUserIDValidator","getUserByUserID","existingPermissionValidator","getPermissionByName","existingAppValidator","existingAuthObjectValidator","getAuthObjectByName","existingAppCategoryValidator","getAppCategoryByID","existingProfileValidator","getAuthProfileByName","AuthObjectDetailComponent","getAuthObjectDetail","authFieldArray","authFieldGroup","authObjCtrl","auth_field_INSTANCE_GUID","authObjectDetail","authFields","authField","__parseAuthField","authObjName","authFieldFormArray","AuthObjectFieldComponent","getAuthFieldInfo","AuthObjectListComponent","authObjects","authObjDesc","searchAuthObjects","AuthValueSeloptsComponent","operatorEnum","optionEnum","idx","selectOptionCtrl","selectOptionArray","Between","insert","Operator","Option","Include","Low","High","AuthValueSinglesComponent","singleValueArray","AuthValueComponent","authFieldValueForm","clear","fullPermission","authValues","getElementMeta","attribute","ATTR_GUID","ELEMENT_ID","ATTR_NAME","toSingleAttributeControl","highAttrCtrl","disabled","authValueArray","_setFullPermission","singleValues","selectOptions","hasErrors","singleValueCtrl","singleValue","selectOption","isFull","checkFullPermission","switchTabStrip","AuthorizationComponent","isAuthValueModalShown","isAuthObjectModalShown","selectAll","nodeID","authObjFormArray","ctrlName","currentAuthObjCtrl","newAuthFieldValueForm","authObjAttr","elementMeta","onChangeCategory","currentCtrl","parentNode","appAuthObjCtrl","currentAuthFieldValueForm","authValueComponent","generateAuthValue","_coordinateStatus","currentAuthObjForm","appAuthObjForm","parentAuthObjectCtrl","addAuthValue","closeAuthObjectModal","addAuthObject","CustomReuseStrategy","routesToCache","storedRouteHandles","Map","indexOf","routeConfig","handle","set","has","future","curr","DialogService","confirmation","IdentityService","pseudoNodeID","permissionID","permissionDesc","PROJECTION","FILTER","includes","OPERATOR","LOW","replace","SORT","permissionName","pieceObject","piece","RELATIONS","RELATIONSHIPS","PARTNER_ENTITY_PIECES","categoryID","profileName","profileDesc","PROFILE_NAME","userName","USER_NAME","roleID","operations","entity","put","entityGUID","authorizations","formArray","relationshipID","currentAuthObjectCtrl","isAuthorizationChanged","rowType","AuthObject","originalAuthObjValue","authObj","defaultSession","Date","PermissionList","UserList","AppList","AuthObjList","AuthProfileList","AppCategoryList","Authorization","SelectOption","PermissionDetailCategoryComponent","isCategoryModalShown","categoryFormArray","appCategoryCtrl","currentCategoryCtrl","categoryCtrl","newCategoryForm","auth_profile_INSTANCE_GUID","category","categoryAttr","appRelationship","appGUIDs","_generateProfile","profileCtrl","toUpperCase","appGUID","orchestrate","errs","rsAuthorization","concat","hasError","authFormArray","checkAll","closeCategoryModal","PermissionDetailProfileComponent","profileFormArray","onSelect","currentProfileFormGroup","PermissionDetailUserComponent","userFormArray","PermissionDetailComponent","getPermissionDetail","permissionNameCtrl","permissionDetail","DESCR","categories","profile","users","__parseRoleCategoryProfile","__parseRoleUsers","appCategoryInstance","PARTNER_INSTANCES","partnerInstance","authProfileInstance","rsAppCategory","SYNCED","log","results","msgType","originalProfile","noCommit","authProfile","onlySelf","rsCategory","filter","NO_EXISTING_CHECK","newProfilesIndex","replacements","movePath","toPath","PermissionListComponent","permissions","searchPermissions","toBeDeletedPermissionGUID","ProfileDetailComponent","getAuthProfileDetail","profileNameCtrl","profileDetail","authObject","__parseAuthObjects","authObjectFormArray","ProfileListComponent","authProfiles","searchAuthProfiles","UserAddressComponent","userAddressFormArray","userForm","addressFormGroup","ADDRESS_ID","ADDRESS_VALUE","POSTCODE","CITY","COUNTRY","PRIMARY","newPrimaryIndex","addAddress","UserBasicComponent","userBasicNamesForm","userBasicEmployeeForm","UserDetailComponent","originalUserValue","changedUser","_createNewUser","getUserDetail","_generateUserForm","userIDCtrl","userNameCtrl","emailArray","emailFormGroup","EMAIL","addressArray","roleArray","roleFormGroup","userDetail","LOCK","PWD_STATUS","DISPLAY_NAME","GIVEN_NAME","MIDDLE_NAME","FAMILY_NAME","TITLE","DEPARTMENT_ID","COMPANY_ID","GENDER","TIMEZONE","DECIMAL_FORMAT","DATE_FORMAT","userBasic","names","employee","emails","addresses","userPersonalization","userRole","email","address","userRoleRelationship","roleInstance","userEmailFormArray","userEmployeeForm","userPersonalizationForm","userEmailForm","userAddressForm","_composeChangesToUser","userData","_resetUserValue","SYSTEM_ACCESS","userBasicFormGroup","userBasicNamesFormGroup","composeChangedRelation","userBasicEmployeeFormGroup","composeChangedRelationArray","userPersonalizationFormGroup","userRoleFormArray","UserEmailComponent","addEmail","UserPersonalizationComponent","UserRoleComponent","onChangeRoleID","currentRole","oldRole","getRoleDesc","userRoleForm","ruleIdx","UserListComponent","searchUsers","toBeDeletedUser","toBeDeletedUserGUID","newUser","WorkProtectionGuard","currentRoute","currentState","nextState","environment","production","bootstrapModule","catch"],"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","file":"main-es5.js","sourcesContent":["import { __decorate, __metadata, __param } from 'tslib';\nimport { ɵɵdefineInjectable, ɵɵinject, Injectable, Inject, ViewChild, ElementRef, Input, Component, NgModule } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpClientModule } from '@angular/common/http';\nimport { messageType, MessageService, MessageModule } from 'ui-message-angular';\nimport { of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AutofillMonitor } from '@angular/cdk/text-field';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common/http';\nimport * as ɵngcc2 from 'ui-message-angular';\nimport * as ɵngcc3 from '@angular/router';\nimport * as ɵngcc4 from '@angular/cdk/text-field';\nimport * as ɵngcc5 from '@angular/forms';\nimport * as ɵngcc6 from '@angular/common';\n\nconst _c0 = [\"inputUserID\"];\nconst _c1 = [\"inputPassword\"];\nfunction LogonComponent_i_18_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"i\", 14);\n} }\nconst msgStore = [\n    { msgCat: 'EXCEPTION',\n        msgName: 'GENERIC',\n        msgText: {\n            EN: { shortText: 'Exception Occurs',\n                longText: '%s1' }\n        }\n    }\n];\n\nconst httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\nlet LogonService = class LogonService {\n    constructor(http, messageService) {\n        this.http = http;\n        this.messageService = messageService;\n        this.host = '';\n        this.messageService.setMessageStore(msgStore, 'EN');\n    }\n    setHost(host) {\n        this.host = host;\n    }\n    logon(userid, password) {\n        return this.http.post(this.host ? this.host + '/api/logon' : 'api/logon', { username: userid, password: password }, httpOptions).pipe(catchError(this.handleError('Logon')));\n    }\n    logout() {\n        return this.http.delete(this.host ? this.host + '/api/logout' : 'api/logout', httpOptions).pipe(catchError(this.handleError('Logout')));\n    }\n    session() {\n        return this.http.get(this.host ? this.host + '/api/session' : 'api/session', httpOptions).pipe(catchError(this.handleError('Get session')));\n    }\n    query(queryObject) {\n        return this.http.post(this.host ? this.host + '/api/query' : 'api/query', queryObject, httpOptions).pipe(catchError(this.handleError('query')));\n    }\n    read(instanceGUID) {\n        return this.http.get(this.host ? this.host + `/api/entity/instance/${instanceGUID}` : `api/entity/instance/${instanceGUID}`)\n            .pipe(catchError(this.handleError('read')));\n    }\n    handleError(operation = 'operation', result) {\n        return (error) => {\n            // TODO: send the error to remote logging infrastructure\n            console.error(error); // log to console instead\n            this.messageService.addMessage('EXCEPTION', 'GENERIC', messageType.Exception, JSON.stringify(error));\n            // Let the app keep running by returning an empty result.\n            return of(result);\n        };\n    }\n};\nLogonService.ɵfac = function LogonService_Factory(t) { return new (t || LogonService)(ɵngcc0.ɵɵinject(ɵngcc1.HttpClient), ɵngcc0.ɵɵinject(ɵngcc2.MessageService)); };\nLogonService.ctorParameters = () => [\n    { type: HttpClient },\n    { type: MessageService }\n];\nLogonService.ɵprov = ɵɵdefineInjectable({ factory: function LogonService_Factory() { return new LogonService(ɵɵinject(HttpClient), ɵɵinject(MessageService)); }, token: LogonService, providedIn: \"root\" });\nLogonService = __decorate([ __metadata(\"design:paramtypes\", [HttpClient,\n        MessageService])\n], LogonService);\n\nclass User {\n}\nclass PluralField {\n}\nclass QueryObject {\n}\nclass Projection {\n}\nclass Selection {\n}\nclass Sort {\n}\nclass Session {\n}\n\nlet LogonComponent = class LogonComponent {\n    constructor(document, router, route, autofill, logonService, messageService) {\n        this.document = document;\n        this.router = router;\n        this.route = route;\n        this.autofill = autofill;\n        this.logonService = logonService;\n        this.messageService = messageService;\n        this.user = new User;\n        this.isWaiting = false;\n        this.title = 'Logon Portal';\n        this.userLabel = 'User ID';\n        this.pwdLabel = 'Password';\n        this.btnLabel = 'Logon';\n        this.redirectUrl = '';\n        this.redirectPath = '';\n        this.host = '';\n    }\n    ngOnInit() {\n        this.autofill.monitor(this.inputUserID.nativeElement);\n        this.autofill.monitor(this.inputPassword.nativeElement);\n        if (this.route.snapshot.data['title']) {\n            this.title = this.route.snapshot.data['title'];\n        }\n        if (this.route.snapshot.data['userLabel']) {\n            this.userLabel = this.route.snapshot.data['userLabel'];\n        }\n        if (this.route.snapshot.data['pwdLabel']) {\n            this.pwdLabel = this.route.snapshot.data['pwdLabel'];\n        }\n        if (this.route.snapshot.data['btnLabel']) {\n            this.btnLabel = this.route.snapshot.data['btnLabel'];\n        }\n        if (this.route.snapshot.data['redirectUrl']) {\n            this.redirectUrl = this.route.snapshot.data['redirectUrl'];\n        }\n        if (this.route.snapshot.data['redirectPath']) {\n            this.redirectPath = this.route.snapshot.data['redirectPath'];\n        }\n        if (this.route.snapshot.data['host']) {\n            this.host = this.route.snapshot.data['host'];\n        }\n        this.logonService.setHost(this.host);\n    }\n    ngOnDestroy() {\n        this.autofill.stopMonitoring(this.inputUserID.nativeElement);\n        this.autofill.stopMonitoring(this.inputPassword.nativeElement);\n    }\n    logon() {\n        this.isWaiting = true;\n        this.logonService.logon(this.user.userid, this.user.password).subscribe(data => {\n            this.isWaiting = false;\n            if (!data) {\n                return;\n            }\n            if (data.err) {\n                if (Array.isArray(data.err)) {\n                    data.err.forEach(err => this.messageService.add(err));\n                }\n                else {\n                    this.messageService.report(data.err);\n                }\n            }\n            else {\n                this.user.displayName = data.user['DISPLAY_NAME'];\n                this.user.userid = data.user['USER_ID'];\n                this.user.username = data.user['USER_NAME'];\n                this.user.locked = data.user['LOCK'];\n                this.user.pwdState = data.user['PWD_STATE'];\n                this.user.name = data.user['GIVEN_NAME'];\n                if (this.redirectPath) {\n                    this.router.navigateByUrl(this.redirectPath);\n                }\n                else if (this.redirectUrl) {\n                    this.document.location.href = this.redirectUrl;\n                }\n            }\n        });\n    }\n};\nLogonComponent.ɵfac = function LogonComponent_Factory(t) { return new (t || LogonComponent)(ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Router), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.ActivatedRoute), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.AutofillMonitor), ɵngcc0.ɵɵdirectiveInject(LogonService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.MessageService)); };\nLogonComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: LogonComponent, selectors: [[\"dk-logon\"]], viewQuery: function LogonComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(_c0, true, ElementRef);\n        ɵngcc0.ɵɵstaticViewQuery(_c1, true, ElementRef);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.inputUserID = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.inputPassword = _t.first);\n    } }, inputs: { title: \"title\", userLabel: \"userLabel\", pwdLabel: \"pwdLabel\", btnLabel: \"btnLabel\", redirectUrl: \"redirectUrl\", redirectPath: \"redirectPath\", host: \"host\" }, decls: 20, vars: 8, consts: [[1, \"dk-form-logon\", 3, \"ngSubmit\"], [3, \"disabled\"], [1, \"text-center\", \"dk-mb-4\"], [1, \"dk-form-title\", \"dk-mb-3\", \"font-weight-normal\"], [1, \"dk-message-area\"], [1, \"dk-form-label-group\"], [\"type\", \"text\", \"id\", \"inputUserID\", \"name\", \"inputUserID\", \"placeholder\", \"User ID\", \"required\", \"\", \"autofocus\", \"\", 1, \"form-control\", \"dk-form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"inputUserID\", \"\"], [\"for\", \"inputUserID\"], [\"type\", \"password\", \"id\", \"inputPassword\", \"name\", \"inputPassword\", \"placeholder\", \"Password\", \"required\", \"\", 1, \"form-control\", \"dk-form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"inputPassword\", \"\"], [\"for\", \"inputPassword\"], [\"type\", \"submit\", 1, \"btn\", \"dk-btn-lg\", \"btn-primary\", \"btn-block\"], [\"class\", \"fas fa-spinner fa-spin\", 4, \"ngIf\"], [1, \"fas\", \"fa-spinner\", \"fa-spin\"]], template: function LogonComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"form\", 0);\n        ɵngcc0.ɵɵlistener(\"ngSubmit\", function LogonComponent_Template_form_ngSubmit_0_listener($event) { return ctx.logon(); });\n        ɵngcc0.ɵɵelementStart(1, \"fieldset\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"h1\", 3);\n        ɵngcc0.ɵɵtext(4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"div\", 4);\n        ɵngcc0.ɵɵelement(6, \"dk-message\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(7, \"div\", 5);\n        ɵngcc0.ɵɵelementStart(8, \"input\", 6, 7);\n        ɵngcc0.ɵɵlistener(\"ngModelChange\", function LogonComponent_Template_input_ngModelChange_8_listener($event) { return ctx.user.userid = $event; });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(10, \"label\", 8);\n        ɵngcc0.ɵɵtext(11);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(12, \"div\", 5);\n        ɵngcc0.ɵɵelementStart(13, \"input\", 9, 10);\n        ɵngcc0.ɵɵlistener(\"ngModelChange\", function LogonComponent_Template_input_ngModelChange_13_listener($event) { return ctx.user.password = $event; });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(15, \"label\", 11);\n        ɵngcc0.ɵɵtext(16);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(17, \"button\", 12);\n        ɵngcc0.ɵɵtemplate(18, LogonComponent_i_18_Template, 1, 0, \"i\", 13);\n        ɵngcc0.ɵɵtext(19);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"disabled\", ctx.isWaiting);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵtextInterpolate(ctx.title);\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"ngModel\", ctx.user.userid);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵtextInterpolate(ctx.userLabel);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngModel\", ctx.user.password);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵtextInterpolate(ctx.pwdLabel);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isWaiting);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx.btnLabel, \" \");\n    } }, directives: [ɵngcc5.ɵangular_packages_forms_forms_y, ɵngcc5.NgControlStatusGroup, ɵngcc5.NgForm, ɵngcc2.MessageComponent, ɵngcc5.DefaultValueAccessor, ɵngcc5.RequiredValidator, ɵngcc5.NgControlStatus, ɵngcc5.NgModel, ɵngcc6.NgIf], styles: [\".dk-form-logon[_ngcontent-%COMP%]{width:100%;max-width:420px;padding:15px;margin:0 auto;line-height:1.5;--input-padding-x:0.75rem;--input-padding-y:0.75rem}.dk-form-logon[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{margin-bottom:.5rem;font-size:1rem}.dk-message-area[_ngcontent-%COMP%]{margin-bottom:.5rem}.dk-mb-3[_ngcontent-%COMP%]{margin-bottom:1rem}.dk-mb-4[_ngcontent-%COMP%]{margin-bottom:1.5rem}.dk-form-title[_ngcontent-%COMP%]{font-size:1.75rem;line-height:1.2;color:inherit;font-family:inherit}.dk-form-label-group[_ngcontent-%COMP%]{position:relative;margin-bottom:1rem}.dk-form-control[_ngcontent-%COMP%]{font-size:1rem;border-radius:.25rem;height:calc(2.9rem + 2px)}.dk-form-label-group[_ngcontent-%COMP%] > input[_ngcontent-%COMP%], .dk-form-label-group[_ngcontent-%COMP%] > label[_ngcontent-%COMP%]{padding:var(--input-padding-y) var(--input-padding-x)}.dk-form-label-group[_ngcontent-%COMP%] > label[_ngcontent-%COMP%]{position:absolute;top:0;left:0;display:block;width:100%;margin-bottom:0;line-height:1.5;color:#495057;border:1px solid transparent;border-radius:.25rem;-webkit-transition:.1s ease-in-out;transition:.1s ease-in-out}.dk-form-label-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]::-webkit-input-placeholder{color:transparent}.dk-form-label-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:-ms-input-placeholder{color:transparent}.dk-form-label-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]::-ms-input-placeholder{color:transparent}.dk-form-label-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]::-moz-placeholder{color:transparent}.dk-form-label-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]::placeholder{color:transparent}.dk-form-label-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:-webkit-autofill{-webkit-animation-name:cdk-text-field-autofill-start;animation-name:cdk-text-field-autofill-start;-webkit-transition:background-color 50000s ease-in-out;transition:background-color 50000s ease-in-out}.dk-form-label-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:not(:-webkit-autofill){-webkit-animation-name:cdk-text-field-autofill-end;animation-name:cdk-text-field-autofill-end}.dk-form-label-group[_ngcontent-%COMP%]   input.cdk-text-field-autofilled[_ngcontent-%COMP%], .dk-form-label-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:not(:placeholder-shown){padding-top:calc(var(--input-padding-y) + var(--input-padding-y) * (2 / 3));padding-bottom:calc(var(--input-padding-y)/ 3)}.dk-form-label-group[_ngcontent-%COMP%]   input.cdk-text-field-autofilled[_ngcontent-%COMP%] ~ label[_ngcontent-%COMP%], .dk-form-label-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:not(:placeholder-shown) ~ label[_ngcontent-%COMP%]{padding-top:calc(var(--input-padding-y)/ 3);padding-bottom:calc(var(--input-padding-y)/ 3);font-size:.75rem;color:#777}.dk-btn-lg[_ngcontent-%COMP%]{padding:.5rem 1rem;font-size:1.25rem;line-height:1.5;border-radius:.3rem}\"] });\nLogonComponent.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Router },\n    { type: ActivatedRoute },\n    { type: AutofillMonitor },\n    { type: LogonService },\n    { type: MessageService }\n];\n__decorate([\n    ViewChild('inputUserID', { read: ElementRef, static: true }),\n    __metadata(\"design:type\", ElementRef)\n], LogonComponent.prototype, \"inputUserID\", void 0);\n__decorate([\n    ViewChild('inputPassword', { read: ElementRef, static: true }),\n    __metadata(\"design:type\", ElementRef)\n], LogonComponent.prototype, \"inputPassword\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], LogonComponent.prototype, \"title\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], LogonComponent.prototype, \"userLabel\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], LogonComponent.prototype, \"pwdLabel\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], LogonComponent.prototype, \"btnLabel\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], LogonComponent.prototype, \"redirectUrl\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], LogonComponent.prototype, \"redirectPath\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], LogonComponent.prototype, \"host\", void 0);\nLogonComponent = __decorate([ __param(0, Inject(DOCUMENT)),\n    __metadata(\"design:paramtypes\", [Object, Router,\n        ActivatedRoute,\n        AutofillMonitor,\n        LogonService,\n        MessageService])\n], LogonComponent);\n\nlet LandingPageComponent = class LandingPageComponent {\n    constructor(router, logonService) {\n        this.router = router;\n        this.logonService = logonService;\n    }\n    ngOnInit() {\n    }\n    logout() {\n        this.logonService.logout().subscribe(data => {\n            this.router.navigateByUrl('');\n        });\n    }\n    session() {\n        this.logonService.session().subscribe(data => {\n            this.result = data;\n        });\n    }\n    query() {\n        const queryObject = {\n            ENTITY_ID: 'person',\n            RELATION_ID: 'r_user'\n        };\n        this.logonService.query(queryObject).subscribe(data => this.result = data);\n    }\n    read() {\n        this.logonService.read('2FBE7490E10F11E8A90957FA46F2CECA').subscribe(data => this.result = data);\n    }\n};\nLandingPageComponent.ɵfac = function LandingPageComponent_Factory(t) { return new (t || LandingPageComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Router), ɵngcc0.ɵɵdirectiveInject(LogonService)); };\nLandingPageComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: LandingPageComponent, selectors: [[\"dk-landing-page\"]], decls: 15, vars: 3, consts: [[\"role\", \"group\", 1, \"btn-group\"], [\"type\", \"button\", 1, \"btn\", \"dk-btn-lg\", \"btn-primary\", 3, \"click\"], [1, \"container\"]], template: function LandingPageComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"h4\");\n        ɵngcc0.ɵɵtext(1, \" Logon Successfully\\n\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(2, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(3, \"button\", 1);\n        ɵngcc0.ɵɵlistener(\"click\", function LandingPageComponent_Template_button_click_3_listener($event) { return ctx.logout(); });\n        ɵngcc0.ɵɵtext(4, \"Logout\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"button\", 1);\n        ɵngcc0.ɵɵlistener(\"click\", function LandingPageComponent_Template_button_click_5_listener($event) { return ctx.session(); });\n        ɵngcc0.ɵɵtext(6, \"Get Session\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(7, \"button\", 1);\n        ɵngcc0.ɵɵlistener(\"click\", function LandingPageComponent_Template_button_click_7_listener($event) { return ctx.query(); });\n        ɵngcc0.ɵɵtext(8, \"Query\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(9, \"button\", 1);\n        ɵngcc0.ɵɵlistener(\"click\", function LandingPageComponent_Template_button_click_9_listener($event) { return ctx.read(); });\n        ɵngcc0.ɵɵtext(10, \"Read\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(11, \"div\", 2);\n        ɵngcc0.ɵɵelementStart(12, \"pre\");\n        ɵngcc0.ɵɵtext(13);\n        ɵngcc0.ɵɵpipe(14, \"json\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(13);\n        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(14, 1, ctx.result));\n    } }, pipes: [ɵngcc6.JsonPipe], encapsulation: 2 });\nLandingPageComponent.ctorParameters = () => [\n    { type: Router },\n    { type: LogonService }\n];\nLandingPageComponent = __decorate([ __metadata(\"design:paramtypes\", [Router,\n        LogonService])\n], LandingPageComponent);\n\nlet LogonModule = class LogonModule {\n};\nLogonModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: LogonModule });\nLogonModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function LogonModule_Factory(t) { return new (t || LogonModule)(); }, imports: [[\n            CommonModule,\n            BrowserModule,\n            FormsModule,\n            HttpClientModule,\n            MessageModule\n        ]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LogonService, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.HttpClient }, { type: ɵngcc2.MessageService }]; }, null); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LogonComponent, [{\n        type: Component,\n        args: [{\n                selector: 'dk-logon',\n                template: \"<form class=\\\"dk-form-logon\\\" (ngSubmit)=\\\"logon()\\\">\\n  <fieldset [disabled]=\\\"isWaiting\\\">\\n    <div class=\\\"text-center dk-mb-4\\\">\\n      <!--<img class=\\\"mb-4\\\" src=\\\"https://getbootstrap.com/assets/brand/bootstrap-solid.svg\\\" alt=\\\"\\\" width=\\\"72\\\" height=\\\"72\\\">-->\\n      <h1 class=\\\"dk-form-title dk-mb-3 font-weight-normal\\\">{{title}}</h1>\\n    </div>\\n\\n    <div class=\\\"dk-message-area\\\">\\n      <dk-message></dk-message>\\n    </div>\\n\\n    <div class=\\\"dk-form-label-group\\\">\\n      <input type=\\\"text\\\" id=\\\"inputUserID\\\" name=\\\"inputUserID\\\" #inputUserID class=\\\"form-control dk-form-control\\\"\\n             [(ngModel)]=\\\"user.userid\\\" placeholder=\\\"User ID\\\" required=\\\"\\\" autofocus=\\\"\\\">\\n      <label for=\\\"inputUserID\\\">{{userLabel}}</label>\\n    </div>\\n\\n    <div class=\\\"dk-form-label-group\\\">\\n      <input type=\\\"password\\\" id=\\\"inputPassword\\\" name=\\\"inputPassword\\\" #inputPassword class=\\\"form-control dk-form-control\\\"\\n             [(ngModel)]=\\\"user.password\\\" placeholder=\\\"Password\\\" required=\\\"\\\">\\n      <label for=\\\"inputPassword\\\">{{pwdLabel}}</label>\\n    </div>\\n\\n    <button class=\\\"btn dk-btn-lg btn-primary btn-block\\\" type=\\\"submit\\\">\\n      <i *ngIf=\\\"isWaiting\\\" class=\\\"fas fa-spinner fa-spin\\\"></i> {{btnLabel}}\\n    </button>\\n  </fieldset>\\n</form>\\n\\n\",\n                styles: [\".dk-form-logon{width:100%;max-width:420px;padding:15px;margin:0 auto;line-height:1.5;--input-padding-x:0.75rem;--input-padding-y:0.75rem}.dk-form-logon label{margin-bottom:.5rem;font-size:1rem}.dk-message-area{margin-bottom:.5rem}.dk-mb-3{margin-bottom:1rem}.dk-mb-4{margin-bottom:1.5rem}.dk-form-title{font-size:1.75rem;line-height:1.2;color:inherit;font-family:inherit}.dk-form-label-group{position:relative;margin-bottom:1rem}.dk-form-control{font-size:1rem;border-radius:.25rem;height:calc(2.9rem + 2px)}.dk-form-label-group>input,.dk-form-label-group>label{padding:var(--input-padding-y) var(--input-padding-x)}.dk-form-label-group>label{position:absolute;top:0;left:0;display:block;width:100%;margin-bottom:0;line-height:1.5;color:#495057;border:1px solid transparent;border-radius:.25rem;-webkit-transition:.1s ease-in-out;transition:.1s ease-in-out}.dk-form-label-group input::-webkit-input-placeholder{color:transparent}.dk-form-label-group input:-ms-input-placeholder{color:transparent}.dk-form-label-group input::-ms-input-placeholder{color:transparent}.dk-form-label-group input::-moz-placeholder{color:transparent}.dk-form-label-group input::placeholder{color:transparent}.dk-form-label-group input:-webkit-autofill{-webkit-animation-name:cdk-text-field-autofill-start;animation-name:cdk-text-field-autofill-start;-webkit-transition:background-color 50000s ease-in-out;transition:background-color 50000s ease-in-out}.dk-form-label-group input:not(:-webkit-autofill){-webkit-animation-name:cdk-text-field-autofill-end;animation-name:cdk-text-field-autofill-end}.dk-form-label-group input.cdk-text-field-autofilled,.dk-form-label-group input:not(:placeholder-shown){padding-top:calc(var(--input-padding-y) + var(--input-padding-y) * (2 / 3));padding-bottom:calc(var(--input-padding-y)/ 3)}.dk-form-label-group input.cdk-text-field-autofilled~label,.dk-form-label-group input:not(:placeholder-shown)~label{padding-top:calc(var(--input-padding-y)/ 3);padding-bottom:calc(var(--input-padding-y)/ 3);font-size:.75rem;color:#777}.dk-btn-lg{padding:.5rem 1rem;font-size:1.25rem;line-height:1.5;border-radius:.3rem}\"]\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc3.Router }, { type: ɵngcc3.ActivatedRoute }, { type: ɵngcc4.AutofillMonitor }, { type: LogonService }, { type: ɵngcc2.MessageService }]; }, { title: [{\n            type: Input\n        }], userLabel: [{\n            type: Input\n        }], pwdLabel: [{\n            type: Input\n        }], btnLabel: [{\n            type: Input\n        }], redirectUrl: [{\n            type: Input\n        }], redirectPath: [{\n            type: Input\n        }], host: [{\n            type: Input\n        }], inputUserID: [{\n            type: ViewChild,\n            args: ['inputUserID', { read: ElementRef, static: true }]\n        }], inputPassword: [{\n            type: ViewChild,\n            args: ['inputPassword', { read: ElementRef, static: true }]\n        }] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LandingPageComponent, [{\n        type: Component,\n        args: [{\n                selector: 'dk-landing-page',\n                template: \"<h4>\\n  Logon Successfully\\n</h4>\\n\\n<div class=\\\"btn-group\\\" role=\\\"group\\\">\\n  <button type=\\\"button\\\" class=\\\"btn dk-btn-lg btn-primary\\\" (click)=\\\"logout()\\\">Logout</button>\\n  <button type=\\\"button\\\" class=\\\"btn dk-btn-lg btn-primary\\\" (click)=\\\"session()\\\">Get Session</button>\\n  <button type=\\\"button\\\" class=\\\"btn dk-btn-lg btn-primary\\\" (click)=\\\"query()\\\">Query</button>\\n  <button type=\\\"button\\\" class=\\\"btn dk-btn-lg btn-primary\\\" (click)=\\\"read()\\\">Read</button>\\n</div>\\n<div class=\\\"container\\\">\\n  <pre>{{result | json}}</pre>\\n</div>\\n\"\n            }]\n    }], function () { return [{ type: ɵngcc3.Router }, { type: LogonService }]; }, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(LogonModule, { declarations: function () { return [LogonComponent,\n        LandingPageComponent]; }, imports: function () { return [CommonModule,\n        BrowserModule,\n        FormsModule,\n        HttpClientModule,\n        MessageModule]; }, exports: function () { return [LogonComponent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LogonModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    BrowserModule,\n                    FormsModule,\n                    HttpClientModule,\n                    MessageModule\n                ],\n                declarations: [LogonComponent, LandingPageComponent],\n                exports: [LogonComponent]\n            }]\n    }], null, null); })();\n\n/*\n * Public API Surface of logon\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { LandingPageComponent, LogonComponent, LogonModule, LogonService, PluralField, Projection, QueryObject, Selection, Session, Sort, User };\n\n//# sourceMappingURL=ui-logon-angular.js.map","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {Component, Input, OnInit} from '@angular/core';\nimport {FormGroup} from '@angular/forms';\nimport {AttributeBase, AttributeControlService, RelationMeta} from 'jor-angular';\n\n@Component({\n  selector: 'app-admin-info',\n  templateUrl: './admin-info.component.html',\n  styleUrls: ['./admin-info.component.css']\n})\nexport class AdminInfoComponent implements OnInit {\n  @Input() mainForm: FormGroup;\n  @Input() relationMetas: RelationMeta[];\n  @Input() adminRelation: string;\n  private attrCtrls: AttributeBase[];\n  adminForm: FormGroup;\n\n  constructor(private attributeControlService: AttributeControlService) { }\n\n  ngOnInit() {\n    this.adminForm = this.mainForm.get('admin') as FormGroup;\n    this.attrCtrls = this.attributeControlService.toAttributeControl(\n      this.relationMetas.find( relationMeta => relationMeta.RELATION_ID === this.adminRelation).ATTRIBUTES);\n  }\n\n  getAttrCtrlFromID(fieldName: string): AttributeBase {\n    return this.attrCtrls.find( attrCtrl => attrCtrl.name === fieldName);\n  }\n\n}\n","<form class=\"mt-4 ml-2 row\">\n  <dk-app-attribute-form2 class=\"col-md-6 col-lg-4 dk-form-label\"\n                          [attributeControl]=\"getAttrCtrlFromID('CREATED_BY')\"\n                          [formGroup]=\"adminForm\"\n                          [isSmallSize] = \"true\"\n                          [readonly]=\"true\">\n  </dk-app-attribute-form2>\n  <dk-app-attribute-form2 class=\"col-md-6 col-lg-4 dk-form-label\"\n                          [attributeControl]=\"getAttrCtrlFromID('CREATE_TIME')\"\n                          [formGroup]=\"adminForm\"\n                          [isSmallSize] = \"true\"\n                          [readonly]=\"true\">\n  </dk-app-attribute-form2>\n  <dk-app-attribute-form2 class=\"col-md-6 col-lg-4 dk-form-label\"\n                          [attributeControl]=\"getAttrCtrlFromID('CHANGED_BY')\"\n                          [formGroup]=\"adminForm\"\n                          [isSmallSize] = \"true\"\n                          [readonly]=\"true\">\n  </dk-app-attribute-form2>\n  <dk-app-attribute-form2 class=\"col-md-6 col-lg-4 dk-form-label\"\n                          [attributeControl]=\"getAttrCtrlFromID('CHANGE_TIME')\"\n                          [formGroup]=\"adminForm\"\n                          [isSmallSize] = \"true\"\n                          [readonly]=\"true\">\n  </dk-app-attribute-form2>\n</form>\n","import { Component } from '@angular/core';\nimport { EntityService } from 'jor-angular';\nimport {environment} from '../environments/environment';\nimport {LogonService} from 'ui-logon-angular';\nimport {IdentityService} from './identity.service';\nimport {msgStore} from './msgStore';\nimport {MessageService} from 'ui-message-angular';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  constructor(private entityService: EntityService,\n              private identityService: IdentityService,\n              private messageService: MessageService,\n              private logonService: LogonService) {\n    this.entityService.setOriginalHost(environment.originalHost);\n    this.logonService.setHost(environment.originalHost);\n    this.logonService.session().subscribe( data => {\n      this.identityService.setSession( data );\n      this.messageService.setMessageStore(msgStore, this.identityService.Session.LANGUAGE);\n    });\n  }\n}\n","<div class=\"dk-logon-view\">\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport {RouteReuseStrategy, RouterModule, Routes} from '@angular/router';\nimport {LogonComponent, LandingPageComponent} from 'ui-logon-angular';\nimport {LogonModule} from 'ui-logon-angular';\nimport {environment} from '../environments/environment';\nimport { PermissionListComponent } from './permission/permission-list/permission-list.component';\nimport { PermissionDetailComponent } from './permission/permission-detail/permission-detail.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MessageModule} from 'ui-message-angular';\nimport {WorkProtectionGuard} from './work-protection.guard';\nimport {JorAngularModule} from 'jor-angular';\nimport { AppListComponent } from './app/app-list/app-list.component';\nimport { AppDetailComponent } from './app/app-detail/app-detail.component';\nimport { AppTargetComponent } from './app/app-detail/app-target/app-target.component';\nimport { AppCategoriesComponent } from './app/app-detail/app-categories/app-categories.component';\nimport { AuthObjectListComponent } from './auth_object/auth-object-list/auth-object-list.component';\nimport { AuthObjectDetailComponent } from './auth_object/auth-object-detail/auth-object-detail.component';\nimport { AuthObjectFieldComponent } from './auth_object/auth-object-detail/auth-object-field/auth-object-field.component';\nimport { AdminInfoComponent } from './admin-info/admin-info.component';\nimport { AuthorizationComponent } from './authorization/authorization.component';\nimport { AuthValueComponent } from './authorization/auth-value/auth-value.component';\nimport { AuthValueSinglesComponent } from './authorization/auth-value/auth-value-singles/auth-value-singles.component';\nimport { AuthValueSeloptsComponent } from './authorization/auth-value/auth-value-selopts/auth-value-selopts.component';\nimport { AppCategoryListComponent } from './app_category/app-category-list/app-category-list.component';\nimport { AppCategoryDetailComponent } from './app_category/app-category-detail/app-category-detail.component';\nimport { AppCategoryDetailAppComponent } from\n    './app_category/app-category-detail/app-category-detail-app/app-category-detail-app.component';\nimport { AppCategoryDetailRoleComponent } from\n    './app_category/app-category-detail/app-category-detail-role/app-category-detail-role.component';\nimport { ProfileListComponent } from './profile/profile-list/profile-list.component';\nimport { ProfileDetailComponent } from './profile/profile-detail/profile-detail.component';\nimport { PermissionDetailCategoryComponent } from './permission/permission-detail/permission-detail-category/permission-detail-category.component';\nimport { PermissionDetailProfileComponent } from './permission/permission-detail/permission-detail-profile/permission-detail-profile.component';\nimport { PermissionDetailUserComponent } from './permission/permission-detail/permission-detail-user/permission-detail-user.component';\nimport {UserListComponent} from './user/user-list/user-list.component';\nimport {UserDetailComponent} from './user/user-detail/user-detail.component';\nimport {UserBasicComponent} from './user/user-detail/user-basic/user-basic.component';\nimport {UserPersonalizationComponent} from './user/user-detail/user-personalization/user-personalization.component';\nimport {UserRoleComponent} from './user/user-detail/user-role/user-role.component';\nimport {UserEmailComponent} from './user/user-detail/user-email/user-email.component';\nimport {UserAddressComponent} from './user/user-detail/user-address/user-address.component';\nimport {CustomReuseStrategy} from './custom.reuse.strategy';\n\nconst appRoutes: Routes = [\n  {\n    path: 'logon', component: LogonComponent,\n    data: {\n      title: 'Logon Portal (DH001/Dark1234)', userLabel: 'User ID', pwdLabel: 'Password', btnLabel: 'Sign In',\n      redirectPath: environment.redirectPath, redirectUrl: environment.redirectUrl, host: environment.originalHost\n    }\n  },\n  { path: 'landing', component: LandingPageComponent },\n  { path: 'users', component: UserListComponent},\n  { path: 'users/:userID', component: UserDetailComponent, canDeactivate: [WorkProtectionGuard]},\n  { path: 'apps', component: AppListComponent },\n  { path: 'apps/:appID', component: AppDetailComponent, canDeactivate: [WorkProtectionGuard]},\n  { path: 'app-categories', component: AppCategoryListComponent },\n  { path: 'app-categories/:appCategory', component: AppCategoryDetailComponent, canDeactivate: [WorkProtectionGuard]},\n  { path: 'auth-objects', component: AuthObjectListComponent },\n  { path: 'auth-objects/:authObjName', component: AuthObjectDetailComponent, canDeactivate: [WorkProtectionGuard]},\n  { path: 'permissions', component: PermissionListComponent },\n  { path: 'permissions/:permissionName', component: PermissionDetailComponent, canDeactivate: [WorkProtectionGuard]},\n  { path: 'profiles', component: ProfileListComponent },\n  { path: 'profiles/:profileName', component: ProfileDetailComponent, canDeactivate: [WorkProtectionGuard]},\n  { path: '**', redirectTo: 'logon', pathMatch: 'full'}\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserListComponent,\n    UserDetailComponent,\n    UserBasicComponent,\n    UserPersonalizationComponent,\n    UserRoleComponent,\n    UserEmailComponent,\n    UserAddressComponent,\n    AppListComponent,\n    AppDetailComponent,\n    AppTargetComponent,\n    AppCategoriesComponent,\n    AuthObjectListComponent,\n    AuthObjectDetailComponent,\n    AuthObjectFieldComponent,\n    AdminInfoComponent,\n    AuthorizationComponent,\n    AuthValueComponent,\n    AuthValueSinglesComponent,\n    AuthValueSeloptsComponent,\n    AppCategoryListComponent,\n    AppCategoryDetailComponent,\n    AppCategoryDetailAppComponent,\n    AppCategoryDetailRoleComponent,\n    ProfileListComponent,\n    ProfileDetailComponent,\n    PermissionListComponent,\n    PermissionDetailComponent,\n    PermissionDetailCategoryComponent,\n    PermissionDetailProfileComponent,\n    PermissionDetailUserComponent\n  ],\n  imports: [\n    BrowserModule,\n    LogonModule,\n    RouterModule.forRoot(appRoutes),\n    FormsModule,\n    ReactiveFormsModule,\n    MessageModule,\n    JorAngularModule\n  ],\n  providers: [\n    {provide: RouteReuseStrategy, useClass: CustomReuseStrategy}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {AbstractControl, FormArray, FormGroup} from '@angular/forms';\nimport {SearchHelpComponent} from 'jor-angular';\n\n@Component({\n  selector: 'app-app-categories',\n  templateUrl: './app-categories.component.html',\n  styleUrls: ['./app-categories.component.css']\n})\nexport class AppCategoriesComponent implements OnInit {\n  @Input() readonly: boolean;\n  @Input() mainForm: FormGroup;\n  appCategoryFormArray: FormArray;\n\n  constructor() { }\n\n  @ViewChild(SearchHelpComponent, { static: true })\n  private searchHelpComponent: SearchHelpComponent;\n\n  ngOnInit() {\n    this.appCategoryFormArray = this.mainForm.get('appCategories') as FormArray;\n  }\n\n  onSearchHelp(rowID: number, exportObject: AbstractControl): void {\n    const afterExportFn = function (context: any, rowIDx: number) {\n      return () => context.onChangeKey(rowIDx);\n    }(this, rowID).bind(this);\n\n    this.searchHelpComponent.openSearchHelpModalByEntity('category', 'r_app_category',\n      exportObject, this.readonly, null, null, afterExportFn);\n  }\n}\n","<table class=\"table table-bordered table-sm dk-table ml-3 mt-4\" [formGroup]=\"mainForm\">\n  <thead class=\"thead-light\">\n  <tr>\n    <th class=\"dk-name\">Category</th>\n    <th class=\"dk-description\">Name</th>\n    <th class=\"dk-icon\">ICON</th>\n    <th class=\"dk-number\">Order</th>\n  </tr>\n  </thead>\n\n  <tbody formArrayName=\"appCategories\" class=\"mb-4\">\n  <tr *ngFor=\"let appCategoryForm of appCategoryFormArray.controls; let i = index\" >\n    <td [formGroup]=\"appCategoryForm\">\n      <div class=\"input-group dk-name\">\n        <input class=\"form-control form-control-sm\" type=\"text\" formControlName=\"ID\" readonly>\n        <div class=\"input-group-append\">\n          <button class=\"btn btn-sm btn-outline-secondary btn-light\" type=\"button\" id=\"searchPermission\"\n                  (click)=\"onSearchHelp(i, appCategoryForm)\">\n            <span class=\"fas fa-search\"></span>\n          </button>\n        </div>\n      </div>\n    </td>\n    <td [formGroup]=\"appCategoryForm\" class=\"dk-description\">\n      <input type=\"text\" formControlName=\"NAME\" readonly class=\"form-control form-control-sm\">\n    </td>\n    <td>\n      <span [ngClass]=\"appCategoryForm.get('ICON').value\"></span>\n    </td>\n    <td [formGroup]=\"appCategoryForm\" class=\"dk-number\">\n      <input type=\"number\" formControlName=\"ORDER\" readonly class=\"form-control form-control-sm\">\n    </td>\n  </tr>\n  </tbody>\n</table>\n\n<dk-app-search-help></dk-app-search-help>\n","import {Component, OnInit} from '@angular/core';\nimport {AbstractControl, FormArray, FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {AttributeBase, AttributeControlService, Entity, EntityService, RelationMeta, Relationship, UiMapperService} from 'jor-angular';\nimport {ActivatedRoute, ParamMap, Router} from '@angular/router';\nimport {DialogService} from '../../dialog.service';\nimport {IdentityService} from '../../identity.service';\nimport {Message, MessageService} from 'ui-message-angular';\nimport {switchMap} from 'rxjs/operators';\nimport {forkJoin, Observable, of} from 'rxjs';\nimport {existingAppValidator} from '../../async-validators';\nimport {Authorization} from '../../identity';\n\n@Component({\n  selector: 'app-app-detail',\n  templateUrl: './app-detail.component.html',\n  styleUrls: ['./app-detail.component.css']\n})\nexport class AppDetailComponent implements OnInit {\n  mainForm: FormGroup;\n  relationMetas: RelationMeta[];\n  attrCtrls: AttributeBase[];\n  readonly = true;\n  isNewMode = false;\n  action: string;\n  instanceGUID: string;\n  originalValue = {};\n  changedValue = {};\n  tabStrip = 1;\n\n  constructor(private fb: FormBuilder,\n              private route: ActivatedRoute,\n              private router: Router,\n              private dialogService: DialogService,\n              private identityService: IdentityService,\n              private attributeControlService: AttributeControlService,\n              private entityService: EntityService,\n              private uiMapperService: UiMapperService,\n              private messageService: MessageService) {\n  }\n\n  ngOnInit() {\n    this.route.paramMap.pipe(\n      switchMap((params: ParamMap) => {\n        this.action = params.get('action');\n        if (this.action === 'new') {\n          this.isNewMode = true;\n          return forkJoin([\n            this.entityService.getRelationMetaOfEntity('app'),\n            this._createNewEntity()\n          ]);\n        } else {\n          this.isNewMode = false;\n          return forkJoin([\n            this.entityService.getRelationMetaOfEntity('app'),\n            this.identityService.getAppDetail(params.get('appID'))\n          ]);\n        }\n      })\n    ).subscribe( data => {\n      this.relationMetas = data[0] as RelationMeta[];\n      this.attrCtrls = this.attributeControlService.toAttributeControl(\n        this.relationMetas.find( relationMeta => relationMeta.RELATION_ID === 'app').ATTRIBUTES);\n      if ('ENTITY_ID' in data[1]) {\n        this.instanceGUID = data[1]['INSTANCE_GUID'];\n        this._generateMainForm(<Entity>data[1]);\n        if (this.isNewMode || this.action === 'change') {\n          this._switch2EditMode();\n        } else {\n          this._switch2DisplayMode();\n        }\n      } else {\n        const errorMessages = <Message[]>data[1];\n        errorMessages.forEach( msg => this.messageService.add(msg));\n      }\n    });\n  }\n\n  getAttrCtrlFromID(fieldName: string): AttributeBase {\n    return this.attrCtrls.find( attrCtrl => attrCtrl.name === fieldName);\n  }\n\n  switchTabStrip(tabStripID: number): void {\n    this.tabStrip = tabStripID;\n  }\n\n  switchEditDisplay(): void {\n    if (this.readonly ) {\n      this._switch2EditMode();\n    } else {\n      if (this.mainForm.dirty) {\n        this.dialogService.confirm('Discard changes?').subscribe(confirm => {\n          if (confirm) {\n            this.mainForm.reset(this.originalValue);\n            this._switch2DisplayMode();\n          }\n        });\n      } else {\n        this._switch2DisplayMode();\n      }\n    }\n    this.messageService.clearMessages();\n  }\n\n  _switch2DisplayMode(): void {\n    this.readonly = true;\n    this._setCheckBoxState();\n\n    const appIDCtrl = this.mainForm.get('APP_ID') as FormControl;\n    appIDCtrl.clearAsyncValidators();\n\n    const appCategoryArray = this.mainForm.get('appCategories') as FormArray;\n    let lastIndex = appCategoryArray.length - 1;\n    while (lastIndex >= 0) {\n      const appCategoryGroup = appCategoryArray.at(lastIndex);\n      if (appCategoryGroup.invalid || !appCategoryGroup.value.ID) {\n        appCategoryArray.removeAt(lastIndex);\n      }\n      lastIndex--;\n    }\n\n    this.mainForm.markAsPristine();\n    // Replace the URL from change to display\n    window.history.replaceState({}, '', `/apps/${appIDCtrl.value};action=display`);\n  }\n\n  _switch2EditMode(): void {\n    this.readonly = false;\n    this._setCheckBoxState();\n\n    const appIDCtrl = this.mainForm.get('APP_ID') as FormControl;\n    if (this.isNewMode) {\n      appIDCtrl.setAsyncValidators(\n        existingAppValidator(this.identityService, this.messageService));\n    }\n\n    // Replace the URL from to display\n    if (this.action === 'display') {this.action = 'change'; }\n    window.history.replaceState({}, '', `/apps/${appIDCtrl.value};action=` + this.action);\n  }\n\n  _createNewEntity(): Observable<Entity> {\n    const appDetail = new Entity();\n    appDetail.ENTITY_ID = 'app';\n    appDetail['app'] = [\n      { APP_ID: '', NAME: '', ROUTE_LINK: '', IS_EXTERNAL: '', CREATED_BY: '', CREATE_TIME: '', CHANGED_BY: '', CHANGE_TIME: '' }\n    ];\n    appDetail['relationships'] = [];\n    return of(appDetail);\n  }\n\n  _generateMainForm(data: Entity): void {\n    this.mainForm = this.fb.group({\n      APP_ID: [data['app'][0]['APP_ID'], [Validators.required]],\n      NAME: [data['app'][0]['NAME']],\n      target: this.fb.group({\n        ROUTE_LINK: [data['app'][0]['ROUTE_LINK']],\n        IS_EXTERNAL: [data['app'][0]['IS_EXTERNAL']]\n      }),\n      admin: this.fb.group({\n        CREATED_BY: [data['app'][0]['CREATED_BY']],\n        CREATE_TIME: [data['app'][0]['CREATE_TIME']],\n        CHANGED_BY: [data['app'][0]['CHANGED_BY']],\n        CHANGE_TIME: [data['app'][0]['CHANGE_TIME']]\n      })\n    });\n    const parsedRelationship = this._parseRelationships( data['relationships'] );\n    this.mainForm.addControl('appCategories',\n      this.fb.array(parsedRelationship.appCategories.map( appCategory => this.fb.group( appCategory))));\n    this.mainForm.addControl('appAuthObjects',\n      this.fb.array(parsedRelationship.appAuthObjects.map( appAuthObject => this.fb.group( appAuthObject))));\n    this.originalValue = this.mainForm.getRawValue();\n  }\n\n  _parseRelationships( relationships: Relationship[] ): any {\n    const parsedRelationship = {\n      appCategories: [],\n      appAuthObjects: []\n    };\n    if (!relationships) { return parsedRelationship; }\n    relationships.forEach( relationship => {\n      switch (relationship.RELATIONSHIP_ID) {\n        case 'rs_app_category':\n          __parseAppCategory(relationship);\n          break;\n        case 'rs_app_auth':\n          parsedRelationship.appAuthObjects = this.identityService.parseProfileAuthObject(relationship);\n          break;\n        default:\n        // Do nothing.\n      }\n    });\n    return parsedRelationship;\n\n    function __parseAppCategory( relationship: Relationship): void {\n      relationship.values.forEach( value => {\n        parsedRelationship.appCategories.push({\n          RELATIONSHIP_INSTANCE_GUID: value['RELATIONSHIP_INSTANCE_GUID'],\n          ORDER: value['ORDER'],\n          app_category_INSTANCE_GUID: value['PARTNER_INSTANCES'][0]['INSTANCE_GUID'],\n          ID: value['PARTNER_INSTANCES'][0]['r_app_category'][0]['ID'],\n          NAME: value['PARTNER_INSTANCES'][0]['r_app_category'][0]['NAME'],\n          ICON: value['PARTNER_INSTANCES'][0]['r_app_category'][0]['ICON']\n        });\n      });\n    }\n\n    function __parseAppAuthObject( relationship: Relationship): void {\n      relationship.values.forEach( value => {\n        const authorization = value['AUTH_VALUE'] ?\n          <Authorization>JSON.parse(value['AUTH_VALUE']) : null;\n        const status = authorization ?\n          Object.values(authorization.AuthFieldValue).findIndex( authValue => !authValue ) !== -1 ?\n            'yellow' : 'green' : 'red';\n        parsedRelationship.appAuthObjects.push({\n          CHECKED: '',\n          COLLAPSED: false,\n          NODE_ID: value['RELATIONSHIP_INSTANCE_GUID'],\n          STATUS: status,\n          RELATIONSHIP_INSTANCE_GUID: value['RELATIONSHIP_INSTANCE_GUID'],\n          auth_object_INSTANCE_GUID: value['PARTNER_INSTANCES'][0]['INSTANCE_GUID'],\n          AUTH_VALUE: value['AUTH_VALUE'],\n          OBJ_NAME: value['PARTNER_INSTANCES'][0]['authObject'][0]['OBJ_NAME'],\n          DESC: value['PARTNER_INSTANCES'][0]['authObject'][0]['DESC'],\n          ROW_TYPE: 'OBJECT',\n          FIELD_NAME: '',\n          DATA_ELEMENT: '',\n        });\n\n        const authObjectFields = value['PARTNER_INSTANCES'][0]['relationships'][0];\n        authObjectFields.values.forEach( value2 => {\n          const authFieldName = value2['PARTNER_INSTANCES'][0]['authField'][0]['FIELD_NAME'];\n          parsedRelationship.appAuthObjects.push({\n            CHECKED: '',\n            COLLAPSED: false,\n            NODE_ID: value['RELATIONSHIP_INSTANCE_GUID'],\n            STATUS: authorization.AuthFieldValue[authFieldName] ?\n              authorization.AuthFieldValue[authFieldName].length > 0 ? 'green' : 'red' : 'red',\n            RELATIONSHIP_INSTANCE_GUID: value['RELATIONSHIP_INSTANCE_GUID'],\n            auth_object_INSTANCE_GUID: '',\n            AUTH_VALUE: authorization && authorization.AuthFieldValue[authFieldName]\n              && JSON.stringify(authorization.AuthFieldValue[authFieldName], null, ' '),\n            OBJ_NAME: value['PARTNER_INSTANCES'][0]['authObject'][0]['OBJ_NAME'],\n            DESC: '',\n            ROW_TYPE: 'FIELD',\n            FIELD_NAME: authFieldName,\n            DATA_ELEMENT: value2['PARTNER_INSTANCES'][0]['authField'][0]['DATA_ELEMENT'],\n          });\n        });\n      });\n    }\n  }\n\n  _resetValue(data: Entity): void {\n    this.originalValue = {\n      APP_ID: data['app'][0]['APP_ID'],\n      NAME: data['app'][0]['NAME'],\n      target: {\n        ROUTE_LINK: data['app'][0]['ROUTE_LINK'],\n        IS_EXTERNAL: data['app'][0]['IS_EXTERNAL']\n      },\n      admin: {\n        CREATED_BY: data['app'][0]['CREATED_BY'],\n        CREATE_TIME: data['app'][0]['CREATE_TIME'],\n        CHANGED_BY: data['app'][0]['CHANGED_BY'],\n        CHANGE_TIME: data['app'][0]['CHANGE_TIME']\n      }\n    };\n    const parsedRelationship = this._parseRelationships( data['relationships'] );\n    this.originalValue['appCategories'] = parsedRelationship.appCategories;\n    this.originalValue['appAuthObjects'] = parsedRelationship.appAuthObjects;\n    this.mainForm.reset(this.originalValue);\n  }\n\n  _setCheckBoxState() {\n    if (this.readonly) {\n      this.mainForm.get('target.IS_EXTERNAL').disable();\n    } else {\n      this.mainForm.get('target.IS_EXTERNAL').enable();\n    }\n  }\n\n  save() {\n    this.messageService.clearMessages();\n    if (this._composeChanges()) {\n      this.identityService.save(<Entity>this.changedValue).subscribe( data => {\n        this.changedValue = {};\n        if ('INSTANCE_GUID' in data) {\n          const appID = data['app'][0]['APP_ID'];\n          this.instanceGUID = data['INSTANCE_GUID'];\n          this.isNewMode = false;\n          this.identityService.getAppDetail(appID).subscribe(instance => {\n            if ('ENTITY_ID' in instance) {\n              this._switch2DisplayMode();\n              this._resetValue(<Entity>instance);\n            } else {\n              const errorMessages = <Message[]>instance;\n              errorMessages.forEach( msg => this.messageService.add(msg));\n            }\n          });\n          this.messageService.reportMessage('APP', 'SAVED', 'S', appID);\n        } else {\n          const errorMessages = <Message[]>data;\n          errorMessages.forEach( msg => this.messageService.add(msg));\n        }\n      });\n    }\n  }\n\n  _composeChanges() {\n    if (this.mainForm.invalid) {\n      this.messageService.reportMessage('PERMISSION', 'INVALID', 'E');\n      return false;\n    }\n\n    if (this.mainForm.dirty === false) {\n      this.messageService.reportMessage('GENERAL', 'NO_CHANGE', 'W');\n      return false;\n    }\n\n    this.changedValue['ENTITY_ID'] = 'app';\n    this.changedValue['INSTANCE_GUID'] = this.instanceGUID;\n\n    if (this.isNewMode) {\n      this.changedValue['app'] = {\n        action: 'add', APP_ID: this.mainForm.get('APP_ID').value,\n        CREATED_BY: this.identityService.Session.USER_ID, CREATE_TIME: this.identityService.CurrentTime,\n        CHANGED_BY: this.identityService.Session.USER_ID, CHANGE_TIME: this.identityService.CurrentTime};\n    } else {\n      this.changedValue['app'] = {\n        action: 'update', CHANGED_BY: this.identityService.Session.USER_ID, CHANGE_TIME: this.identityService.CurrentTime};\n    }\n\n    if (this.mainForm.get('NAME').dirty) {\n      this.changedValue['app']['NAME'] = this.mainForm.get('NAME').value;\n    }\n    if (this.mainForm.get('target.ROUTE_LINK').dirty) {\n      this.changedValue['app']['ROUTE_LINK'] = this.mainForm.get('target.ROUTE_LINK').value;\n    }\n    if (this.mainForm.get('target.IS_EXTERNAL').dirty) {\n      this.changedValue['app']['IS_EXTERNAL'] = this.mainForm.get('target.IS_EXTERNAL').value;\n    }\n\n    const appAuthObjFormArray = this.mainForm.get('appAuthObjects') as FormArray;\n    const relationship = this.identityService.composeAuthChanges(appAuthObjFormArray,\n      this.originalValue['appAuthObjects'], 'rs_app_auth');\n    if (relationship) { this.changedValue['relationships'] = [relationship]; }\n\n    return true;\n  }\n\n  canDeactivate(): Observable<boolean> | boolean {\n    if (this.isNewMode || (this.mainForm && this.mainForm.dirty)) {\n      return this.dialogService.confirm('Discard changes?');\n    } else {\n      return true;\n    }\n  }\n\n}\n","<nav class=\"navbar dk-fixed-top navbar-light bg-light\">\n  <div>\n    <span class=\"font-weight-bold mb-0 mx-1\">{{isNewMode? 'New App' : readonly? 'Display App' : 'Change App'}}</span>\n  </div>\n\n  <div class=\"flex-row-reverse\">\n    <button class=\"btn btn-sm btn-outline-primary mr-2\" type=\"button\" title=\"Edit/Display\" id=\"editDisplay\" (click)=\"switchEditDisplay()\">\n      <span *ngIf=\"readonly\" class=\"fas fa-edit\"> Edit</span>\n      <span *ngIf=\"!readonly\" class=\"fas fa-glasses\"> Display</span>\n    </button>\n    <button class=\"btn btn-sm btn-outline-primary mr-2\" type=\"button\" title=\"Save\" id=\"save\" (click)=\"save()\" [disabled]=\"readonly\">\n      <span class=\"fas fa-save\"> Save</span>\n    </button>\n  </div>\n</nav>\n\n<div class=\"mt-2 mb-2\">\n  <dk-message></dk-message>\n</div>\n\n<div *ngIf=\"mainForm\" class=\"ml-2\">\n  <div class=\"mt-2 ml-1 row\">\n    <dk-app-attribute-form2 class=\"col-md-6 col-lg-4\"\n                            [attributeControl]=\"getAttrCtrlFromID('APP_ID')\"\n                            [formGroup]=\"mainForm\"\n                            [readonly]=\"!isNewMode\"\n                            [isSmallSize] = \"true\">\n    </dk-app-attribute-form2>\n    <dk-app-attribute-form2 class=\"col-md-6 col-lg-4\"\n                            [attributeControl]=\"getAttrCtrlFromID('NAME')\"\n                            [formGroup]=\"mainForm\"\n                            [readonly]=\"readonly\"\n                            [isSmallSize] = \"true\">\n    </dk-app-attribute-form2>\n  </div>\n\n  <ul class=\"nav nav-tabs mt-1\">\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [class.active]=\"tabStrip===1\" href=\"javascript:void(0);\" (click)=\"switchTabStrip(1)\">Target</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [class.active]=\"tabStrip===2\" href=\"javascript:void(0);\" (click)=\"switchTabStrip(2)\">Authorization</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [class.active]=\"tabStrip===3\" href=\"javascript:void(0);\" (click)=\"switchTabStrip(3)\">Categories</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [class.active]=\"tabStrip===4\" href=\"javascript:void(0);\" (click)=\"switchTabStrip(4)\">Admin</a>\n    </li>\n  </ul>\n\n  <div class=\"mt-2\" [ngSwitch]=\"tabStrip\">\n    <app-app-target *ngSwitchCase=\"1\" [mainForm]=\"mainForm\" [relationMetas]=\"relationMetas\" [readonly]=\"readonly\"></app-app-target>\n    <app-authorization *ngSwitchCase=\"2\" [mainForm]=\"mainForm\" [ctrlName]=\"'appAuthObjects'\"  [readonly]=\"readonly\"></app-authorization>\n    <app-app-categories *ngSwitchCase=\"3\" [mainForm]=\"mainForm\" [readonly]=\"readonly\"></app-app-categories>\n    <app-admin-info *ngSwitchCase=\"4\" [mainForm]=\"mainForm\" [relationMetas]=\"relationMetas\" [adminRelation]=\"'app'\"></app-admin-info>\n  </div>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {FormGroup} from '@angular/forms';\nimport {AttributeBase, AttributeControlService, RelationMeta} from 'jor-angular';\n\n@Component({\n  selector: 'app-app-target',\n  templateUrl: './app-target.component.html',\n  styleUrls: ['./app-target.component.css']\n})\nexport class AppTargetComponent implements OnInit {\n  @Input() readonly: boolean;\n  @Input() mainForm: FormGroup;\n  @Input() relationMetas: RelationMeta[];\n  private attrCtrls: AttributeBase[];\n  appTargetForm: FormGroup;\n\n  constructor(private attributeControlService: AttributeControlService) { }\n\n  ngOnInit() {\n    this.appTargetForm = this.mainForm.get('target') as FormGroup;\n    this.attrCtrls = this.attributeControlService.toAttributeControl(\n      this.relationMetas.find( relationMeta => relationMeta.RELATION_ID === 'app').ATTRIBUTES);\n  }\n\n  getAttrCtrlFromID(fieldName: string): AttributeBase {\n    return this.attrCtrls.find( attrCtrl => attrCtrl.name === fieldName);\n  }\n\n}\n","<form class=\"mt-4 ml-2 row\">\n  <dk-app-attribute-form2 class=\"col-md-6 col-lg-4 dk-form-label\"\n                          [attributeControl]=\"getAttrCtrlFromID('ROUTE_LINK')\"\n                          [formGroup]=\"appTargetForm\"\n                          [isSmallSize] = \"true\"\n                          [readonly]=\"readonly\">\n  </dk-app-attribute-form2>\n  <dk-app-attribute-form2 class=\"col-md-6 col-lg-4 dk-form-label\"\n                          [attributeControl]=\"getAttrCtrlFromID('IS_EXTERNAL')\"\n                          [formGroup]=\"appTargetForm\"\n                          [isSmallSize] = \"true\"\n                          [readonly]=\"readonly\">\n  </dk-app-attribute-form2>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport {IdentityService} from '../../identity.service';\nimport {Message, MessageService, messageType} from 'ui-message-angular';\nimport {Router} from '@angular/router';\nimport {AppList} from '../../identity';\n\n@Component({\n  selector: 'app-app-list',\n  templateUrl: './app-list.component.html',\n  styleUrls: ['./app-list.component.css']\n})\nexport class AppListComponent implements OnInit {\n  appID: string;\n  appName: string;\n  apps: AppList[];\n  showDeletionConfirmation = false;\n  toBeDeletedInstance: string;\n\n  get displayDeletionConfirmation() {return this.showDeletionConfirmation ? 'block' : 'none'; }\n\n  constructor(private identityService: IdentityService,\n              private messageService: MessageService,\n              private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  search() {\n    this.messageService.clearMessages();\n    this.apps = [];\n    this.appID = this.appID ? this.appID.trim() : '';\n    this.appName = this.appName ? this.appName.trim() : '';\n    this.identityService.searchApps(this.appID, this.appName).subscribe(\n      data => {\n        if (!data[0]) {\n          this.messageService.reportMessage('GENERAL', 'EMPTY_LIST', messageType.Warning);\n        } else if (data[0]['msgCat']) {\n          const messages = <Message[]>data;\n          messages.forEach( msg => this.messageService.add(msg));\n        } else {\n          this.apps = <AppList[]>data;\n        }\n      }\n    );\n  }\n\n  enterSearch($event): void {\n    if ($event.keyCode === 13 ) {\n      this.search();\n    }\n  }\n\n  new(): void {\n    this.router.navigate(['apps', '/', {action: 'new'}]);\n  }\n\n  display(appID: string): void {\n    this.router.navigate(['apps', appID, {action: 'display'}]);\n  }\n\n  change(appID: string): void {\n    this.router.navigate(['apps', appID, {action: 'change'}]);\n  }\n\n  delete(appID: string): void {\n    this.toBeDeletedInstance = appID;\n    this.showDeletionConfirmation = true;\n  }\n\n  cancelDeletion(): void {\n    this.showDeletionConfirmation = false;\n  }\n\n  confirmDeletion(): void {\n    const toBeDeletedInstanceGUID = this.apps.find(\n      ele => ele.APP_ID === this.toBeDeletedInstance).INSTANCE_GUID;\n    this.identityService.delete(toBeDeletedInstanceGUID).subscribe( errorMsg => {\n      this.showDeletionConfirmation = false;\n      if (errorMsg) {\n        const messages = <Message[]>errorMsg;\n        messages.forEach( msg => this.messageService.add(msg));\n      } else {\n        this.search();\n      }\n    });\n  }\n}\n","<div class=\"card mb-3 pt-3\">\n  <div class=\"mt-2 pl-4 row\">\n    <div class=\"col-6 form-group row\">\n      <label for=\"app_id\" class=\"col-sm-3 col-form-label\">App ID:</label>\n      <input id=\"app_id\" name=\"app_id\" [(ngModel)]=\"appID\" type=\"text\"\n             class=\"col-sm-6 form-control form-control-sm\" (keyup)=\"enterSearch($event)\" autofocus>\n    </div>\n    <div class=\"col-6 form-group row\">\n      <label for=\"app_name\" class=\"col-sm-3 col-form-label\">App Name:</label>\n      <input id=\"app_name\" name=\"app_name\" [(ngModel)]=\"appName\" type=\"text\"\n             class=\"col-sm-6 form-control form-control-sm\" (keyup)=\"enterSearch($event)\">\n    </div>\n  </div>\n\n  <div class=\"mb-4\">\n    <button type=\"button\" id=\"search\" class=\"btn btn-primary btn-sm float-right mr-4\" (click)=\"search()\">Search</button>\n  </div>\n</div>\n\n<div class=\"mt-2 mb-4 mx-4\">\n  <dk-message></dk-message>\n  <div class=\"btn-toolbar justify-content-end my-2\" role=\"toolbar\">\n    <button type=\"button\" id=\"new\" class=\"btn btn-light btn-sm\" (click)=\"new()\">\n      <span class=\"fas fa-plus\"></span> New</button>\n  </div>\n  <table class=\"table table-bordered table-sm\">\n    <thead class=\"thead-light\">\n    <tr>\n      <th scope=\"col\">ID</th>\n      <th scope=\"col\">Name</th>\n      <th scope=\"col\">Link</th>\n      <th scope=\"col\">External?</th>\n<!--      <th scope=\"col\">Created By</th>-->\n<!--      <th scope=\"col\">Created At</th>-->\n      <th scope=\"col\">Changed By</th>\n      <th scope=\"col\">Changed At</th>\n      <th scope=\"col\">Action</th>\n    </tr>\n    </thead>\n\n    <tbody>\n    <tr *ngFor=\"let app of apps\">\n      <td><a [routerLink]=\"['/apps', app.APP_ID, {action: 'display'}]\">{{app.APP_ID}}</a></td>\n      <td>{{app.NAME}}</td>\n      <td>{{app.ROUTE_LINK}}</td>\n      <td> <input type=\"checkbox\" [(ngModel)]=\"app.IS_EXTERNAL\" disabled></td>\n<!--      <td>{{app.CREATED_BY}}</td>-->\n<!--      <td>{{app.CREATE_TIME}}</td>-->\n      <td>{{app.CHANGED_BY}}</td>\n      <td>{{app.CHANGE_TIME}}</td>\n      <td class=\"dk-actions\">\n        <button title=\"Display\" id=\"display\" class=\"btn btn-sm\" type=\"button\" (click)=\"display(app.APP_ID)\">\n          <span class=\"fas fa-search\"></span>\n        </button>\n        <button title=\"Change\" id=\"change\" class=\"btn btn-sm\" type=\"button\" (click)=\"change(app.APP_ID)\">\n          <span class=\"fas fa-pen\"></span>\n        </button>\n        <button title=\"Delete\" id=\"delete\" class=\"btn btn-sm\" type=\"button\" (click)=\"delete(app.APP_ID)\">\n          <span class=\"far fa-trash-alt\"></span>\n        </button>\n      </td>\n    </tr>\n    </tbody>\n  </table>\n\n  <div class=\"modal\" [class.show]=\"showDeletionConfirmation\"\n       [ngStyle]=\"{'display': displayDeletionConfirmation}\" id=\"deletionConfirmation\" tabindex=\"-1\" role=\"dialog\">\n    <div class=\"modal-dialog modal-sm modal-dialog-centered\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"confirmDeletion\">Confirm Deletion</h5>\n          <button type=\"button\" class=\"close\" (click)=\"cancelDeletion()\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          <p>Are you sure to delete the App '{{toBeDeletedInstance}}'?</p>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" id=\"cancel\" class=\"btn btn-sm btn-secondary\" (click)=\"cancelDeletion()\">Cancel</button>\n          <button type=\"button\" id=\"confirm\" class=\"btn btn-sm btn-primary\" (click)=\"confirmDeletion()\">Confirm</button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n</div>\n","import {Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {AbstractControl, FormArray, FormBuilder, FormGroup} from '@angular/forms';\nimport {IdentityService} from '../../../identity.service';\nimport {SearchHelpComponent} from 'jor-angular';\n\n@Component({\n  selector: 'app-app-category-detail-app',\n  templateUrl: './app-category-detail-app.component.html',\n  styleUrls: ['./app-category-detail-app.component.css']\n})\nexport class AppCategoryDetailAppComponent implements OnInit {\n  @Input() readonly: boolean;\n  @Input() mainForm: FormGroup;\n  appFormArray: FormArray;\n\n  constructor(private fb: FormBuilder,\n              private identityService: IdentityService) { }\n\n  @ViewChild(SearchHelpComponent, { static: true })\n  private searchHelpComponent: SearchHelpComponent;\n\n  ngOnInit() {\n    this.appFormArray = this.mainForm.get('apps') as FormArray;\n    // Recheck each role since every time the template is initialized, Angular clears the error status.\n    if (!this.readonly) {\n      this.appFormArray.controls.forEach( (ctrl, index) => {\n        this.onChangeKey(index);\n      });\n    }\n  }\n\n  delete(index: number): void {\n    if (index !== this.appFormArray.length - 1) {\n      this.appFormArray.removeAt(index);\n      this.appFormArray.markAsDirty();\n    }\n  }\n\n  onChangeKey(index: number): void {\n    const currentFormGroup = this.appFormArray.at(index);\n    if (this.isExisting(currentFormGroup)) {\n      currentFormGroup.get('APP_ID').setErrors({message: 'Duplicate Apps'});\n      return;\n    }\n\n    if (index === this.appFormArray.length - 1 && currentFormGroup.value.APP_ID.trim() !== '') {\n      // Only work if the last line is not new and empty\n      this.appFormArray.push(\n        this.fb.group({\n          APP_ID: [''],\n          NAME: [''],\n          ORDER: [0],\n          portal_app_INSTANCE_GUID: [''],\n          RELATIONSHIP_INSTANCE_GUID: ['']\n        })\n      );\n    }\n\n    if (currentFormGroup.value.APP_ID) {\n      this.identityService.getAppByID(currentFormGroup.value.APP_ID).subscribe(data => {\n        if (data[0] && data[0]['msgCat']) {\n          currentFormGroup.get('APP_ID').setErrors({message: data[0]['msgShortText']});\n        } else {\n          currentFormGroup.get('NAME').setValue(data['app'][0]['NAME']);\n          currentFormGroup.get('portal_app_INSTANCE_GUID').setValue(data['INSTANCE_GUID']);\n        }\n      });\n    }\n  }\n\n  isExisting(key: AbstractControl): boolean {\n    const existIndex = this.appFormArray.controls.findIndex(\n      ctrl => ctrl.value.APP_ID === key.value.APP_ID\n        && ctrl.get('APP_ID').pristine && ctrl.value.APP_ID !== '');\n    return existIndex !== -1 ;\n  }\n\n  onSearchHelp(rowID: number, exportObject: AbstractControl): void {\n    const afterExportFn = function (context: any, rowIDx: number) {\n      return () => context.onChangeKey(rowIDx);\n    }(this, rowID).bind(this);\n\n    this.searchHelpComponent.openSearchHelpModalByEntity('app', 'app',\n      exportObject, this.readonly, 'APP_ID', null, afterExportFn);\n  }\n}\n","<table class=\"table table-bordered table-sm dk-table ml-3 mt-4\" [formGroup]=\"mainForm\">\n  <thead class=\"thead-light\">\n  <tr>\n    <th class=\"dk-name\">App ID</th>\n    <th class=\"dk-description\">App Name</th>\n    <th class=\"dk-number\">Order</th>\n    <th class=\"dk-actions\">Action</th>\n  </tr>\n  </thead>\n\n  <tbody formArrayName=\"apps\" class=\"mb-4\">\n  <tr *ngFor=\"let appForm of appFormArray.controls; let i = index\">\n    <td [formGroup]=\"appForm\">\n      <div class=\"input-group\">\n        <input class=\"form-control form-control-sm\" type=\"text\" formControlName=\"APP_ID\"\n               [readonly]=\"readonly || isExisting(appForm) && appForm.valid\" (change)=\"onChangeKey(i)\">\n        <div class=\"invalid-tooltip\">\n          {{appForm.get('APP_ID').errors?.message}}\n        </div>\n        <div class=\"input-group-append\">\n          <button class=\"btn btn-sm btn-outline-secondary btn-light\" type=\"button\" id=\"searchApp\"\n                  (click)=\"onSearchHelp(i, appForm)\">\n            <span class=\"fas fa-search\"></span>\n          </button>\n        </div>\n      </div>\n    </td>\n    <td [formGroup]=\"appForm\">\n      <input type=\"text\" formControlName=\"NAME\" readonly class=\"form-control form-control-sm\">\n    </td>\n    <td [formGroup]=\"appForm\" >\n      <input type=\"number\" formControlName=\"ORDER\" [readonly]=\"readonly\" class=\"form-control form-control-sm\">\n    </td>\n    <td>\n      <button class=\"btn btn-sm\" type=\"button\" id=\"delete\" [disabled]=\"readonly\" (click)=\"delete(i)\" title=\"Delete\">\n        <span class=\"far fa-trash-alt\"></span>\n      </button>\n    </td>\n  </tr>\n  </tbody>\n</table>\n\n<dk-app-search-help></dk-app-search-help>\n","import {Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {AbstractControl, FormArray, FormBuilder, FormGroup} from '@angular/forms';\nimport {IdentityService} from '../../../identity.service';\nimport {SearchHelpComponent} from 'jor-angular';\n\n@Component({\n  selector: 'app-app-category-detail-role',\n  templateUrl: './app-category-detail-role.component.html',\n  styleUrls: ['./app-category-detail-role.component.css']\n})\nexport class AppCategoryDetailRoleComponent implements OnInit {\n  @Input() mainForm: FormGroup;\n  roleFormArray: FormArray;\n\n  constructor(private fb: FormBuilder,\n              private identityService: IdentityService) { }\n\n  @ViewChild(SearchHelpComponent, { static: true })\n  private searchHelpComponent: SearchHelpComponent;\n\n  ngOnInit() {\n    this.roleFormArray = this.mainForm.get('roles') as FormArray;\n  }\n\n  onSearchHelp(rowID: number, exportObject: AbstractControl): void {\n    this.searchHelpComponent.openSearchHelpModalByEntity('permission', 'r_role',\n      exportObject, true, null, null, null);\n  }\n}\n","<table class=\"table table-bordered table-sm dk-table ml-3 mt-4\" [formGroup]=\"mainForm\">\n  <thead class=\"thead-light\">\n  <tr>\n    <th class=\"dk-name\">Role</th>\n    <th class=\"dk-description\">Description</th>\n    <th class=\"dk-number\">Order</th>\n  </tr>\n  </thead>\n\n  <tbody formArrayName=\"apps\" class=\"mb-4\">\n  <tr *ngFor=\"let roleForm of roleFormArray.controls; let i = index\">\n    <td [formGroup]=\"roleForm\">\n      <div class=\"input-group\">\n        <input class=\"form-control form-control-sm\" type=\"text\" formControlName=\"NAME\" readonly>\n        <div class=\"input-group-append\">\n          <button class=\"btn btn-sm btn-outline-secondary btn-light\" type=\"button\" id=\"searchRole\"\n                  (click)=\"onSearchHelp(i, roleForm)\">\n            <span class=\"fas fa-search\"></span>\n          </button>\n        </div>\n      </div>\n    </td>\n    <td [formGroup]=\"roleForm\" class=\"dk-description\">\n      <input type=\"text\" formControlName=\"DESCRIPTION\" readonly class=\"form-control form-control-sm\">\n    </td>\n    <td [formGroup]=\"roleForm\" >\n      <input type=\"number\" formControlName=\"ORDER\" readonly class=\"form-control form-control-sm\">\n    </td>\n  </tr>\n  </tbody>\n</table>\n\n<dk-app-search-help></dk-app-search-help>\n","import { Component, OnInit } from '@angular/core';\nimport {FormArray, FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {AttributeBase, AttributeControlService, Entity, EntityService, RelationMeta, Relationship, UiMapperService} from 'jor-angular';\nimport {ActivatedRoute, ParamMap, Router} from '@angular/router';\nimport {DialogService} from '../../dialog.service';\nimport {IdentityService} from '../../identity.service';\nimport {Message, MessageService} from 'ui-message-angular';\nimport {switchMap} from 'rxjs/operators';\nimport {forkJoin, Observable, of} from 'rxjs';\nimport {existingAppCategoryValidator} from '../../async-validators';\n\n@Component({\n  selector: 'app-app-category-detail',\n  templateUrl: './app-category-detail.component.html',\n  styleUrls: ['./app-category-detail.component.css']\n})\nexport class AppCategoryDetailComponent implements OnInit {\n  mainForm: FormGroup;\n  relationMetas: RelationMeta[];\n  attrCtrls: AttributeBase[];\n  readonly = true;\n  isNewMode = false;\n  action: string;\n  instanceGUID: string;\n  originalValue = {};\n  changedValue = {};\n  tabStrip = 1;\n\n  constructor(private fb: FormBuilder,\n              private route: ActivatedRoute,\n              private router: Router,\n              private dialogService: DialogService,\n              private identityService: IdentityService,\n              private attributeControlService: AttributeControlService,\n              private entityService: EntityService,\n              private uiMapperService: UiMapperService,\n              private messageService: MessageService) {\n  }\n\n  ngOnInit() {\n    this.route.paramMap.pipe(\n      switchMap((params: ParamMap) => {\n        this.action = params.get('action');\n        if (this.action === 'new') {\n          this.isNewMode = true;\n          return forkJoin([\n            this.entityService.getRelationMetaOfEntity('category'),\n            this._createNewEntity()\n          ]);\n        } else {\n          this.isNewMode = false;\n          return forkJoin([\n            this.entityService.getRelationMetaOfEntity('category'),\n            this.identityService.getAppCategoryDetail(params.get('appCategory'))\n          ]);\n        }\n      })\n    ).subscribe( data => {\n      this.relationMetas = data[0] as RelationMeta[];\n      this.attrCtrls = this.attributeControlService.toAttributeControl(\n        this.relationMetas.find( relationMeta => relationMeta.RELATION_ID === 'r_app_category').ATTRIBUTES);\n      if ('ENTITY_ID' in data[1]) {\n        this.instanceGUID = data[1]['INSTANCE_GUID'];\n        this._generateMainForm(<Entity>data[1]);\n        if (this.isNewMode || this.action === 'change') {\n          this._switch2EditMode();\n        } else {\n          this._switch2DisplayMode();\n        }\n      } else {\n        const errorMessages = <Message[]>data[1];\n        errorMessages.forEach( msg => this.messageService.add(msg));\n      }\n    });\n  }\n\n  getAttrCtrlFromID(fieldName: string): AttributeBase {\n    return this.attrCtrls.find( attrCtrl => attrCtrl.name === fieldName);\n  }\n\n  switchTabStrip(tabStripID: number): void {\n    this.tabStrip = tabStripID;\n  }\n\n  switchEditDisplay(): void {\n    if (this.readonly ) {\n      this._switch2EditMode();\n    } else {\n      if (this.mainForm.dirty) {\n        this.dialogService.confirm('Discard changes?').subscribe(confirm => {\n          if (confirm) {\n            this.mainForm.reset(this.originalValue);\n            this._switch2DisplayMode();\n          }\n        });\n      } else {\n        this._switch2DisplayMode();\n      }\n    }\n    this.messageService.clearMessages();\n  }\n\n  _switch2DisplayMode(): void {\n    this.readonly = true;\n\n    const appCategoryIDCtrl = this.mainForm.get('ID') as FormControl;\n    appCategoryIDCtrl.clearAsyncValidators();\n\n    const appArray = this.mainForm.get('apps') as FormArray;\n    let lastIndex = appArray.length - 1;\n    while (lastIndex >= 0) {\n      const appGroup = appArray.at(lastIndex);\n      if (appGroup.invalid || !appGroup.value.APP_ID) {\n        appArray.removeAt(lastIndex);\n      }\n      lastIndex--;\n    }\n\n    this.mainForm.markAsPristine();\n    // Replace the URL from change to display\n    window.history.replaceState({}, '', `/app-categories/${appCategoryIDCtrl.value};action=display`);\n  }\n\n  _switch2EditMode(): void {\n    this.readonly = false;\n\n    const appCategoryIDCtrl = this.mainForm.get('ID') as FormControl;\n    if (this.isNewMode) {\n      appCategoryIDCtrl.setAsyncValidators(\n        existingAppCategoryValidator(this.identityService, this.messageService));\n    }\n\n    const appArray = this.mainForm.get('apps') as FormArray;\n    appArray.push( this.fb.group({\n      APP_ID: [''],\n      NAME: [''],\n      ORDER: [0],\n      portal_app_INSTANCE_GUID: [''],\n      RELATIONSHIP_INSTANCE_GUID: ['']\n    }));\n\n    // Replace the URL from to display\n    if (this.action === 'display') {this.action = 'change'; }\n    window.history.replaceState({}, '', `/app-categories/${appCategoryIDCtrl.value};action=` + this.action);\n  }\n\n  _createNewEntity(): Observable<Entity> {\n    const appCategoryDetail = new Entity();\n    appCategoryDetail.ENTITY_ID = 'category';\n    appCategoryDetail['category'] = [\n      { NAME: '', TYPE: 'APP', CREATED_BY: '', CREATE_TIME: '', CHANGED_BY: '', CHANGE_TIME: '' }\n    ];\n    appCategoryDetail['r_app_category'] = [\n      { ID: '', NAME: '', ICON: '' }\n    ];\n    appCategoryDetail['relationships'] = [];\n    return of(appCategoryDetail);\n  }\n\n  _generateMainForm(data: Entity): void {\n    this.mainForm = this.fb.group({\n      ID: [data['r_app_category'][0]['ID'], [Validators.required]],\n      NAME: [data['r_app_category'][0]['NAME']],\n      ICON: [data['r_app_category'][0]['ICON']],\n      admin: this.fb.group({\n        CREATED_BY: [data['category'][0]['CREATED_BY']],\n        CREATE_TIME: [data['category'][0]['CREATE_TIME']],\n        CHANGED_BY: [data['category'][0]['CHANGED_BY']],\n        CHANGE_TIME: [data['category'][0]['CHANGE_TIME']]\n      })\n    });\n    const parsedRelationship = this._parseRelationships( data['relationships'] );\n    this.mainForm.addControl('apps',\n      this.fb.array(parsedRelationship.apps.map( app => this.fb.group( app ))));\n    this.mainForm.addControl('roles',\n      this.fb.array(parsedRelationship.roles.map( role => this.fb.group( role ))));\n    this.originalValue = this.mainForm.getRawValue();\n  }\n\n  _parseRelationships( relationships: Relationship[] ): any {\n    const parsedRelationship = {\n      apps : [],\n      roles: []\n    };\n    if (!relationships) { return parsedRelationship; }\n    relationships.forEach( relationship => {\n      switch (relationship.RELATIONSHIP_ID) {\n        case 'rs_app_category':\n          __parseApp(relationship);\n          break;\n        case 'rs_system_role_category':\n          __parseSystemRole(relationship);\n          break;\n        default:\n        // Do nothing.\n      }\n    });\n    return parsedRelationship;\n\n    function __parseApp( relationship: Relationship): void {\n      relationship.values.forEach( value => {\n        parsedRelationship.apps.push({\n          RELATIONSHIP_INSTANCE_GUID: value['RELATIONSHIP_INSTANCE_GUID'],\n          portal_app_INSTANCE_GUID: value['PARTNER_INSTANCES'][0]['INSTANCE_GUID'],\n          APP_ID: value['PARTNER_INSTANCES'][0]['app'][0]['APP_ID'],\n          NAME: value['PARTNER_INSTANCES'][0]['app'][0]['NAME'],\n          ORDER: value['ORDER']\n        });\n      });\n    }\n\n    function __parseSystemRole( relationship: Relationship): void {\n      relationship.values.forEach( value => {\n        parsedRelationship.roles.push({\n          RELATIONSHIP_INSTANCE_GUID: value['RELATIONSHIP_INSTANCE_GUID'],\n          system_role_INSTANCE_GUID: value['PARTNER_INSTANCES'][0]['INSTANCE_GUID'],\n          NAME: value['PARTNER_INSTANCES'][0]['r_role'][0]['NAME'],\n          DESCRIPTION: value['PARTNER_INSTANCES'][0]['r_role'][0]['DESCRIPTION'],\n          ORDER: value['ORDER']\n        });\n      });\n    }\n  }\n\n  _resetValue(data: Entity): void {\n    this.originalValue = {\n      ID: data['r_app_category'][0]['ID'],\n      NAME: data['r_app_category'][0]['NAME'],\n      ICON: data['r_app_category'][0]['ICON'],\n      admin: {\n        CREATED_BY: data['category'][0]['CREATED_BY'],\n        CREATE_TIME: data['category'][0]['CREATE_TIME'],\n        CHANGED_BY: data['category'][0]['CHANGED_BY'],\n        CHANGE_TIME: data['category'][0]['CHANGE_TIME']\n      }\n    };\n    const parsedRelationship = this._parseRelationships( data['relationships'] );\n    this.originalValue['apps'] = parsedRelationship.apps;\n    this.originalValue['roles'] = parsedRelationship.roles;\n    this.mainForm.reset(this.originalValue);\n  }\n\n  save() {\n    this.messageService.clearMessages();\n    if (this._composeChanges()) {\n      this.identityService.save(<Entity>this.changedValue).subscribe( data => {\n        this.changedValue = {};\n        if ('INSTANCE_GUID' in data) {\n          const appCategoryID = data['r_app_category'][0]['ID'];\n          this.instanceGUID = data['INSTANCE_GUID'];\n          this.isNewMode = false;\n          this.identityService.getAppCategoryDetail(appCategoryID).subscribe(instance => {\n            if ('ENTITY_ID' in instance) {\n              this._switch2DisplayMode();\n              this._resetValue(<Entity>instance);\n            } else {\n              const errorMessages = <Message[]>instance;\n              errorMessages.forEach( msg => this.messageService.add(msg));\n            }\n          });\n          this.messageService.reportMessage('APP_CATEGORY', 'SAVED', 'S', appCategoryID);\n        } else {\n          const errorMessages = <Message[]>data;\n          errorMessages.forEach( msg => this.messageService.add(msg));\n        }\n      });\n    }\n  }\n\n  _composeChanges() {\n    if (this.mainForm.invalid) {\n      this.messageService.reportMessage('APP_CATEGORY', 'INVALID', 'E');\n      return false;\n    }\n\n    if (this.mainForm.dirty === false) {\n      this.messageService.reportMessage('GENERAL', 'NO_CHANGE', 'W');\n      return false;\n    }\n\n    this.changedValue['ENTITY_ID'] = 'category';\n    this.changedValue['INSTANCE_GUID'] = this.instanceGUID;\n\n    if (this.isNewMode) {\n      this.changedValue['category'] = {\n        action: 'add', TYPE: 'APP',\n        CREATED_BY: this.identityService.Session.USER_ID, CREATE_TIME: this.identityService.CurrentTime,\n        CHANGED_BY: this.identityService.Session.USER_ID, CHANGE_TIME: this.identityService.CurrentTime\n      };\n      this.changedValue['r_app_category'] = { action: 'add', ID: this.mainForm.get('ID').value };\n    } else {\n      this.changedValue['category'] = {\n        action: 'update', CHANGED_BY: this.identityService.Session.USER_ID, CHANGE_TIME: this.identityService.CurrentTime};\n      this.changedValue['r_app_category'] = { action: 'update', ID: this.mainForm.get('ID').value};\n    }\n\n    if (this.mainForm.get('NAME').dirty) {\n      this.changedValue['category']['NAME'] = this.mainForm.get('NAME').value;\n      this.changedValue['r_app_category']['NAME'] = this.mainForm.get('NAME').value;\n    }\n\n    if (this.mainForm.get('ICON').dirty) {\n      this.changedValue['r_app_category']['ICON'] = this.mainForm.get('ICON').value;\n    }\n\n    const appFormArray = this.mainForm.get('apps') as FormArray;\n    const relationship = this.uiMapperService.composeChangedRelationship(\n      'rs_app_category',\n      [{ENTITY_ID: 'app', ROLE_ID: 'portal_app'}],\n      appFormArray,\n      this.originalValue['apps'],\n      ['APP_ID', 'NAME']);\n\n    if (relationship) {this.changedValue['relationships'] = [relationship]; }\n\n    return true;\n  }\n\n  canDeactivate(): Observable<boolean> | boolean {\n    if (this.isNewMode || (this.mainForm && this.mainForm.dirty)) {\n      return this.dialogService.confirm('Discard changes?');\n    } else {\n      return true;\n    }\n  }\n}\n","<nav class=\"navbar dk-fixed-top navbar-light bg-light\">\n  <div>\n    <span class=\"font-weight-bold mb-0 mx-1\">{{isNewMode? 'New App Category' :\n      readonly? 'Display App Category' : 'Change App Category'}}</span>\n  </div>\n\n  <div class=\"flex-row-reverse\">\n    <button class=\"btn btn-sm btn-outline-primary mr-2\" type=\"button\" title=\"Edit/Display\" id=\"editDisplay\" (click)=\"switchEditDisplay()\">\n      <span *ngIf=\"readonly\" class=\"fas fa-edit\"> Edit</span>\n      <span *ngIf=\"!readonly\" class=\"fas fa-glasses\"> Display</span>\n    </button>\n    <button class=\"btn btn-sm btn-outline-primary mr-2\" type=\"button\" title=\"Save\" id=\"save\" (click)=\"save()\" [disabled]=\"readonly\">\n      <span class=\"fas fa-save\"> Save</span>\n    </button>\n  </div>\n</nav>\n\n<div class=\"mt-2 mb-2\">\n  <dk-message></dk-message>\n</div>\n\n<div *ngIf=\"mainForm\" class=\"mx-2\">\n  <div class=\"mt-2 ml-1 row\">\n    <dk-app-attribute-form2 class=\"col-md-4\"\n                            [attributeControl]=\"getAttrCtrlFromID('ID')\"\n                            [formGroup]=\"mainForm\"\n                            [readonly]=\"!isNewMode\"\n                            [isSmallSize] = \"true\">\n    </dk-app-attribute-form2>\n    <dk-app-attribute-form2 class=\"col-md-4\"\n                            [attributeControl]=\"getAttrCtrlFromID('NAME')\"\n                            [formGroup]=\"mainForm\"\n                            [readonly]=\"readonly\"\n                            [isSmallSize] = \"true\">\n    </dk-app-attribute-form2>\n    <dk-app-attribute-form2 class=\"col-md-4\"\n                            [attributeControl]=\"getAttrCtrlFromID('ICON')\"\n                            [formGroup]=\"mainForm\"\n                            [readonly]=\"readonly\"\n                            [isSmallSize] = \"true\">\n    </dk-app-attribute-form2>\n  </div>\n\n  <ul class=\"nav nav-tabs mt-1\">\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [class.active]=\"tabStrip===1\" href=\"javascript:void(0);\" (click)=\"switchTabStrip(1)\">Apps</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [class.active]=\"tabStrip===2\" href=\"javascript:void(0);\" (click)=\"switchTabStrip(2)\">Roles</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [class.active]=\"tabStrip===3\" href=\"javascript:void(0);\" (click)=\"switchTabStrip(3)\">Admin</a>\n    </li>\n  </ul>\n\n  <div class=\"mt-2\" [ngSwitch]=\"tabStrip\">\n    <app-app-category-detail-app *ngSwitchCase=\"1\" [mainForm]=\"mainForm\"  [readonly]=\"readonly\"></app-app-category-detail-app>\n    <app-app-category-detail-role *ngSwitchCase=\"2\" [mainForm]=\"mainForm\" ></app-app-category-detail-role>\n    <app-admin-info *ngSwitchCase=\"3\" [mainForm]=\"mainForm\" [relationMetas]=\"relationMetas\" [adminRelation]=\"'category'\"></app-admin-info>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {AppCategoryList, AuthObjList} from '../../identity';\nimport {IdentityService} from '../../identity.service';\nimport {Message, MessageService, messageType} from 'ui-message-angular';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-app-category-list',\n  templateUrl: './app-category-list.component.html',\n  styleUrls: ['./app-category-list.component.css']\n})\nexport class AppCategoryListComponent implements OnInit {\n  appCategoryID: string;\n  appCategoryName: string;\n  appCategories: AppCategoryList[];\n  showDeletionConfirmation = false;\n  toBeDeletedInstance: string;\n\n  get displayDeletionConfirmation() {return this.showDeletionConfirmation ? 'block' : 'none'; }\n\n  constructor(private identityService: IdentityService,\n              private messageService: MessageService,\n              private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  search() {\n    this.messageService.clearMessages();\n    this.appCategories = [];\n    this.appCategoryID = this.appCategoryID ? this.appCategoryID.trim() : '';\n    this.appCategoryName = this.appCategoryName ? this.appCategoryName.trim() : '';\n    this.identityService.searchAppCategories(this.appCategoryID, this.appCategoryName).subscribe(\n      data => {\n        if (!data[0]) {\n          this.messageService.reportMessage('GENERAL', 'EMPTY_LIST', messageType.Warning);\n        } else if (data[0]['msgCat']) {\n          const messages = <Message[]>data;\n          messages.forEach( msg => this.messageService.add(msg));\n        } else {\n          this.appCategories = <AppCategoryList[]>data;\n        }\n      }\n    );\n  }\n\n  enterSearch($event): void {\n    if ($event.keyCode === 13 ) {\n      this.search();\n    }\n  }\n\n  new(): void {\n    this.router.navigate(['app-categories', '/', {action: 'new'}]);\n  }\n\n  display(appCategoryID: string): void {\n    this.router.navigate(['app-categories', appCategoryID, {action: 'display'}]);\n  }\n\n  change(appCategoryID: string): void {\n    this.router.navigate(['app-categories', appCategoryID, {action: 'change'}]);\n  }\n\n  delete(appCategoryID: string): void {\n    this.toBeDeletedInstance = appCategoryID;\n    this.showDeletionConfirmation = true;\n  }\n\n  cancelDeletion(): void {\n    this.showDeletionConfirmation = false;\n  }\n\n  confirmDeletion(): void {\n    const toBeDeletedInstanceGUID = this.appCategories.find(\n      ele => ele.ID === this.toBeDeletedInstance).INSTANCE_GUID;\n    this.identityService.delete(toBeDeletedInstanceGUID).subscribe( errorMsg => {\n      this.showDeletionConfirmation = false;\n      if (errorMsg) {\n        const messages = <Message[]>errorMsg;\n        messages.forEach( msg => this.messageService.add(msg));\n      } else {\n        this.search();\n      }\n    });\n  }\n\n}\n","<div class=\"card mb-3 pt-3\">\n  <div class=\"mt-2 pl-4 row\">\n    <div class=\"col-6 form-group row\">\n      <label for=\"app_category_id\" class=\"col-sm-3 col-form-label\">Category ID:</label>\n      <input id=\"app_category_id\" name=\"app_category_id\" [(ngModel)]=\"appCategoryID\" type=\"text\"\n             class=\"col-sm-6 form-control form-control-sm\" (keyup)=\"enterSearch($event)\" autofocus>\n    </div>\n    <div class=\"col-6 form-group row\">\n      <label for=\"app_category_name\" class=\"col-sm-3 col-form-label\">Category Name:</label>\n      <input id=\"app_category_name\" name=\"app_category_name\" [(ngModel)]=\"appCategoryName\" type=\"text\"\n             class=\"col-sm-6 form-control form-control-sm\" (keyup)=\"enterSearch($event)\">\n    </div>\n  </div>\n\n  <div class=\"mb-4\">\n    <button type=\"button\" id=\"search\" class=\"btn btn-primary btn-sm float-right mr-4\" (click)=\"search()\">Search</button>\n  </div>\n</div>\n\n<div class=\"mt-2 mb-4 mx-4\">\n  <dk-message></dk-message>\n  <div class=\"btn-toolbar justify-content-end my-2\" role=\"toolbar\">\n    <button type=\"button\" id=\"new\" class=\"btn btn-light btn-sm\" (click)=\"new()\">\n      <span class=\"fas fa-plus\"></span> New</button>\n  </div>\n  <table class=\"table table-bordered table-sm\">\n    <thead class=\"thead-light\">\n    <tr>\n      <th scope=\"col\">ID</th>\n      <th scope=\"col\">Name</th>\n      <th scope=\"col\">Icon</th>\n      <th scope=\"col\">Changed By</th>\n      <th scope=\"col\">Changed At</th>\n      <th scope=\"col\">Action</th>\n    </tr>\n    </thead>\n\n    <tbody>\n    <tr *ngFor=\"let appCategory of appCategories\">\n      <td><a [routerLink]=\"['/app-categories', appCategory.ID, {action: 'display'}]\">{{appCategory.ID}}</a></td>\n      <td>{{appCategory.NAME}}</td>\n      <td><span [ngClass]=\"appCategory.ICON\"></span></td>\n      <td>{{appCategory.CHANGED_BY}}</td>\n      <td>{{appCategory.CHANGE_TIME}}</td>\n      <td class=\"dk-actions\">\n        <button title=\"Display\" id=\"display\" class=\"btn btn-sm\" type=\"button\" (click)=\"display(appCategory.ID)\">\n          <span class=\"fas fa-search\"></span>\n        </button>\n        <button title=\"Change\" id=\"change\" class=\"btn btn-sm\" type=\"button\" (click)=\"change(appCategory.ID)\">\n          <span class=\"fas fa-pen\"></span>\n        </button>\n        <button title=\"Delete\" id=\"delete\" class=\"btn btn-sm\" type=\"button\" (click)=\"delete(appCategory.ID)\">\n          <span class=\"far fa-trash-alt\"></span>\n        </button>\n      </td>\n    </tr>\n    </tbody>\n  </table>\n\n  <div class=\"modal fade\" [class.show]=\"showDeletionConfirmation\"\n       [ngStyle]=\"{'display': displayDeletionConfirmation}\" id=\"deletionConfirmation\" tabindex=\"-1\" role=\"dialog\">\n    <div class=\"modal-dialog modal-sm modal-dialog-centered\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"confirmDeletion\">Confirm Deletion</h5>\n          <button type=\"button\" class=\"close\" (click)=\"cancelDeletion()\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          <p>Are you sure to delete the app category '{{toBeDeletedInstance}}'?</p>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" id=\"cancel\" class=\"btn btn-sm btn-secondary\" (click)=\"cancelDeletion()\">Cancel</button>\n          <button type=\"button\" id=\"confirm\" class=\"btn btn-sm btn-primary\" (click)=\"confirmDeletion()\">Confirm</button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n</div>\n","import {IdentityService} from './identity.service';\nimport {AbstractControl, AsyncValidatorFn, ValidationErrors} from '@angular/forms';\nimport {Observable, timer} from 'rxjs';\nimport {map, switchMap} from 'rxjs/operators';\nimport {MessageService} from 'ui-message-angular';\n\nexport function existingUserNameValidator(identityService: IdentityService,\n                                          messageService: MessageService,\n                                          userID: string): AsyncValidatorFn {\n  return (control: AbstractControl): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> => {\n    return timer(500).pipe(\n      switchMap( () => identityService.getUserByUserName(control.value).pipe(\n        map(data => {\n          if (data['r_user'] && data['r_user'][0]['USER_ID'] !== userID) {\n            return {message: messageService.generateMessage('USER', 'USER_NAME_EXISTS',\n                'E', control.value).msgShortText};\n          } else {\n            return null;\n          }\n        })\n      )));\n  };\n}\n\nexport function existingUserIDValidator(identityService: IdentityService,\n                                        messageService: MessageService): AsyncValidatorFn {\n  return (control: AbstractControl): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> => {\n    return timer(500).pipe(\n      switchMap( () => identityService.getUserByUserID(control.value).pipe(\n        map(data => {\n          if (data['r_user'] && data['r_user'][0]['USER_ID'] === control.value) {\n            return {message: messageService.generateMessage('USER', 'USER_ID_EXISTS',\n                'E', control.value).msgShortText};\n          } else {\n            return null;\n          }\n        })\n      )));\n  };\n}\n\nexport function existingPermissionValidator(identityService: IdentityService,\n                                          messageService: MessageService): AsyncValidatorFn {\n  return (control: AbstractControl): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> => {\n    return timer(500).pipe(\n      switchMap( () => identityService.getPermissionByName(control.value).pipe(\n        map(data => {\n          if (data['r_role'] && data['r_role'][0]['NAME'] === control.value) {\n            return {message: messageService.generateMessage('PERMISSION', 'PERMISSION_EXISTS',\n                'E', control.value).msgShortText};\n          } else {\n            return null;\n          }\n        })\n      )));\n  };\n}\n\nexport function existingAppValidator(identityService: IdentityService,\n                                            messageService: MessageService): AsyncValidatorFn {\n  return (control: AbstractControl): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> => {\n    return timer(500).pipe(\n      switchMap( () => identityService.getAppByID(control.value).pipe(\n        map(data => {\n          if (data['app'] && data['app'][0]['APP_ID'] === control.value) {\n            return {message: messageService.generateMessage('APP', 'APP_EXISTS',\n                'E', control.value).msgShortText};\n          } else {\n            return null;\n          }\n        })\n      )));\n  };\n}\n\nexport function existingAuthObjectValidator(identityService: IdentityService,\n                                     messageService: MessageService): AsyncValidatorFn {\n  return (control: AbstractControl): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> => {\n    return timer(500).pipe(\n      switchMap( () => identityService.getAuthObjectByName(control.value).pipe(\n        map(data => {\n          if (data['authObject'] && data['authObject'][0]['OBJ_NAME'] === control.value) {\n            return {message: messageService.generateMessage('AUTH_OBJECT', 'AUTH_OBJECT_EXISTS',\n                'E', control.value).msgShortText};\n          } else {\n            return null;\n          }\n        })\n      )));\n  };\n}\n\nexport function existingAppCategoryValidator(identityService: IdentityService,\n                                            messageService: MessageService): AsyncValidatorFn {\n  return (control: AbstractControl): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> => {\n    return timer(500).pipe(\n      switchMap( () => identityService.getAppCategoryByID(control.value).pipe(\n        map(data => {\n          if (data['r_app_category'] && data['r_app_category'][0]['ID'] === control.value) {\n            return {message: messageService.generateMessage('APP_CATEGORY', 'APP_CATEGORY_EXISTS',\n                'E', control.value).msgShortText};\n          } else {\n            return null;\n          }\n        })\n      )));\n  };\n}\n\nexport function existingProfileValidator(identityService: IdentityService,\n                                             messageService: MessageService): AsyncValidatorFn {\n  return (control: AbstractControl): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> => {\n    return timer(500).pipe(\n      switchMap( () => identityService.getAuthProfileByName(control.value).pipe(\n        map(data => {\n          if (data['authProfile'] && data['authProfile'][0]['PROFILE_NAME'] === control.value) {\n            return {message: messageService.generateMessage('AUTH_PROFILE', 'AUTH_PROFILE_EXISTS',\n                'E', control.value).msgShortText};\n          } else {\n            return null;\n          }\n        })\n      )));\n  };\n}\n","import { Component, OnInit } from '@angular/core';\nimport {FormArray, FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {AttributeBase, AttributeControlService, Entity, EntityService, RelationMeta, Relationship, UiMapperService} from 'jor-angular';\nimport {ActivatedRoute, ParamMap, Router} from '@angular/router';\nimport {DialogService} from '../../dialog.service';\nimport {IdentityService} from '../../identity.service';\nimport {Message, MessageService} from 'ui-message-angular';\nimport {switchMap} from 'rxjs/operators';\nimport {forkJoin, Observable, of} from 'rxjs';\nimport {existingAuthObjectValidator} from '../../async-validators';\n\n@Component({\n  selector: 'app-auth-object-detail',\n  templateUrl: './auth-object-detail.component.html',\n  styleUrls: ['./auth-object-detail.component.css']\n})\nexport class AuthObjectDetailComponent implements OnInit {\n  mainForm: FormGroup;\n  relationMetas: RelationMeta[];\n  attrCtrls: AttributeBase[];\n  readonly = true;\n  isNewMode = false;\n  action: string;\n  instanceGUID: string;\n  originalValue = {};\n  changedValue = {};\n  tabStrip = 1;\n\n  constructor(private fb: FormBuilder,\n              private route: ActivatedRoute,\n              private router: Router,\n              private dialogService: DialogService,\n              private identityService: IdentityService,\n              private attributeControlService: AttributeControlService,\n              private entityService: EntityService,\n              private uiMapperService: UiMapperService,\n              private messageService: MessageService) {\n  }\n\n  ngOnInit() {\n    this.route.paramMap.pipe(\n      switchMap((params: ParamMap) => {\n        this.action = params.get('action');\n        if (this.action === 'new') {\n          this.isNewMode = true;\n          return forkJoin([\n            this.entityService.getRelationMetaOfEntity('authObject'),\n            this._createNewEntity()\n          ]);\n        } else {\n          this.isNewMode = false;\n          return forkJoin([\n            this.entityService.getRelationMetaOfEntity('authObject'),\n            this.identityService.getAuthObjectDetail(params.get('authObjName'))\n          ]);\n        }\n      })\n    ).subscribe( data => {\n      this.relationMetas = data[0] as RelationMeta[];\n      this.attrCtrls = this.attributeControlService.toAttributeControl(\n        this.relationMetas.find( relationMeta => relationMeta.RELATION_ID === 'authObject').ATTRIBUTES);\n      if ('ENTITY_ID' in data[1]) {\n        this.instanceGUID = data[1]['INSTANCE_GUID'];\n        this._generateMainForm(<Entity>data[1]);\n        if (this.isNewMode || this.action === 'change') {\n          this._switch2EditMode();\n        } else {\n          this._switch2DisplayMode();\n        }\n      } else {\n        const errorMessages = <Message[]>data[1];\n        errorMessages.forEach( msg => this.messageService.add(msg));\n      }\n    });\n  }\n\n  getAttrCtrlFromID(fieldName: string): AttributeBase {\n    return this.attrCtrls.find( attrCtrl => attrCtrl.name === fieldName);\n  }\n\n  switchTabStrip(tabStripID: number): void {\n    this.tabStrip = tabStripID;\n  }\n\n  switchEditDisplay(): void {\n    if (this.readonly ) {\n      this._switch2EditMode();\n    } else {\n      if (this.mainForm.dirty) {\n        this.dialogService.confirm('Discard changes?').subscribe(confirm => {\n          if (confirm) {\n            this.mainForm.reset(this.originalValue);\n            this._switch2DisplayMode();\n          }\n        });\n      } else {\n        this._switch2DisplayMode();\n      }\n    }\n    this.messageService.clearMessages();\n  }\n\n  _switch2DisplayMode(): void {\n    this.readonly = true;\n\n    const appIDCtrl = this.mainForm.get('OBJ_NAME') as FormControl;\n    appIDCtrl.clearAsyncValidators();\n\n    const authFieldArray = this.mainForm.get('authFields') as FormArray;\n    let lastIndex = authFieldArray.length - 1;\n    while (lastIndex >= 0) {\n      const authFieldGroup = authFieldArray.at(lastIndex);\n      if (authFieldGroup.invalid || !authFieldGroup.value.FIELD_NAME) {\n        authFieldArray.removeAt(lastIndex);\n      }\n      lastIndex--;\n    }\n\n    this.mainForm.markAsPristine();\n    // Replace the URL from change to display\n    window.history.replaceState({}, '', `/auth-objects/${appIDCtrl.value};action=display`);\n  }\n\n  _switch2EditMode(): void {\n    this.readonly = false;\n\n    const authObjCtrl = this.mainForm.get('OBJ_NAME') as FormControl;\n    if (this.isNewMode) {\n      authObjCtrl.setAsyncValidators(\n        existingAuthObjectValidator(this.identityService, this.messageService));\n    }\n\n    const appCategoryArray = this.mainForm.get('authFields') as FormArray;\n    appCategoryArray.push( this.fb.group({\n      FIELD_NAME: [''],\n      DATA_ELEMENT: [''],\n      auth_field_INSTANCE_GUID: [''],\n      RELATIONSHIP_INSTANCE_GUID: ['']\n    }));\n\n    // Replace the URL from to display\n    if (this.action === 'display') {this.action = 'change'; }\n    window.history.replaceState({}, '', `/auth-objects/${authObjCtrl.value};action=` + this.action);\n  }\n\n  _createNewEntity(): Observable<Entity> {\n    const authObjectDetail = new Entity();\n    authObjectDetail.ENTITY_ID = 'authObject';\n    authObjectDetail['authObject'] = [\n      { OBJ_NAME: '', DESC: '', CREATED_BY: '', CREATE_TIME: '', CHANGED_BY: '', CHANGE_TIME: '' }\n    ];\n    authObjectDetail['relationships'] = [];\n    return of(authObjectDetail);\n  }\n\n  _generateMainForm(data: Entity): void {\n    this.mainForm = this.fb.group({\n      OBJ_NAME: [data['authObject'][0]['OBJ_NAME'], [Validators.required]],\n      DESC: [data['authObject'][0]['DESC']],\n      admin: this.fb.group({\n        CREATED_BY: [data['authObject'][0]['CREATED_BY']],\n        CREATE_TIME: [data['authObject'][0]['CREATE_TIME']],\n        CHANGED_BY: [data['authObject'][0]['CHANGED_BY']],\n        CHANGE_TIME: [data['authObject'][0]['CHANGE_TIME']]\n      })\n    });\n    const parsedRelationship = this._parseRelationships( data['relationships'] );\n    this.mainForm.addControl('authFields',\n      this.fb.array(parsedRelationship.authFields.map( authField => this.fb.group( authField ))));\n    this.originalValue = this.mainForm.getRawValue();\n  }\n\n  _parseRelationships( relationships: Relationship[] ): any {\n    const parsedRelationship = {\n      authFields : []\n    };\n    if (!relationships) { return parsedRelationship; }\n    relationships.forEach( relationship => {\n      switch (relationship.RELATIONSHIP_ID) {\n        case 'rs_auth_object_field':\n          __parseAuthField(relationship);\n          break;\n        default:\n        // Do nothing.\n      }\n    });\n    return parsedRelationship;\n\n    function __parseAuthField( relationship: Relationship): void {\n      relationship.values.forEach( value => {\n        parsedRelationship.authFields.push({\n          RELATIONSHIP_INSTANCE_GUID: value['RELATIONSHIP_INSTANCE_GUID'],\n          auth_field_INSTANCE_GUID: value['PARTNER_INSTANCES'][0]['INSTANCE_GUID'],\n          FIELD_NAME: value['PARTNER_INSTANCES'][0]['authField'][0]['FIELD_NAME'],\n          DATA_ELEMENT: value['PARTNER_INSTANCES'][0]['authField'][0]['DATA_ELEMENT']\n        });\n      });\n    }\n  }\n\n  _resetValue(data: Entity): void {\n    this.originalValue = {\n      OBJ_NAME: data['authObject'][0]['OBJ_NAME'],\n      DESC: data['authObject'][0]['DESC'],\n      admin: {\n        CREATED_BY: data['authObject'][0]['CREATED_BY'],\n        CREATE_TIME: data['authObject'][0]['CREATE_TIME'],\n        CHANGED_BY: data['authObject'][0]['CHANGED_BY'],\n        CHANGE_TIME: data['authObject'][0]['CHANGE_TIME']\n      }\n    };\n    const parsedRelationship = this._parseRelationships( data['relationships'] );\n    this.originalValue['authFields'] = parsedRelationship.authFields;\n    this.mainForm.reset(this.originalValue);\n  }\n\n  save() {\n    this.messageService.clearMessages();\n    if (this._composeChanges()) {\n      this.identityService.save(<Entity>this.changedValue).subscribe( data => {\n        this.changedValue = {};\n        if ('INSTANCE_GUID' in data) {\n          const authObjName = data['authObject'][0]['OBJ_NAME'];\n          this.instanceGUID = data['INSTANCE_GUID'];\n          this.isNewMode = false;\n          this.identityService.getAuthObjectDetail(authObjName).subscribe(instance => {\n            if ('ENTITY_ID' in instance) {\n              this._switch2DisplayMode();\n              this._resetValue(<Entity>instance);\n            } else {\n              const errorMessages = <Message[]>instance;\n              errorMessages.forEach( msg => this.messageService.add(msg));\n            }\n          });\n          this.messageService.reportMessage('AUTH_OBJECT', 'SAVED', 'S', authObjName);\n        } else {\n          const errorMessages = <Message[]>data;\n          errorMessages.forEach( msg => this.messageService.add(msg));\n        }\n      });\n    }\n  }\n\n  _composeChanges() {\n    if (this.mainForm.invalid) {\n      this.messageService.reportMessage('AUTH_OBJECT', 'INVALID', 'E');\n      return false;\n    }\n\n    if (this.mainForm.dirty === false) {\n      this.messageService.reportMessage('GENERAL', 'NO_CHANGE', 'W');\n      return false;\n    }\n\n    this.changedValue['ENTITY_ID'] = 'authObject';\n    this.changedValue['INSTANCE_GUID'] = this.instanceGUID;\n\n    if (this.isNewMode) {\n      this.changedValue['authObject'] = {\n        action: 'add', OBJ_NAME: this.mainForm.get('OBJ_NAME').value,\n        CREATED_BY: this.identityService.Session.USER_ID, CREATE_TIME: this.identityService.CurrentTime,\n        CHANGED_BY: this.identityService.Session.USER_ID, CHANGE_TIME: this.identityService.CurrentTime};\n    } else {\n      this.changedValue['authObject'] = {\n        action: 'update', CHANGED_BY: this.identityService.Session.USER_ID, CHANGE_TIME: this.identityService.CurrentTime};\n    }\n\n    if (this.mainForm.get('DESC').dirty) {\n      this.changedValue['authObject']['DESC'] = this.mainForm.get('DESC').value;\n    }\n\n    const authFieldFormArray = this.mainForm.get('authFields') as FormArray;\n    const relationship = this.uiMapperService.composeChangedRelationship(\n      'rs_auth_object_field',\n      [{ENTITY_ID: 'authField', ROLE_ID: 'auth_field'}],\n      authFieldFormArray,\n      this.originalValue['authFields'],\n      ['FIELD_NAME', 'DATA_ELEMENT']);\n\n    if (relationship) {this.changedValue['relationships'] = [relationship]; }\n\n    return true;\n  }\n\n  canDeactivate(): Observable<boolean> | boolean {\n    if (this.isNewMode || (this.mainForm && this.mainForm.dirty)) {\n      return this.dialogService.confirm('Discard changes?');\n    } else {\n      return true;\n    }\n  }\n\n}\n","<nav class=\"navbar dk-fixed-top navbar-light bg-light\">\n  <div>\n    <span class=\"font-weight-bold mb-0 mx-1\">{{isNewMode? 'New Authorization Object' :\n      readonly? 'Display Authorization Object' : 'Change Authorization Object'}}</span>\n  </div>\n\n  <div class=\"flex-row-reverse\">\n    <button class=\"btn btn-sm btn-outline-primary mr-2\" type=\"button\" title=\"Edit/Display\" id=\"editDisplay\" (click)=\"switchEditDisplay()\">\n      <span *ngIf=\"readonly\" class=\"fas fa-edit\"> Edit</span>\n      <span *ngIf=\"!readonly\" class=\"fas fa-glasses\"> Display</span>\n    </button>\n    <button class=\"btn btn-sm btn-outline-primary mr-2\" type=\"button\" title=\"Save\" id=\"save\" (click)=\"save()\" [disabled]=\"readonly\">\n      <span class=\"fas fa-save\"> Save</span>\n    </button>\n  </div>\n</nav>\n\n<div class=\"mt-2 mb-2\">\n  <dk-message></dk-message>\n</div>\n\n<div *ngIf=\"mainForm\" class=\"ml-2\">\n  <div class=\"mt-2 ml-1 row\">\n    <dk-app-attribute-form2 class=\"col-md-6 col-lg-4\"\n                            [attributeControl]=\"getAttrCtrlFromID('OBJ_NAME')\"\n                            [formGroup]=\"mainForm\"\n                            [readonly]=\"!isNewMode\"\n                            [isSmallSize] = \"true\">\n    </dk-app-attribute-form2>\n    <dk-app-attribute-form2 class=\"col-md-6 col-lg-4\"\n                            [attributeControl]=\"getAttrCtrlFromID('DESC')\"\n                            [formGroup]=\"mainForm\"\n                            [readonly]=\"readonly\"\n                            [isSmallSize] = \"true\">\n    </dk-app-attribute-form2>\n  </div>\n\n  <ul class=\"nav nav-tabs mt-1\">\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [class.active]=\"tabStrip===1\" href=\"javascript:void(0);\" (click)=\"switchTabStrip(1)\">Authorization Fields</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [class.active]=\"tabStrip===2\" href=\"javascript:void(0);\" (click)=\"switchTabStrip(2)\">Admin</a>\n    </li>\n  </ul>\n\n  <div class=\"mt-2\" [ngSwitch]=\"tabStrip\">\n    <app-auth-object-field *ngSwitchCase=\"1\" [mainForm]=\"mainForm\"  [readonly]=\"readonly\"></app-auth-object-field>\n    <app-admin-info *ngSwitchCase=\"2\" [mainForm]=\"mainForm\" [relationMetas]=\"relationMetas\" [adminRelation]=\"'authObject'\"></app-admin-info>\n  </div>\n</div>\n","import {Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {AbstractControl, FormArray, FormBuilder, FormGroup} from '@angular/forms';\nimport {IdentityService} from '../../../identity.service';\nimport {SearchHelpComponent} from 'jor-angular';\n\n@Component({\n  selector: 'app-auth-object-field',\n  templateUrl: './auth-object-field.component.html',\n  styleUrls: ['./auth-object-field.component.css']\n})\nexport class AuthObjectFieldComponent implements OnInit {\n  @Input() readonly: boolean;\n  @Input() mainForm: FormGroup;\n  authFieldFormArray: FormArray;\n\n  constructor(private fb: FormBuilder,\n              private identityService: IdentityService) { }\n\n  @ViewChild(SearchHelpComponent, { static: true })\n  private searchHelpComponent: SearchHelpComponent;\n\n  ngOnInit() {\n    this.authFieldFormArray = this.mainForm.get('authFields') as FormArray;\n    // Recheck each role since every time the template is initialized, Angular clears the error status.\n    if (!this.readonly) {\n      this.authFieldFormArray.controls.forEach( (ctrl, index) => {\n        this.onChangeKey(index);\n      });\n    }\n  }\n\n  delete(index: number): void {\n    if (index !== this.authFieldFormArray.length - 1) {\n      this.authFieldFormArray.removeAt(index);\n      this.authFieldFormArray.markAsDirty();\n    }\n  }\n\n  onChangeKey(index: number): void {\n    const currentFormGroup = this.authFieldFormArray.at(index);\n    if (this.isExisting(currentFormGroup)) {\n      currentFormGroup.get('FIELD_NAME').setErrors({message: 'Duplicate Authorization Field'});\n      return;\n    }\n\n    if (index === this.authFieldFormArray.length - 1 && currentFormGroup.value.FIELD_NAME.trim() !== '') {\n      // Only work if the last line is not new and empty\n      this.authFieldFormArray.push(\n        this.fb.group({\n          FIELD_NAME: [''],\n          DATA_ELEMENT: [''],\n          auth_field_INSTANCE_GUID: [''],\n          RELATIONSHIP_INSTANCE_GUID: ['']\n        })\n      );\n    }\n\n    if (currentFormGroup.value.FIELD_NAME) {\n      this.identityService.getAuthFieldInfo(currentFormGroup.value.FIELD_NAME).subscribe(data => {\n        if (data['msgCat']) {\n          currentFormGroup.get('FIELD_NAME').setErrors({message: data['msgShortText']});\n        } else {\n          currentFormGroup.get('DATA_ELEMENT').setValue(data['DATA_ELEMENT']);\n          currentFormGroup.get('auth_field_INSTANCE_GUID').setValue(data['INSTANCE_GUID']);\n        }\n      });\n    }\n  }\n\n  isExisting(key: AbstractControl): boolean {\n    const existIndex = this.authFieldFormArray.controls.findIndex(\n      ctrl => ctrl.value.FIELD_NAME === key.value.FIELD_NAME\n        && ctrl.pristine && ctrl.value.FIELD_NAME !== '');\n    return existIndex !== -1 ;\n  }\n\n  onSearchHelp(rowID: number, exportObject: AbstractControl): void {\n    const afterExportFn = function (context: any, rowIDx: number) {\n      return () => context.onChangeKey(rowIDx);\n    }(this, rowID).bind(this);\n\n    this.searchHelpComponent.openSearchHelpModalByEntity('authField', 'authField',\n      exportObject, this.readonly, null, null, afterExportFn);\n  }\n\n}\n","<table class=\"table table-bordered table-sm dk-table ml-3 mt-4\" [formGroup]=\"mainForm\">\n  <thead class=\"thead-light\">\n  <tr>\n    <th scope=\"col\">Authorization Field</th>\n    <th scope=\"col\">Data Element</th>\n    <th scope=\"col\">Action</th>\n  </tr>\n  </thead>\n\n  <tbody formArrayName=\"authFields\" class=\"mb-4\">\n  <tr *ngFor=\"let authFieldForm of authFieldFormArray.controls; let i = index\">\n    <td [formGroup]=\"authFieldForm\">\n      <div class=\"input-group dk-name\">\n        <input class=\"form-control form-control-sm\" type=\"text\" formControlName=\"FIELD_NAME\"\n               [readonly]=\"readonly || isExisting(authFieldForm) && authFieldForm.valid\" (change)=\"onChangeKey(i)\">\n        <div class=\"invalid-tooltip\">\n          {{authFieldForm.get('FIELD_NAME').errors?.message}}\n        </div>\n        <div class=\"input-group-append\">\n          <button class=\"btn btn-sm btn-outline-secondary btn-light\" type=\"button\" id=\"searchPermission\"\n                  (click)=\"onSearchHelp(i, authFieldForm)\">\n            <span class=\"fas fa-search\"></span>\n          </button>\n        </div>\n      </div>\n    </td>\n    <td [formGroup]=\"authFieldForm\" class=\"dk-description\">\n      <input type=\"text\" formControlName=\"DATA_ELEMENT\" readonly class=\"form-control form-control-sm\">\n    </td>\n    <td class=\"dk-actions\">\n      <button class=\"btn btn-sm\" type=\"button\" id=\"delete\" [disabled]=\"readonly\" (click)=\"delete(i)\" title=\"Delete\">\n        <span class=\"far fa-trash-alt\"></span>\n      </button>\n    </td>\n  </tr>\n  </tbody>\n</table>\n\n<dk-app-search-help></dk-app-search-help>\n","import { Component, OnInit } from '@angular/core';\nimport {AppList, AuthObjList} from '../../identity';\nimport {IdentityService} from '../../identity.service';\nimport {Message, MessageService, messageType} from 'ui-message-angular';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-auth-object-list',\n  templateUrl: './auth-object-list.component.html',\n  styleUrls: ['./auth-object-list.component.css']\n})\nexport class AuthObjectListComponent implements OnInit {\n  authObjName: string;\n  authObjDesc: string;\n  authObjects: AuthObjList[];\n  showDeletionConfirmation = false;\n  toBeDeletedInstance: string;\n\n  get displayDeletionConfirmation() {return this.showDeletionConfirmation ? 'block' : 'none'; }\n\n  constructor(private identityService: IdentityService,\n              private messageService: MessageService,\n              private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  search() {\n    this.messageService.clearMessages();\n    this.authObjects = [];\n    this.authObjName = this.authObjName ? this.authObjName.trim() : '';\n    this.authObjDesc = this.authObjDesc ? this.authObjDesc.trim() : '';\n    this.identityService.searchAuthObjects(this.authObjName, this.authObjDesc).subscribe(\n      data => {\n        if (!data[0]) {\n          this.messageService.reportMessage('GENERAL', 'EMPTY_LIST', messageType.Warning);\n        } else if (data[0]['msgCat']) {\n          const messages = <Message[]>data;\n          messages.forEach( msg => this.messageService.add(msg));\n        } else {\n          this.authObjects = <AuthObjList[]>data;\n        }\n      }\n    );\n  }\n\n  enterSearch($event): void {\n    if ($event.keyCode === 13 ) {\n      this.search();\n    }\n  }\n\n  new(): void {\n    this.router.navigate(['auth-objects', '/', {action: 'new'}]);\n  }\n\n  display(authObjName: string): void {\n    this.router.navigate(['auth-objects', authObjName, {action: 'display'}]);\n  }\n\n  change(authObjName: string): void {\n    this.router.navigate(['auth-objects', authObjName, {action: 'change'}]);\n  }\n\n  delete(authObjName: string): void {\n    this.toBeDeletedInstance = authObjName;\n    this.showDeletionConfirmation = true;\n  }\n\n  cancelDeletion(): void {\n    this.showDeletionConfirmation = false;\n  }\n\n  confirmDeletion(): void {\n    const toBeDeletedInstanceGUID = this.authObjects.find(\n      ele => ele.OBJ_NAME === this.toBeDeletedInstance).INSTANCE_GUID;\n    this.identityService.delete(toBeDeletedInstanceGUID).subscribe( errorMsg => {\n      this.showDeletionConfirmation = false;\n      if (errorMsg) {\n        const messages = <Message[]>errorMsg;\n        messages.forEach( msg => this.messageService.add(msg));\n      } else {\n        this.search();\n      }\n    });\n  }\n}\n","<div class=\"card mb-3 pt-3\">\n  <div class=\"mt-2 pl-4 row\">\n    <div class=\"col-6 form-group row\">\n      <label for=\"auth_obj_name\" class=\"col-sm-3 col-form-label\">Object Name:</label>\n      <input id=\"auth_obj_name\" name=\"auth_obj_name\" [(ngModel)]=\"authObjName\" type=\"text\"\n             class=\"col-sm-6 form-control form-control-sm\" (keyup)=\"enterSearch($event)\" autofocus>\n    </div>\n    <div class=\"col-6 form-group row\">\n      <label for=\"auth_obj_desc\" class=\"col-sm-3 col-form-label\">Description:</label>\n      <input id=\"auth_obj_desc\" name=\"auth_obj_desc\" [(ngModel)]=\"authObjDesc\" type=\"text\"\n             class=\"col-sm-6 form-control form-control-sm\" (keyup)=\"enterSearch($event)\">\n    </div>\n  </div>\n\n  <div class=\"mb-4\">\n    <button type=\"button\" id=\"search\" class=\"btn btn-primary btn-sm float-right mr-4\" (click)=\"search()\">Search</button>\n  </div>\n</div>\n\n<div class=\"mt-2 mb-4 mx-4\">\n  <dk-message></dk-message>\n  <div class=\"btn-toolbar justify-content-end my-2\" role=\"toolbar\">\n    <button type=\"button\" id=\"new\" class=\"btn btn-light btn-sm\" (click)=\"new()\">\n      <span class=\"fas fa-plus\"></span> New</button>\n  </div>\n  <table class=\"table table-bordered table-sm\">\n    <thead class=\"thead-light\">\n    <tr>\n      <th scope=\"col\">Name</th>\n      <th scope=\"col\">Desc</th>\n      <th scope=\"col\">Changed By</th>\n      <th scope=\"col\">Changed At</th>\n      <th scope=\"col\">Action</th>\n    </tr>\n    </thead>\n\n    <tbody>\n    <tr *ngFor=\"let authObj of authObjects\">\n      <td><a [routerLink]=\"['/auth-objects', authObj.OBJ_NAME, {action: 'display'}]\">{{authObj.OBJ_NAME}}</a></td>\n      <td>{{authObj.DESC}}</td>\n      <td>{{authObj.CHANGED_BY}}</td>\n      <td>{{authObj.CHANGE_TIME}}</td>\n      <td class=\"dk-actions\">\n        <button title=\"Display\" id=\"display\" class=\"btn btn-sm\" type=\"button\" (click)=\"display(authObj.OBJ_NAME)\">\n          <span class=\"fas fa-search\"></span>\n        </button>\n        <button title=\"Change\" id=\"change\" class=\"btn btn-sm\" type=\"button\" (click)=\"change(authObj.OBJ_NAME)\">\n          <span class=\"fas fa-pen\"></span>\n        </button>\n        <button title=\"Delete\" id=\"delete\" class=\"btn btn-sm\" type=\"button\" (click)=\"delete(authObj.OBJ_NAME)\">\n          <span class=\"far fa-trash-alt\"></span>\n        </button>\n      </td>\n    </tr>\n    </tbody>\n  </table>\n\n  <div class=\"modal\" [class.show]=\"showDeletionConfirmation\"\n       [ngStyle]=\"{'display': displayDeletionConfirmation}\" id=\"deletionConfirmation\" tabindex=\"-1\" role=\"dialog\">\n    <div class=\"modal-dialog modal-sm modal-dialog-centered\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"confirmDeletion\">Confirm Deletion</h5>\n          <button type=\"button\" class=\"close\" (click)=\"cancelDeletion()\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          <p>Are you sure to delete the authorization object '{{toBeDeletedInstance}}'?</p>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" id=\"cancel\" class=\"btn btn-sm btn-secondary\" (click)=\"cancelDeletion()\">Cancel</button>\n          <button type=\"button\" id=\"confirm\" class=\"btn btn-sm btn-primary\" (click)=\"confirmDeletion()\">Confirm</button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {FormArray, FormBuilder} from '@angular/forms';\nimport {AttributeBase} from 'jor-angular';\nimport {Operator, Option} from '../../../identity';\n\n@Component({\n  selector: 'app-auth-value-selopts',\n  templateUrl: './auth-value-selopts.component.html',\n  styleUrls: ['./auth-value-selopts.component.css']\n})\nexport class AuthValueSeloptsComponent implements OnInit {\n  @Input() selectOptionArray: FormArray;\n  @Input() attrCtrl: AttributeBase;\n  @Input() highAttrCtrl: AttributeBase;\n  @Input() readonly;\n  operatorEnum;\n  optionEnum;\n\n  constructor(private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.operatorEnum = Object.values(Operator);\n    this.optionEnum = Object.values(Option);\n  }\n\n  onChangeOperator(idx: number): void {\n    const selectOptionCtrl = this.selectOptionArray.at(idx);\n    if ( selectOptionCtrl.get('Operator').value === Operator.Between ) {\n      selectOptionCtrl.get('High').enable();\n    } else {\n      selectOptionCtrl.get('High').setValue('');\n      selectOptionCtrl.get('High').disable();\n    }\n  }\n\n  insertValue(idx: number): void {\n    this.selectOptionArray.insert(idx, this.fb.group({\n      Operator: Operator.Between,\n      Option: Option.Include,\n      Low: '',\n      High: ''\n    }));\n  }\n\n  deleteValue(idx: number): void {\n    if (this.selectOptionArray.length === 1) {\n      this.selectOptionArray.at(idx).get('Low').setValue('');\n      this.selectOptionArray.at(idx).get('High').setValue('');\n    } else {\n      this.selectOptionArray.removeAt(idx);\n    }\n    this.selectOptionArray.markAsDirty();\n  }\n}\n","<table class=\"table table-bordered table-sm\">\n  <thead class=\"thead-light\">\n  <tr>\n    <th scope=\"col\">Operator</th>\n    <th scope=\"col\">Option</th>\n    <th scope=\"col\">{{attrCtrl.label}} (Low)</th>\n    <th scope=\"col\">{{attrCtrl.label}} (High)</th>\n    <th scope=\"col\">Actions</th>\n  </tr>\n  </thead>\n\n  <tbody>\n  <tr *ngFor=\"let selectOptionForm of selectOptionArray.controls; let i = index\">\n    <td [formGroup]=\"selectOptionForm\" >\n      <select name=\"operator\" class=\"form-control form-control-sm\" required\n              formControlName=\"Operator\" (change)=\"onChangeOperator(i)\">\n        <option *ngFor=\"let operator of operatorEnum\" [value]=\"operator\">{{operator}}</option>\n      </select>\n    </td>\n    <td [formGroup]=\"selectOptionForm\" >\n      <select name=\"operator\" class=\"form-control form-control-sm\" required formControlName=\"Option\">\n        <option *ngFor=\"let option of optionEnum\" [value]=\"option\">{{option}}</option>\n      </select>\n    </td>\n    <td>\n      <dk-app-attribute [attributeControl]=\"attrCtrl\"\n                        [formGroup]=\"selectOptionForm\"\n                        [isSmallSize] = \"true\"\n                        [readonly]=\"readonly\">\n      </dk-app-attribute>\n    </td>\n    <td>\n      <dk-app-attribute [attributeControl]=\"highAttrCtrl\"\n                        [formGroup]=\"selectOptionForm\"\n                        [isSmallSize] = \"true\"\n                        [readonly]=\"readonly\">\n      </dk-app-attribute>\n    </td>\n    <td class=\"dk-actions\">\n      <button class=\"btn btn-sm\" type=\"button\" id=\"add\" [disabled]=\"readonly\" (click)=\"insertValue(i)\" title=\"Insert\">\n        <span class=\"fas fa-plus\"></span>\n      </button>\n      <button class=\"btn btn-sm\" type=\"button\" id=\"delete\" [disabled]=\"readonly\" (click)=\"deleteValue(i)\" title=\"Delete\">\n        <span class=\"far fa-trash-alt\"></span>\n      </button>\n    </td>\n  </tr>\n  </tbody>\n</table>\n","import {Component, Input, OnInit, Output} from '@angular/core';\nimport {FormArray, FormBuilder} from '@angular/forms';\nimport {AttributeBase} from 'jor-angular';\n\n@Component({\n  selector: 'app-auth-value-singles',\n  templateUrl: './auth-value-singles.component.html',\n  styleUrls: ['./auth-value-singles.component.css']\n})\nexport class AuthValueSinglesComponent implements OnInit {\n  @Input() singleValueArray: FormArray;\n  @Input() attrCtrl: AttributeBase;\n  @Input() readonly;\n  constructor(private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n  }\n\n  insertValue(idx: number): void {\n    this.singleValueArray.insert(idx, this.fb.group({\n      Low: ['']\n    }));\n  }\n\n  deleteValue(idx: number): void {\n    if (this.singleValueArray.length === 1 ) {\n      this.singleValueArray.at(idx).get('Low').setValue('');\n    } else {\n      this.singleValueArray.removeAt(idx);\n    }\n    this.singleValueArray.markAsDirty();\n  }\n}\n","<table class=\"table table-bordered table-sm\">\n  <thead class=\"thead-light\">\n  <tr>\n    <th scope=\"col\">{{attrCtrl.label}}</th>\n    <th scope=\"col\">Actions</th>\n  </tr>\n  </thead>\n\n  <tbody>\n  <tr *ngFor=\"let singleValueForm of singleValueArray.controls; let i = index\">\n    <td>\n      <dk-app-attribute [attributeControl]=\"attrCtrl\"\n                        [formGroup]=\"singleValueForm\"\n                        [isSmallSize] = \"true\"\n                        [readonly]=\"readonly\">\n      </dk-app-attribute>\n    </td>\n    <td class=\"dk-actions\">\n      <button class=\"btn btn-sm\" type=\"button\" id=\"add\" [disabled]=\"readonly\" (click)=\"insertValue(i)\" title=\"Insert\">\n        <span class=\"fas fa-plus\"></span>\n      </button>\n      <button class=\"btn btn-sm\" type=\"button\" id=\"delete\" [disabled]=\"readonly\" (click)=\"deleteValue(i)\" title=\"Delete\">\n        <span class=\"far fa-trash-alt\"></span>\n      </button>\n    </td>\n  </tr>\n  </tbody>\n</table>\n","import {Component, Input, OnChanges, OnInit} from '@angular/core';\nimport {Operator, Option, SelectOption} from '../../identity';\nimport {FormArray, FormBuilder, FormGroup} from '@angular/forms';\nimport {Attribute, AttributeBase, AttributeControlService, EntityService} from 'jor-angular';\n\n@Component({\n  selector: 'app-auth-value',\n  templateUrl: './auth-value.component.html',\n  styleUrls: ['./auth-value.component.css']\n})\nexport class AuthValueComponent implements OnInit, OnChanges {\n  @Input() authFieldValueForm: FormGroup;\n  @Input() readonly: boolean;\n  tabStrip = 1;\n  fieldName: string;\n  singleValueArray: FormArray;\n  selectOptionArray: FormArray;\n  attrCtrl: AttributeBase;\n  highAttrCtrl: AttributeBase;\n  fullPermission: boolean;\n\n  constructor(private fb: FormBuilder,\n              private entityService: EntityService,\n              private attributeControlService: AttributeControlService) { }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges(): void {\n    if (!this.authFieldValueForm) { return; }\n    if (this.singleValueArray) { this.singleValueArray.clear(); }\n    if (this.selectOptionArray) { this.selectOptionArray.clear(); }\n    this.fullPermission = false;\n    this.attrCtrl = null;\n    this.tabStrip = 1;\n    const authValues = this.authFieldValueForm.get('AUTH_VALUE').value;\n    this.entityService.getElementMeta(this.authFieldValueForm.get('DATA_ELEMENT').value)\n      .subscribe( attrCtrl => {\n        const attribute = <Attribute>attrCtrl;\n        attribute.ATTR_GUID = attrCtrl.ELEMENT_ID;\n        attribute.ATTR_NAME = attrCtrl.ELEMENT_ID;\n        attribute.DATA_ELEMENT = attrCtrl.ELEMENT_ID;\n        this.attrCtrl = this.attributeControlService.toSingleAttributeControl(attribute);\n        this.attrCtrl.name = 'Low';\n        this.highAttrCtrl = this.attributeControlService.toSingleAttributeControl(attribute);\n        this.highAttrCtrl.name = 'High';\n      } );\n\n    this.fieldName = this.authFieldValueForm.get('FIELD_NAME').value;\n    if (!authValues || !JSON.parse(authValues)) {\n        this.singleValueArray = this.fb.array([this.fb.group({Low: ''})]);\n        this.selectOptionArray = this.fb.array([this.fb.group({\n          Operator: [{value: Operator.Between, disabled: this.readonly}],\n          Option: [{value: Option.Include, disabled: this.readonly}], Low: '', High: ''})]);\n    } else {\n      const authValueArray = JSON.parse(authValues);\n      if (authValueArray === '*') {\n        this._setFullPermission(true);\n      } else {\n        const singleValues = [];\n        const selectOptions = [];\n        authValueArray.forEach(authValue => {\n          if (typeof authValue === 'string') {\n            singleValues.push(this.fb.group({Low: authValue}));\n          } else {\n            selectOptions.push(this.fb.group({\n              Operator: [{value: authValue['Operator'], disabled: this.readonly}],\n              Option: [{value: authValue['Option'], disabled: this.readonly}],\n              Low: authValue['Low'],\n              High: authValue['High']\n            }));\n          }\n        });\n        if (singleValues.length > 0 ) {\n          this.singleValueArray = this.fb.array(singleValues);\n          this.tabStrip = 1;\n        } else {\n          this.singleValueArray = this.fb.array([this.fb.group({Low: ''})]);\n          this.tabStrip = 2;\n        }\n\n        if (selectOptions.length > 0) {\n          this.selectOptionArray = this.fb.array(selectOptions)\n        } else {\n          this.selectOptionArray = this.fb.array([this.fb.group({\n            Operator: [{value: Operator.Between, disabled: this.readonly}],\n            Option: [{value: Option.Include, disabled: this.readonly}], Low: '', High: ''})]);\n          this.tabStrip = 1;\n        }\n      }\n    }\n  }\n\n  switchTabStrip(tabStripID: number): void {\n    this.tabStrip = tabStripID;\n  }\n\n  generateAuthValue(): boolean {\n    if (!this.singleValueArray.dirty && !this.selectOptionArray.dirty) { return true; }\n    if (this.fullPermission) { return true; }\n    const authValues = [];\n    let hasErrors = false;\n    this.singleValueArray.controls.forEach( singleValueCtrl => {\n      const singleValue = singleValueCtrl.get('Low').value;\n      if (singleValue && authValues.findIndex( value => value === singleValue) === -1) {\n        authValues.push(singleValue);\n      }\n    });\n    this.selectOptionArray.controls.forEach( selectOptionCtrl => {\n      const selectOption = <SelectOption>selectOptionCtrl.value;\n      if (selectOption.Low) {\n        if (selectOption.Operator === Operator.Between &&\n          selectOption.Low >= selectOption.High) {\n          selectOptionCtrl.get('Low').setErrors({message: 'Low value is larger or equal to high value'});\n          hasErrors = true;\n        } else {\n          authValues.push(selectOption);\n        }\n      }\n    });\n    if (hasErrors) { return false; }\n\n    if (authValues.length === 0) {\n      this.authFieldValueForm.get('AUTH_VALUE').setValue('');\n      this.authFieldValueForm.get('STATUS').setValue('red');\n    } else {\n      this.authFieldValueForm.get('AUTH_VALUE').setValue(JSON.stringify(authValues, null, ' '));\n      this.authFieldValueForm.get('STATUS').setValue('green');\n    }\n    this.authFieldValueForm.get('AUTH_VALUE').markAsDirty();\n    return true;\n  }\n\n  checkFullPermission(): void {\n    this._setFullPermission(!this.fullPermission);\n    this.authFieldValueForm.get('AUTH_VALUE').markAsDirty();\n  }\n\n  _setFullPermission(isFull: boolean): void {\n    this.fullPermission = isFull;\n    this.authFieldValueForm.get('STATUS').setValue(isFull ? 'green' : 'red');\n    this.authFieldValueForm.get('AUTH_VALUE').setValue(isFull ? '\"*\"' : '');\n    if (isFull) {\n      this.singleValueArray = this.fb.array([]);\n      this.selectOptionArray = this.fb.array([]);\n    } else {\n      this.singleValueArray = this.fb.array([this.fb.group({Low: ''})]);\n      this.selectOptionArray = this.fb.array([this.fb.group({\n        Operator: Operator.Between, Option: Option.Include,\n        Low: '', High: ''})]);\n    }\n  }\n}\n","<div class=\"btn-toolbar\" role=\"toolbar\">\n  <div class=\"custom-control custom-checkbox\">\n    <input type=\"checkbox\" class=\"custom-control-input\" id=\"fullPermission\"\n           [(ngModel)]=\"fullPermission\" [disabled]=\"readonly\" (click)=\"checkFullPermission()\">\n    <label class=\"custom-control-label\" for=\"fullPermission\">Enable Full Permission</label>\n  </div>\n  <span *ngIf=\"authFieldValueForm\"\n        [ngClass]=\"{'green-light': authFieldValueForm.get('STATUS').value === 'green',\n                       'red-light': authFieldValueForm.get('STATUS').value  === 'red'}\"\n        class=\"ml-4 mt-1 traffic-light\"></span>\n</div>\n\n<ul class=\"nav nav-tabs mt-1\">\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" [class.active]=\"tabStrip===1\" href=\"javascript:void(0);\"\n       (click)=\"switchTabStrip(1)\">Single Values</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" [class.active]=\"tabStrip===2\" href=\"javascript:void(0);\"\n       (click)=\"switchTabStrip(2)\">Select Options</a>\n  </li>\n</ul>\n<div *ngIf=\"attrCtrl\" class=\"mt-2\" [ngSwitch]=\"tabStrip\">\n  <app-auth-value-singles *ngSwitchCase=\"1\"\n                          [singleValueArray]=\"singleValueArray\"\n                          [attrCtrl]=\"attrCtrl\"\n                          [readonly]=\"readonly\">\n  </app-auth-value-singles>\n  <app-auth-value-selopts *ngSwitchCase=\"2\"\n                          [selectOptionArray]=\"selectOptionArray\"\n                          [attrCtrl]=\"attrCtrl\"\n                          [highAttrCtrl]=\"highAttrCtrl\"\n                          [readonly]=\"readonly\">\n  </app-auth-value-selopts>\n</div>\n","import {Component, Input, OnChanges, OnInit, ViewChild} from '@angular/core';\nimport {AbstractControl, FormArray, FormBuilder, FormGroup} from '@angular/forms';\nimport {Attribute, AttributeBase, AttributeControlService, EntityService, SearchHelpComponent} from 'jor-angular';\nimport {AuthValueComponent} from './auth-value/auth-value.component';\nimport {IdentityService} from '../identity.service';\nimport {Message, MessageService} from 'ui-message-angular';\n\n@Component({\n  selector: 'app-authorization',\n  templateUrl: './authorization.component.html',\n  styleUrls: ['./authorization.component.css']\n})\nexport class AuthorizationComponent implements OnInit, OnChanges {\n  @Input() readonly: boolean;\n  @Input() mainForm: FormGroup;\n  @Input() ctrlName: string;\n  authObjFormArray: FormArray;\n  currentAuthFieldValueForm: FormGroup;\n  newAuthFieldValueForm: FormGroup;\n  isAuthValueModalShown = false;\n  isAuthObjectModalShown = false;\n  selectAll = false;\n  nodeID = 0;\n  authObjAttr: AttributeBase;\n  get displayAuthValueModal() {return this.isAuthValueModalShown ? 'block' : 'none'; }\n  get displayAuthObjectModal() {return this.isAuthObjectModalShown ? 'block' : 'none'; }\n\n  constructor( private fb: FormBuilder,\n               private identityService: IdentityService,\n               private entityService: EntityService,\n               private messageService: MessageService,\n               private attributeControlService: AttributeControlService ) { }\n\n  @ViewChild(SearchHelpComponent, { static: true })\n  private searchHelpComponent: SearchHelpComponent;\n  @ViewChild(AuthValueComponent, { static: true})\n  private authValueComponent: AuthValueComponent;\n\n  ngOnInit() {\n  }\n\n  ngOnChanges() {\n    if (!this.mainForm) { return; }\n    this.authObjFormArray = <FormArray>this.mainForm.get(this.ctrlName);\n    this.authObjFormArray.controls.forEach( ctrl => {\n      if (ctrl.get('ROW_TYPE').value === 'FIELD') { ctrl.get('CHECKED').disable(); }\n    });\n  }\n\n  checkAll(): void {\n    this.authObjFormArray.controls.forEach( authObjCtrl => authObjCtrl.get('CHECKED').setValue(!this.selectAll));\n    this.selectAll = !this.selectAll;\n  }\n\n  checkAuthObject(idx: number): void {\n    const currentAuthObjCtrl = this.authObjFormArray.at(idx);\n    this.authObjFormArray.controls.forEach( (authObjCtrl, index) => {\n      if (index <= idx) { return; }\n      if (authObjCtrl.get('NODE_ID').value === currentAuthObjCtrl.get('NODE_ID').value) {\n        authObjCtrl.get('CHECKED').setValue(!currentAuthObjCtrl.get('CHECKED').value);\n      }\n    });\n  }\n\n  add(): void {\n    this.newAuthFieldValueForm = this.fb.group({\n      CHECKED: '',\n      COLLAPSED: false,\n      NODE_ID: ++this.nodeID,\n      STATUS: 'red',\n      RELATIONSHIP_INSTANCE_GUID: '',\n      auth_object_INSTANCE_GUID: '',\n      AUTH_VALUE: '',\n      OBJ_NAME: '',\n      DESC: '',\n      ROW_TYPE: 'OBJECT',\n      FIELD_NAME: '',\n      DATA_ELEMENT: ''\n    });\n    if (!this.authObjAttr) {\n      this.entityService.getElementMeta('AUTH_OBJ_NAME')\n        .subscribe(elementMeta => {\n          const attribute = <Attribute>elementMeta;\n          attribute.ATTR_GUID = elementMeta.ELEMENT_ID;\n          attribute.ATTR_NAME = elementMeta.ELEMENT_ID;\n          attribute.DATA_ELEMENT = elementMeta.ELEMENT_ID;\n          this.authObjAttr = this.attributeControlService.toSingleAttributeControl(attribute);\n          this.authObjAttr.name = 'OBJ_NAME';\n        });\n    }\n    this.isAuthObjectModalShown = true;\n  }\n\n  closeAuthObjectModal(): void {\n    this.isAuthObjectModalShown = false;\n  }\n\n  addAuthObject(): void {\n    const authObjName = this.newAuthFieldValueForm.get('OBJ_NAME').value;\n    this.identityService.getAuthObjectDetail(authObjName)\n      .subscribe( data => {\n        if ('ENTITY_ID' in data) {\n          this.newAuthFieldValueForm.get('auth_object_INSTANCE_GUID').setValue(data['INSTANCE_GUID']);\n          this.newAuthFieldValueForm.get('DESC').setValue(data['authObject'][0]['DESC']);\n          this.authObjFormArray.push(this.newAuthFieldValueForm);\n          data['relationships'][0].values.forEach( value => {\n            this.authObjFormArray.push(this.fb.group({\n              CHECKED: [{value: '', disabled: true}],\n              COLLAPSED: false,\n              NODE_ID: this.nodeID,\n              STATUS: 'red',\n              RELATIONSHIP_INSTANCE_GUID: '',\n              auth_object_INSTANCE_GUID: value['PARTNER_INSTANCES'][0]['INSTANCE_GUID'],\n              AUTH_VALUE: '',\n              OBJ_NAME: authObjName,\n              DESC: this.newAuthFieldValueForm.get('DESC').value,\n              ROW_TYPE: 'FIELD',\n              FIELD_NAME: value['PARTNER_INSTANCES'][0]['authField'][0]['FIELD_NAME'],\n              DATA_ELEMENT: value['PARTNER_INSTANCES'][0]['authField'][0]['DATA_ELEMENT']\n            }));\n          });\n        } else {\n          const errorMessages = <Message[]>data;\n          errorMessages.forEach( msg => this.messageService.add(msg));\n        }\n        this.isAuthObjectModalShown = false;\n      });\n  }\n\n  delete(): void {\n    let index = this.authObjFormArray.controls.findIndex( authObjCtrl => authObjCtrl.get('CHECKED').value);\n    while ( index !== -1) {\n      this.authObjFormArray.removeAt(index);\n      this.authObjFormArray.markAsDirty();\n      index = this.authObjFormArray.controls.findIndex( authObjCtrl => authObjCtrl.get('CHECKED').value);\n    }\n  }\n\n  onSearchHelp(rowID: number, exportObject: AbstractControl): void {\n    const afterExportFn = function (context: any, rowIDx: number) {\n      return () => context.onChangeCategory(rowIDx);\n    }(this, rowID).bind(this);\n\n    this.searchHelpComponent.openSearchHelpModalByEntity('authObject', 'authObject',\n      exportObject, this.readonly, null, null, afterExportFn);\n  }\n\n  expendCollapse(idx: number): void {\n    const currentCtrl = this.authObjFormArray.at(idx);\n    const parentNode = currentCtrl.get('NODE_ID').value;\n    this.authObjFormArray.controls.forEach( appAuthObjCtrl => {\n      if (appAuthObjCtrl.get('NODE_ID').value === parentNode ) {\n        appAuthObjCtrl.get('COLLAPSED').setValue(!appAuthObjCtrl.get('COLLAPSED').value);\n      }\n    });\n  }\n\n  openAuthValueModal(idx: number): void {\n    this.isAuthValueModalShown = true;\n    this.currentAuthFieldValueForm = <FormGroup>this.authObjFormArray.at(idx);\n  }\n\n  addAuthValue(): void {\n    if ( this.authValueComponent.generateAuthValue() ) {\n      this._coordinateStatus(this.currentAuthFieldValueForm);\n      this.isAuthValueModalShown = false;\n    }\n  }\n\n  setFullPermission(idx: number): void {\n    const currentAuthObjForm = this.authObjFormArray.at(idx);\n    if (currentAuthObjForm.get('STATUS').value === 'green') { return; }\n\n    if (currentAuthObjForm.get('ROW_TYPE').value === 'OBJECT') {\n      currentAuthObjForm.get('STATUS').setValue('green');\n      this.authObjFormArray.controls.forEach( appAuthObjForm => {\n        if (appAuthObjForm.get('NODE_ID').value === currentAuthObjForm.get('NODE_ID').value &&\n            appAuthObjForm.get('ROW_TYPE').value === 'FIELD') {\n          appAuthObjForm.get('AUTH_VALUE').setValue('\"*\"');\n          appAuthObjForm.get('AUTH_VALUE').markAsDirty();\n          appAuthObjForm.get('STATUS').setValue('green');\n        }\n      });\n    } else { // Field\n      currentAuthObjForm.get('AUTH_VALUE').setValue('\"*\"');\n      currentAuthObjForm.get('AUTH_VALUE').markAsDirty();\n      currentAuthObjForm.get('STATUS').setValue('green');\n      this._coordinateStatus(currentAuthObjForm);\n    }\n  }\n\n  _coordinateStatus(appAuthObjForm: AbstractControl): void {\n    const parentAuthObjectCtrl = this.authObjFormArray.controls.find( ctrl =>\n      ctrl.get('ROW_TYPE').value === 'OBJECT' &&\n      ctrl.get('NODE_ID').value === appAuthObjForm.get('NODE_ID').value);\n    if (this.authObjFormArray.controls.findIndex( ctrl => ctrl.get('ROW_TYPE').value === 'FIELD' &&\n      ctrl.get('NODE_ID').value === appAuthObjForm.get('NODE_ID').value &&\n      ctrl.get('STATUS').value === 'red') === -1) {\n      parentAuthObjectCtrl.get('STATUS').setValue('green');\n    } else {\n      if (this.authObjFormArray.controls.findIndex( ctrl => ctrl.get('ROW_TYPE').value === 'FIELD' &&\n        ctrl.get('NODE_ID').value === appAuthObjForm.get('NODE_ID').value &&\n        ctrl.get('STATUS').value === 'green') === -1) {\n        parentAuthObjectCtrl.get('STATUS').setValue('red');\n      } else {\n        parentAuthObjectCtrl.get('STATUS').setValue('yellow');\n      }\n    }\n  }\n}\n","<div class=\"dk-auth-main mx-3\">\n<div class=\"btn-toolbar justify-content-end\" role=\"toolbar\">\n  <button type=\"button\" id=\"remove-object\" class=\"btn btn-light btn-sm\" (click)=\"delete()\" [disabled]=\"readonly\">\n    <span class=\"fas fa-minus\"></span> Remove</button>\n  <button type=\"button\" id=\"new\" class=\"btn btn-light btn-sm\" (click)=\"add()\" [disabled]=\"readonly\">\n    <span class=\"fas fa-plus\"></span> Add</button>\n</div>\n<table *ngIf=\"mainForm\"\n  class=\"table table-bordered table-sm dk-table\" [formGroup]=\"mainForm\">\n  <thead class=\"thead-light\">\n  <tr>\n    <th class=\"dk-checkbox\"><input name=\"btSelectAll\" type=\"checkbox\" (click)=\"checkAll()\"></th>\n    <th class=\"dk-auth-object\">Authorization Object / Field</th>\n    <th class=\"dk-auth-status\">Status</th>\n    <th class=\"dk-auth-value\">Description / Authorization Value</th>\n  </tr>\n  </thead>\n\n  <tbody>\n  <tr *ngFor=\"let authObjForm of authObjFormArray.controls; let i = index\" class=\"treegrid-expanded\"\n      [class.collapsed]=\"authObjForm.get('ROW_TYPE').value === 'FIELD' && authObjForm.get('COLLAPSED').value\">\n    <td class=\"dk-checkbox\" [formGroup]=\"authObjForm\">\n      <input class=\"form-control form-control-sm\" type=\"checkbox\" formControlName=\"CHECKED\" (click)=\"checkAuthObject(i)\">\n    </td>\n    <td *ngIf=\"authObjForm.get('ROW_TYPE').value === 'OBJECT'\" >\n      <span [ngClass]=\"{'treegrid-expander-expanded': !authObjForm.get('COLLAPSED').value,\n            'treegrid-expander-collapsed': authObjForm.get('COLLAPSED').value}\"\n            class=\"treegrid-expander\" (click)=\"expendCollapse(i)\">\n      </span>{{authObjForm.get('OBJ_NAME').value}}\n    </td>\n    <td *ngIf=\"authObjForm.get('ROW_TYPE').value === 'FIELD'\" >\n      <span class=\"treegrid-indent\"></span>\n      <span class=\"treegrid-expander\"></span>\n      {{authObjForm.get('FIELD_NAME').value}}\n    </td>\n\n    <td>\n      <button class=\"btn btn-sm\" type=\"button\" id=\"add\" [disabled]=\"readonly\" (click)=\"setFullPermission(i)\" title=\"Full Permission\">\n        <span [ngClass]=\"{'green-light': authObjForm.get('STATUS').value === 'green',\n                          'yellow-light': authObjForm.get('STATUS').value  === 'yellow',\n                          'red-light': authObjForm.get('STATUS').value  === 'red'}\"\n          class=\"traffic-light\"></span>\n      </button>\n    </td>\n\n    <td *ngIf=\"authObjForm.get('ROW_TYPE').value === 'OBJECT'\">{{authObjForm.get('DESC').value}}</td>\n    <td *ngIf=\"authObjForm.get('ROW_TYPE').value === 'FIELD'\">\n      <a class=\"nav-link\" href=\"javascript:void(0);\" (click)=\"openAuthValueModal(i)\">\n        {{authObjForm.get('AUTH_VALUE').value? authObjForm.get('AUTH_VALUE').value\n        : 'Click to maintain'}}</a>\n    </td>\n  </tr>\n  </tbody>\n</table>\n</div>\n\n<div class=\"modal fade\" id=\"maintainAuthValueDialog\" tabindex=\"-1\" role=\"dialog\"\n     [ngClass]=\"{'show': isAuthValueModalShown}\"\n     [ngStyle]=\"{'display': displayAuthValueModal}\">\n  <div class=\"modal-dialog modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"maintainAuthValueDialogTitle\">Maintain Authorization Value</h5>\n      </div>\n      <div class=\"modal-body\">\n        <dk-message></dk-message>\n        <app-auth-value [authFieldValueForm]=\"currentAuthFieldValueForm\" [readonly]=\"readonly\" ></app-auth-value>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-sm btn-primary\" (click)=\"addAuthValue()\">OK</button>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"modal fade\" id=\"addAuthObject\" tabindex=\"-1\" role=\"dialog\"\n     [ngClass]=\"{'show': isAuthObjectModalShown}\"\n     [ngStyle]=\"{'display': displayAuthObjectModal}\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"addAuthObjectTitle\">Add Authorization Object</h5>\n        <button type=\"button\" class=\"close\" (click)=\"closeAuthObjectModal()\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <dk-app-attribute-form2 *ngIf = \"newAuthFieldValueForm && authObjAttr\"\n                                [attributeControl]=\"authObjAttr\"\n                                [formGroup]=\"newAuthFieldValueForm\"\n                                [isSmallSize] = \"true\"\n                                [readonly]=\"false\">\n        </dk-app-attribute-form2>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"closeAuthObjectModal()\">Cancel</button>\n        <button type=\"button\" class=\"btn btn-sm btn-primary\" (click)=\"addAuthObject()\">Confirm</button>\n      </div>\n    </div>\n  </div>\n</div>\n","/**\n * The custom route reuse strategy inherits the \"RouteReuseStrategy\" to achieve a very usual case,\n * which by default, Angular doesn't support.\n * 1. Search for items based on filter conditions.\n * 2. Navigate to one of the item to the detail page(component).\n * 3. Navigate back to searched item list without re-initializing the search&list component again.\n * This requires the Angular route to save the search&list component, and restore it whenever back.\n * The detail solution is described in following thread:\n * https://stackoverflow.com/questions/41280471/how-to-implement-routereusestrategy-shoulddetach-for-specific-routes-in-angular\n */\nimport {ActivatedRouteSnapshot, DetachedRouteHandle, RouteReuseStrategy} from '@angular/router';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class CustomReuseStrategy implements RouteReuseStrategy {\n  routesToCache: string[] = ['users', 'apps', 'app-categories', 'auth-objects', 'permissions', 'profiles' ];\n  storedRouteHandles = new Map<string, DetachedRouteHandle>();\n\n  /**\n   * When navigation from a reusable component, and if shouldReuseRoute return false,\n   * this method is invoked to decide whether the current route should be stored.\n   * @param route\n   */\n  shouldDetach(route: ActivatedRouteSnapshot): boolean {\n    // console.log('detaching', route);\n    return this.routesToCache.indexOf(route.routeConfig.path) > -1;\n  }\n\n  /**\n   * If the current route need to be stored, that is shouldDetach return true,\n   * then on this method, you can implement a way to store routes. Usually in a Map.\n   * @param route\n   * @param handle\n   */\n  store(route: ActivatedRouteSnapshot, handle: DetachedRouteHandle): void {\n    // console.log('store', route);\n    this.storedRouteHandles.set(route.routeConfig.path, handle);\n  }\n\n  /**\n   * When navigation to a reusable component, and if shouldReuseRoute return false,\n   * this method is invoked to decide whether the target component can be get from a reuse buffer.\n   * @param route\n   */\n  shouldAttach(route: ActivatedRouteSnapshot): boolean {\n    // console.log('shouldAttach', route);\n    return this.storedRouteHandles.has(route.routeConfig.path);\n  }\n\n  /**\n   * If shouldAttach return true, then this method is invoke to retrieve the component from the buffer.\n   * @param route\n   */\n  retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle {\n    return this.storedRouteHandles.get(route.routeConfig.path);\n  }\n\n  /**\n   * By default, Angular doesn't re-initializing the same component if the navigation is not to\n   * a different one. For example, you switch different entity ID in the same entity type detail page.\n   * In this way, shouldReuseRoute should return true to avoid executing other methods in this Class.\n   * However, if you navigate from search&list component to entity detail component, then the method should return false.\n   * So that other methods can be executed to decide whether the search&list component should be stored for future reuse.\n   * @param future\n   * @param curr\n   */\n  shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot): boolean {\n    // console.log('shouldReuseRoute, future:', future, 'current:', curr);\n    return future.routeConfig === curr.routeConfig;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {Observable, of} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DialogService {\n\n  /**\n   * Ask user to confirm an action. `message` explains the action and choices.\n   * Returns observable resolving to `true`=confirm or `false`=cancel\n   */\n  confirm(message?: string): Observable<boolean> {\n    const confirmation = window.confirm(message || 'Is it OK?');\n\n    return of(confirmation);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable, of} from 'rxjs';\nimport {catchError, map} from 'rxjs/operators';\nimport {Entity, QueryObject, Relationship, UiMapperService} from 'jor-angular';\nimport {Router} from '@angular/router';\nimport {environment} from '../environments/environment';\nimport {Message, MessageService, messageType} from 'ui-message-angular';\nimport {AppCategoryList, AppList, AuthObjList, Authorization, AuthProfileList, PermissionList, UserList} from './identity';\nimport {formatDate} from '@angular/common';\nimport {AbstractControl, FormArray} from '@angular/forms';\nimport {Session} from 'ui-logon-angular';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({providedIn: 'root'})\nexport class IdentityService {\n  private originalHost = environment.originalHost;\n  private session: Session;\n  private pseudoNodeID = 0;\n\n  constructor(private http: HttpClient,\n              private messageService: MessageService,\n              private uiMapperService: UiMapperService,\n              private router: Router) {\n  }\n\n  setSession( data: any ) {\n    this.session = <Session>data;\n  }\n\n  get Session(): Session {\n    if (this.session) { return this. session; }\n    const defaultSession = new Session();\n    defaultSession.USER_ID = 'DH001';\n    defaultSession.LANGUAGE = 'EN';\n    return defaultSession;\n  }\n\n  get CurrentTime(): string {\n    return formatDate( new Date(), 'yyyy-MM-dd hh:mm:ss', 'en-US' );\n  }\n\n  searchPermissions(permissionID: string, permissionDesc: string): Observable<PermissionList[] | Message[]> {\n    const queryObject = new QueryObject();\n    queryObject.ENTITY_ID = 'permission';\n    queryObject.RELATION_ID = 'r_role';\n    queryObject.PROJECTION = ['NAME', 'DESCRIPTION',\n      {FIELD_NAME: 'CREATED_BY', RELATION_ID: 'permission'},\n      {FIELD_NAME: 'CREATE_TIME', RELATION_ID: 'permission'},\n      {FIELD_NAME: 'CHANGED_BY', RELATION_ID: 'permission'},\n      {FIELD_NAME: 'CHANGE_TIME', RELATION_ID: 'permission'}];\n    queryObject.FILTER = [];\n    if (permissionID) {\n      if (permissionID.includes('*') || permissionID.includes('%')) {\n        queryObject.FILTER.push({FIELD_NAME: 'NAME', OPERATOR: 'CN', LOW: permissionID});\n      } else {\n        queryObject.FILTER.push({FIELD_NAME: 'NAME', OPERATOR: 'EQ', LOW: permissionID});\n      }\n    }\n    if (permissionDesc) {\n      if (permissionDesc.includes('*')) {\n        permissionDesc = permissionDesc.replace(/\\*/gi, '%');\n        queryObject.FILTER.push({FIELD_NAME: 'DESCRIPTION', OPERATOR: 'CN', LOW: permissionDesc});\n      } else {\n        queryObject.FILTER.push({FIELD_NAME: 'DESCRIPTION', OPERATOR: 'EQ', LOW: permissionDesc});\n      }\n    }\n    queryObject.SORT = ['NAME'];\n    return this.http.post<any>(this.originalHost + `/api/query`, queryObject, httpOptions).pipe(\n      catchError(this.handleError<any>('searchObjects')));\n  }\n\n  getPermissionDetail(permissionName: string): Observable<Entity | Message[]> {\n    const pieceObject = {\n      ID: { RELATION_ID: 'r_role', NAME: permissionName},\n      piece: {RELATIONS: ['permission', 'r_role'],\n        RELATIONSHIPS: [\n          {\n            RELATIONSHIP_ID: 'rs_user_role',\n            PARTNER_ENTITY_PIECES: { RELATIONS: ['r_user'] }\n          },\n          {\n            RELATIONSHIP_ID: 'rs_role_category_profile',\n            PARTNER_ENTITY_PIECES: [\n              { ENTITY_ID: 'category',\n                piece: { RELATIONS: ['r_app_category'],\n                  RELATIONSHIPS: [{RELATIONSHIP_ID: 'rs_app_category',\n                    PARTNER_ENTITY_PIECES: { RELATIONS: ['app'] } }]}},\n              { ENTITY_ID: 'authProfile',\n                piece: { RELATIONS: ['authProfile'],\n                  RELATIONSHIPS: [{RELATIONSHIP_ID: 'rs_auth_profile_object',\n                    PARTNER_ENTITY_PIECES: { RELATIONS: ['authObject'],\n                      RELATIONSHIPS: [{ RELATIONSHIP_ID: 'rs_auth_object_field',\n                        PARTNER_ENTITY_PIECES: { RELATIONS: ['authField'] }}]}}]}}\n            ]\n          }\n        ]\n      }\n    };\n    return this.http.post<Entity | Message[]>(\n      this.originalHost + `/api/entity/instance/piece`, pieceObject, httpOptions).pipe(\n      catchError(this.handleError<any>('getPermissionDetail')));\n  }\n\n  getPermissionByName(permissionName: string): Observable<Entity | Message[]> {\n    const pieceObject = {\n      ID: { RELATION_ID: 'r_role', NAME: permissionName},\n      piece: {RELATIONS: ['r_role']}\n    };\n    return this.http.post<Entity | Message[]>(\n      this.originalHost + `/api/entity/instance/piece`, pieceObject, httpOptions).pipe(\n      catchError(this.handleError<any>('getPermissionByName')));\n  }\n\n  searchApps(appID: string, appName: string): Observable<AppList[] | Message[]> {\n    const queryObject = new QueryObject();\n    queryObject.ENTITY_ID = 'app';\n    queryObject.RELATION_ID = 'app';\n    queryObject.PROJECTION = ['APP_ID', 'NAME', 'ROUTE_LINK', 'IS_EXTERNAL', 'CREATED_BY', 'CREATE_TIME', 'CHANGED_BY', 'CHANGE_TIME'];\n    queryObject.FILTER = [];\n    if (appID) {\n      if (appID.includes('*') || appID.includes('%')) {\n        queryObject.FILTER.push({FIELD_NAME: 'APP_ID', OPERATOR: 'CN', LOW: appID});\n      } else {\n        queryObject.FILTER.push({FIELD_NAME: 'APP_ID', OPERATOR: 'EQ', LOW: appID});\n      }\n    }\n    if (appName) {\n      if (appName.includes('*')) {\n        appName = appName.replace(/\\*/gi, '%');\n        queryObject.FILTER.push({FIELD_NAME: 'NAME', OPERATOR: 'CN', LOW: appName});\n      } else {\n        queryObject.FILTER.push({FIELD_NAME: 'NAME', OPERATOR: 'EQ', LOW: appName});\n      }\n    }\n    queryObject.SORT = ['APP_ID'];\n    return this.http.post<any>(this.originalHost + `/api/query`, queryObject, httpOptions).pipe(\n      catchError(this.handleError<any>('searchObjects')));\n  }\n\n  getAppDetail(appID: string): Observable<Entity | Message[]> {\n    const pieceObject = {\n      ID: { RELATION_ID: 'app', APP_ID: appID},\n      piece: {\n        RELATIONS: ['app'],\n        RELATIONSHIPS: [\n          {\n            RELATIONSHIP_ID: 'rs_app_category',\n            PARTNER_ENTITY_PIECES: { RELATIONS: ['r_app_category'] }\n          },\n          {\n            RELATIONSHIP_ID: 'rs_app_auth',\n            PARTNER_ENTITY_PIECES: {\n              RELATIONS: ['authObject'],\n              RELATIONSHIPS: [\n                {\n                  RELATIONSHIP_ID: 'rs_auth_object_field',\n                  PARTNER_ENTITY_PIECES: { RELATIONS: ['authField'] }\n                }\n              ]\n            }\n          }\n        ]\n      }\n    };\n    return this.http.post<Entity | Message[]>(\n      this.originalHost + `/api/entity/instance/piece`, pieceObject, httpOptions).pipe(\n      catchError(this.handleError<any>('getAppDetail')));\n  }\n\n  getAppByID(appID: string): Observable<Entity | Message[]> {\n    const pieceObject = {\n      ID: { RELATION_ID: 'app', APP_ID: appID},\n      piece: {RELATIONS: ['app']}\n    };\n    return this.http.post<Entity | Message[]>(\n      this.originalHost + `/api/entity/instance/piece`, pieceObject, httpOptions).pipe(\n      catchError(this.handleError<any>('getAppByID')));\n  }\n\n  getCategoryName(categoryID: string): Observable<{}> {\n    const pieceObject = {\n      ID: { RELATION_ID: 'r_app_category', ID: categoryID},\n      piece: {RELATIONS: ['r_app_category']}\n    };\n    return this.http.post<{}>(\n      this.originalHost + `/api/entity/instance/piece`, pieceObject, httpOptions).pipe(\n      map(instance => {\n        return 'INSTANCE_GUID' in instance ?\n          {\n            INSTANCE_GUID: instance['INSTANCE_GUID'],\n            NAME: instance['r_app_category'] ? instance['r_app_category'][0]['NAME'] : '',\n            ICON: instance['r_app_category'] ? instance['r_app_category'][0]['ICON'] : ''\n          } : instance[0];\n      }),\n      catchError(this.handleError<any>('getCategoryName')));\n  }\n\n  searchAuthObjects(authObjName: string, authObjDesc: string): Observable<AuthObjList[] | Message[]> {\n    const queryObject = new QueryObject();\n    queryObject.ENTITY_ID = 'authObject';\n    queryObject.RELATION_ID = 'authObject';\n    queryObject.PROJECTION = ['OBJ_NAME', 'DESC', 'CREATED_BY', 'CREATE_TIME', 'CHANGED_BY', 'CHANGE_TIME'];\n    queryObject.FILTER = [];\n    if (authObjName) {\n      if (authObjName.includes('*') || authObjName.includes('%')) {\n        queryObject.FILTER.push({FIELD_NAME: 'OBJ_NAME', OPERATOR: 'CN', LOW: authObjName});\n      } else {\n        queryObject.FILTER.push({FIELD_NAME: 'OBJ_NAME', OPERATOR: 'EQ', LOW: authObjName});\n      }\n    }\n    if (authObjDesc) {\n      if (authObjDesc.includes('*')) {\n        authObjDesc = authObjDesc.replace(/\\*/gi, '%');\n        queryObject.FILTER.push({FIELD_NAME: 'DESC', OPERATOR: 'CN', LOW: authObjDesc});\n      } else {\n        queryObject.FILTER.push({FIELD_NAME: 'DESC', OPERATOR: 'EQ', LOW: authObjDesc});\n      }\n    }\n    queryObject.SORT = ['OBJ_NAME'];\n    return this.http.post<any>(this.originalHost + `/api/query`, queryObject, httpOptions).pipe(\n      catchError(this.handleError<any>('searchAuthObjects')));\n  }\n\n  getAuthObjectDetail(authObjName: string): Observable<Entity | Message[]> {\n    const pieceObject = {\n      ID: { RELATION_ID: 'authObject', OBJ_NAME: authObjName},\n      piece: {\n        RELATIONS: ['authObject'],\n        RELATIONSHIPS: [\n          {\n            RELATIONSHIP_ID: 'rs_auth_object_field',\n            PARTNER_ENTITY_PIECES: { RELATIONS: ['authField'] }\n          }\n        ]\n      }\n    };\n    return this.http.post<Entity | Message[]>(\n      this.originalHost + `/api/entity/instance/piece`, pieceObject, httpOptions).pipe(\n      catchError(this.handleError<any>('getAuthObjectDetail')));\n  }\n\n  getAuthObjectByName(authObjName: string): Observable<Entity | Message[]> {\n    const pieceObject = {\n      ID: { RELATION_ID: 'authObject', OBJ_NAME: authObjName},\n      piece: {RELATIONS: ['authObject']}\n    };\n    return this.http.post<Entity | Message[]>(\n      this.originalHost + `/api/entity/instance/piece`, pieceObject, httpOptions).pipe(\n      catchError(this.handleError<any>('getAuthObjectByName')));\n  }\n\n  getAuthFieldInfo(authFieldName: string): Observable<Entity | Message[]> {\n    const pieceObject = {\n      ID: { RELATION_ID: 'authField', FIELD_NAME: authFieldName},\n      piece: {RELATIONS: ['authField']}\n    };\n    return this.http.post<Entity | Message[]>(\n      this.originalHost + `/api/entity/instance/piece`, pieceObject, httpOptions).pipe(\n      map(instance => {\n        return 'INSTANCE_GUID' in instance ?\n          {\n            INSTANCE_GUID: instance['INSTANCE_GUID'],\n            NAME: instance['authField'] ? instance['authField'][0]['FIELD_NAME'] : '',\n            DATA_ELEMENT: instance['authField'] ? instance['authField'][0]['DATA_ELEMENT'] : ''\n          } : instance[0];\n      }),\n      catchError(this.handleError<any>('getAuthObjectByName')));\n  }\n\n  searchAppCategories(appCategoryID: string, appCategoryName: string): Observable<AppCategoryList[] | Message[]> {\n    const queryObject = new QueryObject();\n    queryObject.ENTITY_ID = 'category';\n    queryObject.RELATION_ID = 'r_app_category';\n    queryObject.PROJECTION = [ 'ID', 'NAME', 'ICON',\n      {FIELD_NAME: 'CREATED_BY', RELATION_ID: 'category'},\n      {FIELD_NAME: 'CREATE_TIME', RELATION_ID: 'category'},\n      {FIELD_NAME: 'CHANGED_BY', RELATION_ID: 'category'},\n      {FIELD_NAME: 'CHANGE_TIME', RELATION_ID: 'category'} ];\n    queryObject.FILTER = [];\n    if (appCategoryID) {\n      if (appCategoryID.includes('*') || appCategoryID.includes('%')) {\n        queryObject.FILTER.push({FIELD_NAME: 'ID', OPERATOR: 'CN', LOW: appCategoryID});\n      } else {\n        queryObject.FILTER.push({FIELD_NAME: 'ID', OPERATOR: 'EQ', LOW: appCategoryID});\n      }\n    }\n    if (appCategoryName) {\n      if (appCategoryName.includes('*')) {\n        appCategoryName = appCategoryName.replace(/\\*/gi, '%');\n        queryObject.FILTER.push({FIELD_NAME: 'NAME', OPERATOR: 'CN', LOW: appCategoryName});\n      } else {\n        queryObject.FILTER.push({FIELD_NAME: 'NAME', OPERATOR: 'EQ', LOW: appCategoryName});\n      }\n    }\n    queryObject.FILTER.push({RELATION_ID: 'category', FIELD_NAME: 'TYPE', OPERATOR: 'EQ', LOW: 'APP'});\n    queryObject.SORT = ['ID'];\n    return this.http.post<any>(this.originalHost + `/api/query`, queryObject, httpOptions).pipe(\n      catchError(this.handleError<any>('searchAppCategories')));\n  }\n\n  getAppCategoryDetail(appCategoryID: string): Observable<Entity | Message[]> {\n    const pieceObject = {\n      ID: { RELATION_ID: 'r_app_category', ID: appCategoryID},\n      piece: {\n        RELATIONS: ['category', 'r_app_category'],\n        RELATIONSHIPS: [\n          {\n            RELATIONSHIP_ID: 'rs_app_category',\n            PARTNER_ENTITY_PIECES: { RELATIONS: ['app'] }\n          },\n          {\n            RELATIONSHIP_ID: 'rs_system_role_category',\n            PARTNER_ENTITY_PIECES: { RELATIONS: ['r_role'] }\n          },\n        ]\n      }\n    };\n    return this.http.post<Entity | Message[]>(\n      this.originalHost + `/api/entity/instance/piece`, pieceObject, httpOptions).pipe(\n      catchError(this.handleError<any>('getAppCategoryDetail')));\n  }\n\n  getAppCategoryByID(appCategoryID: string): Observable<Entity | Message[]> {\n    const pieceObject = {\n      ID: { RELATION_ID: 'r_app_category', ID: appCategoryID},\n      piece: {RELATIONS: ['r_app_category']}\n    };\n    return this.http.post<Entity | Message[]>(\n      this.originalHost + `/api/entity/instance/piece`, pieceObject, httpOptions).pipe(\n      catchError(this.handleError<any>('getAppCategoryByID')));\n  }\n\n  searchAuthProfiles(profileName: string, profileDesc: string): Observable<AuthProfileList[] | Message[]> {\n    const queryObject = new QueryObject();\n    queryObject.ENTITY_ID = 'authProfile';\n    queryObject.RELATION_ID = 'authProfile';\n    queryObject.PROJECTION = [ 'PROFILE_NAME', 'DESC', 'CREATED_BY', 'CREATE_TIME', 'CHANGED_BY', 'CHANGE_TIME'];\n    queryObject.FILTER = [];\n    if (profileName) {\n      if (profileName.includes('*') || profileName.includes('%')) {\n        queryObject.FILTER.push({FIELD_NAME: 'PROFILE_NAME', OPERATOR: 'CN', LOW: profileName});\n      } else {\n        queryObject.FILTER.push({FIELD_NAME: 'PROFILE_NAME', OPERATOR: 'EQ', LOW: profileName});\n      }\n    }\n    if (profileDesc) {\n      if (profileDesc.includes('*')) {\n        profileDesc = profileDesc.replace(/\\*/gi, '%');\n        queryObject.FILTER.push({FIELD_NAME: 'DESC', OPERATOR: 'CN', LOW: profileDesc});\n      } else {\n        queryObject.FILTER.push({FIELD_NAME: 'DESC', OPERATOR: 'EQ', LOW: profileDesc});\n      }\n    }\n    queryObject.SORT = ['PROFILE_NAME'];\n    return this.http.post<any>(this.originalHost + `/api/query`, queryObject, httpOptions).pipe(\n      catchError(this.handleError<any>('searchAuthProfiles')));\n  }\n\n  getAuthProfileDetail(profileName: string): Observable<Entity | Message[]> {\n    const pieceObject = {\n      ID: { RELATION_ID: 'authProfile', PROFILE_NAME: profileName},\n      piece: {\n        RELATIONS: ['authProfile'],\n        RELATIONSHIPS: [\n          {\n            RELATIONSHIP_ID: 'rs_auth_profile_object',\n            PARTNER_ENTITY_PIECES: {\n              RELATIONS: ['authObject'],\n              RELATIONSHIPS: [\n                {\n                  RELATIONSHIP_ID: 'rs_auth_object_field',\n                  PARTNER_ENTITY_PIECES: { RELATIONS: ['authField'] }\n                }\n              ]\n            }\n          }\n        ]\n      }\n    };\n    return this.http.post<Entity | Message[]>(\n      this.originalHost + `/api/entity/instance/piece`, pieceObject, httpOptions).pipe(\n      catchError(this.handleError<any>('getAuthProfileDetail')));\n  }\n\n  getAuthProfileByName(profileName: string): Observable<Entity | Message[]> {\n    const pieceObject = {\n      ID: { RELATION_ID: 'authProfile', PROFILE_NAME: profileName},\n      piece: {RELATIONS: ['authProfile']}\n    };\n    return this.http.post<Entity | Message[]>(\n      this.originalHost + `/api/entity/instance/piece`, pieceObject, httpOptions).pipe(\n      catchError(this.handleError<any>('getAuthProfileByName')));\n  }\n\n  searchUsers(userID: string, userName: string): Observable<UserList[] | Message[]> {\n    const queryObject = new QueryObject();\n    queryObject.ENTITY_ID = 'person';\n    queryObject.RELATION_ID = 'r_user';\n    queryObject.PROJECTION = ['USER_ID', 'USER_NAME', 'DISPLAY_NAME', 'LOCK', 'PWD_STATE'];\n    queryObject.FILTER = [];\n    if (userID) {\n      if (userID.includes('*') || userID.includes('%')) {\n        queryObject.FILTER.push({FIELD_NAME: 'USER_ID', OPERATOR: 'CN', LOW: userID});\n      } else {\n        queryObject.FILTER.push({FIELD_NAME: 'USER_ID', OPERATOR: 'EQ', LOW: userID});\n      }\n    }\n    if (userName) {\n      if (userName.includes('*')) {\n        userName = userName.replace(/\\*/gi, '%');\n        queryObject.FILTER.push({FIELD_NAME: 'USER_NAME', OPERATOR: 'CN', LOW: userName});\n      } else {\n        queryObject.FILTER.push({FIELD_NAME: 'USER_NAME', OPERATOR: 'EQ', LOW: userName});\n      }\n    }\n    queryObject.SORT = ['USER_ID'];\n    return this.http.post<any>(this.originalHost + `/api/query`, queryObject, httpOptions).pipe(\n      catchError(this.handleError<any>('searchObjects')));\n  }\n\n  getUserDetail(userID: string): Observable<Entity | Message[]> {\n    const pieceObject = {\n      ID: { RELATION_ID: 'r_user', USER_ID: userID},\n      piece: {RELATIONS: ['r_user', 'r_employee', 'r_email', 'r_address', 'r_personalization'],\n        RELATIONSHIPS: [\n          {\n            RELATIONSHIP_ID: 'rs_user_role',\n            PARTNER_ENTITY_PIECES: { RELATIONS: ['r_role'] }\n          }]\n      }\n    };\n    return this.http.post<Entity | Message[]>(\n      this.originalHost + `/api/entity/instance/piece`, pieceObject, httpOptions).pipe(\n      catchError(this.handleError<any>('getUserDetail')));\n  }\n\n  getUserByUserID(userID: string): Observable<Entity | Message[]> {\n    const pieceObject = {\n      ID: { RELATION_ID: 'r_user', USER_ID: userID},\n      piece: {RELATIONS: ['r_user']}\n    };\n    return this.http.post<Entity | Message[]>(\n      this.originalHost + `/api/entity/instance/piece`, pieceObject, httpOptions).pipe(\n      catchError(this.handleError<any>('getUserByUserID')));\n  }\n\n  getUserByUserName(userName: string): Observable<Entity | Message[]> {\n    const pieceObject = {\n      ID: { RELATION_ID: 'r_user', USER_NAME: userName},\n      piece: {RELATIONS: ['r_user']}\n    };\n    return this.http.post<Entity | Message[]>(\n      this.originalHost + `/api/entity/instance/piece`, pieceObject, httpOptions).pipe(\n      catchError(this.handleError<any>('getUserByUserName')));\n  }\n\n  getRoleDesc(roleID: string): Observable<{}> {\n    const pieceObject = {\n      ID: { RELATION_ID: 'r_role', NAME: roleID},\n      piece: {RELATIONS: ['r_role']}\n    };\n    return this.http.post<{}>(\n      this.originalHost + `/api/entity/instance/piece`, pieceObject, httpOptions).pipe(\n      map(instance => {\n        return 'INSTANCE_GUID' in instance ?\n          {\n            INSTANCE_GUID: instance['INSTANCE_GUID'],\n            DESCRIPTION: instance['r_role'] ? instance['r_role'][0]['DESCRIPTION'] : ''\n          } : instance[0];\n      }),\n      catchError(this.handleError<any>('getRoleDesc')));\n  }\n\n  orchestrate(operations: any): any {\n    return this.http.post<any>(\n      this.originalHost + `/api/entity/orchestrate`, operations, httpOptions).pipe(\n      catchError(this.handleError<any>('orchestrate')));\n  }\n\n  save(entity: Entity): Observable<Entity | Message[]> {\n    if (entity['INSTANCE_GUID']) {\n      return this.http.put<Entity | Message[]>(\n        this.originalHost + `/api/entity`, entity, httpOptions).pipe(\n        catchError(this.handleError<any>('saveUser')));\n    } else {\n      return this.http.post<Entity | Message[]>(\n        this.originalHost + `/api/entity`, entity, httpOptions).pipe(\n        catchError(this.handleError<any>('save')));\n    }\n  }\n\n  delete(entityGUID: string): Observable<null | Message[]> {\n    return this.http.delete<null | Message[]>(this.originalHost + `/api/entity/instance/` + entityGUID, httpOptions).pipe(\n      catchError(this.handleError<any>('delete'))\n    );\n  }\n\n  parseProfileAuthObject(relationship: Relationship): any {\n    const authorizations = [];\n    if (!relationship) { return authorizations; }\n    relationship.values.forEach( value => {\n      const authorization = value['AUTH_VALUE'] ?\n        <Authorization>JSON.parse(value['AUTH_VALUE']) : null;\n      const status = authorization ?\n        Object.values(authorization.AuthFieldValue).findIndex( authValue => !authValue ) !== -1 ?\n          'yellow' : 'green' : 'red';\n      authorizations.push({\n        CHECKED: '',\n        COLLAPSED: false,\n        NODE_ID: value['RELATIONSHIP_INSTANCE_GUID'] || ++this.pseudoNodeID,\n        STATUS: status,\n        RELATIONSHIP_INSTANCE_GUID: value['RELATIONSHIP_INSTANCE_GUID'],\n        auth_object_INSTANCE_GUID: value['PARTNER_INSTANCES'][0]['INSTANCE_GUID'],\n        AUTH_VALUE: value['AUTH_VALUE'],\n        OBJ_NAME: value['PARTNER_INSTANCES'][0]['authObject'][0]['OBJ_NAME'],\n        DESC: value['PARTNER_INSTANCES'][0]['authObject'][0]['DESC'],\n        ROW_TYPE: 'OBJECT',\n        FIELD_NAME: '',\n        DATA_ELEMENT: '',\n      });\n\n      const authObjectFields = value['PARTNER_INSTANCES'][0]['relationships'][0];\n      authObjectFields.values.forEach( value2 => {\n        const authFieldName = value2['PARTNER_INSTANCES'][0]['authField'][0]['FIELD_NAME'];\n        authorizations.push({\n          CHECKED: '',\n          COLLAPSED: false,\n          NODE_ID: value['RELATIONSHIP_INSTANCE_GUID'] || this.pseudoNodeID,\n          STATUS: authorization.AuthFieldValue[authFieldName] ?\n            authorization.AuthFieldValue[authFieldName].length > 0 ? 'green' : 'red' : 'red',\n          RELATIONSHIP_INSTANCE_GUID: value['RELATIONSHIP_INSTANCE_GUID'],\n          auth_object_INSTANCE_GUID: '',\n          AUTH_VALUE: authorization && authorization.AuthFieldValue[authFieldName]\n            && JSON.stringify(authorization.AuthFieldValue[authFieldName], null, ' '),\n          OBJ_NAME: value['PARTNER_INSTANCES'][0]['authObject'][0]['OBJ_NAME'],\n          DESC: '',\n          ROW_TYPE: 'FIELD',\n          FIELD_NAME: authFieldName,\n          DATA_ELEMENT: value2['PARTNER_INSTANCES'][0]['authField'][0]['DATA_ELEMENT'],\n        });\n      });\n    });\n    return authorizations;\n  }\n\n  composeAuthChanges( formArray: FormArray, originalValue: any, relationshipID: string): any {\n    let authorization;\n    let currentAuthObjectCtrl: AbstractControl;\n    let isAuthorizationChanged = false;\n    formArray.controls.forEach( control => {\n      const rowType = control.get('ROW_TYPE').value;\n      if (rowType === 'OBJECT') {\n        if (currentAuthObjectCtrl && isAuthorizationChanged) {\n          currentAuthObjectCtrl.get('AUTH_VALUE').setValue(JSON.stringify(authorization, null, ' '));\n          currentAuthObjectCtrl.get('AUTH_VALUE').markAsDirty();\n        }\n        currentAuthObjectCtrl = control;\n        authorization = new Authorization();\n        authorization.AuthObject = control.get('OBJ_NAME').value;\n        authorization.AuthFieldValue = {};\n        isAuthorizationChanged = false;\n      } else { // Field\n        if (control.dirty) {\n          isAuthorizationChanged = true;\n          control.markAsPristine();\n        }\n        authorization.AuthFieldValue[control.get('FIELD_NAME').value] =\n          control.get('AUTH_VALUE').value ? JSON.parse(control.get('AUTH_VALUE').value) : null;\n      }\n    });\n    if (currentAuthObjectCtrl && isAuthorizationChanged) {\n      currentAuthObjectCtrl.get('AUTH_VALUE').setValue(JSON.stringify(authorization, null, ' '));\n      currentAuthObjectCtrl.get('AUTH_VALUE').markAsDirty();\n    }\n    const originalAuthObjValue = [];\n    if ( originalValue ) {\n      originalValue.forEach( authObj => {\n        if (authObj.ROW_TYPE === 'OBJECT') { originalAuthObjValue.push( authObj ); }\n      });\n    }\n\n    return this.uiMapperService.composeChangedRelationship(\n      relationshipID, [{ENTITY_ID: 'authObject', ROLE_ID: 'auth_object'}],\n      formArray, originalAuthObjValue,\n      ['CHECKED', 'COLLAPSED', 'NODE_ID', 'OBJ_NAME', 'DESC', 'ROW_TYPE', 'FIELD_NAME', 'DATA_ELEMENT']);\n  }\n\n  private handleError<T> (operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n      if (error.status === 401) {\n        this.messageService.addMessage('EXCEPTION', 'NOT_AUTHENTICATED_OR_SESSION_EXPIRED', messageType.Exception);\n      } else {\n        this.messageService.addMessage('EXCEPTION', 'GENERIC', messageType.Exception, operation, error.message);\n      }\n\n      this.router.navigate(['errors']);\n      console.error(operation, error); // log to console instead\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n","export class PermissionList {\n  NAME: string;\n  DESCRIPTION: string;\n  CREATED_BY: string;\n  CREATE_TIME: string;\n  CHANGED_BY: string;\n  CHANGE_TIME: string;\n  INSTANCE_GUID: string;\n}\n\nexport class UserList {\n  USER_ID: string;\n  USER_NAME: string;\n  DISPLAY_NAME: string;\n  LOCK: boolean;\n  PWD_STATE: string;\n  INSTANCE_GUID: string;\n}\n\nexport class AppList {\n  APP_ID: string;\n  NAME: string;\n  ROUTE_LINK: string;\n  IS_EXTERNAL: boolean;\n  CREATED_BY: string;\n  CREATE_TIME: string;\n  CHANGED_BY: string;\n  CHANGE_TIME: string;\n  INSTANCE_GUID: string;\n}\n\nexport class AuthObjList {\n  OBJ_NAME: string;\n  DESC: string;\n  CREATED_BY: string;\n  CREATE_TIME: string;\n  CHANGED_BY: string;\n  CHANGE_TIME: string;\n  INSTANCE_GUID: string;\n}\n\nexport class AuthProfileList {\n  PROFILE_NAME: string;\n  DESC: string;\n  CREATED_BY: string;\n  CREATE_TIME: string;\n  CHANGED_BY: string;\n  CHANGE_TIME: string;\n  INSTANCE_GUID: string;\n}\n\nexport class AppCategoryList {\n  ID: string;\n  ICON: string;\n  NAME: string;\n  TYPE: string;\n  CREATED_BY: string;\n  CREATE_TIME: string;\n  CHANGED_BY: string;\n  CHANGE_TIME: string;\n  INSTANCE_GUID: string;\n}\n\nexport class Authorization {\n  AuthObject: string;\n  AuthFieldValue: AuthFieldValue;\n}\n\nexport class AuthFieldValue {\n  [key: string]: Array<string | SelectOption>;\n}\n\nexport class SelectOption {\n  Operator: Operator;\n  Option: Option;\n  Low: string | number;\n  High: string | number;\n}\n\nexport enum Operator {\n  Between = 'Between',\n  GreaterThan = 'GreaterThan',\n  LessThan = 'LessThan',\n  GreaterEqual = 'GreaterEqual',\n  LessEqual = 'LessEqual',\n  Equal = 'Equal',\n  NotEqual = 'NotEqual',\n  StartsWith = 'StartsWith',\n  EndsWith = 'EndsWith',\n  Contains = 'Contains',\n  Matches = 'Matches'\n}\n\nexport enum Option {\n  Include = 'Include',\n  Exclude = 'Exclude'\n}\n","export const msgStore = [\n  { msgCat: 'EXCEPTION',\n    msgName: 'GENERIC',\n    msgText: {\n      EN: {shortText: 'Exception Occurs in Operation: \\'%s\\'',\n           longText: '%s1'}\n    }\n  },\n  { msgCat: 'EXCEPTION',\n    msgName: 'NOT_AUTHENTICATED_OR_SESSION_EXPIRED',\n    msgText: {\n      EN: {shortText: 'You are not authenticated or your session is expired!',\n        longText: 'You are not authenticated or your session is expired, please <a href=\\'/logon\\'>re-logon</a>.'}\n    }\n  },\n  { msgCat: 'GENERAL',\n    msgName: 'EMPTY_LIST',\n    msgText: {\n      EN: {shortText: 'No result is found',\n        longText: 'The system cannot find any items meet the search criteria.'}\n    }\n  },\n  { msgCat: 'GENERAL',\n    msgName: 'UNSAVED_CHANGES',\n    msgText: {\n      EN: {\n        shortText: 'There are unsaved changes. Do you want to save the changes?',\n        longText: ''\n      }\n    }\n  },\n  { msgCat: 'GENERAL',\n    msgName: 'NO_CHANGE',\n    msgText: {\n      EN: {\n        shortText: 'No change is made, saving is not necessary.',\n        longText: 'The data is not changed, thus there is no need to save changes'\n      }\n    }\n  },\n  { msgCat: 'USER',\n    msgName: 'INVALID',\n    msgText: {\n      EN: {shortText: 'Data is invalid, please check.',\n        longText: 'The data still contains some errors, please make sure all mandatory fields are filled!'}\n    }\n  },\n  { msgCat: 'USER',\n    msgName: 'USER_NAME_EXISTS',\n    msgText: {\n      EN: {shortText: 'User name: \\'%s\\' already exists!',\n        longText: ''}\n    }\n  },\n  { msgCat: 'USER',\n    msgName: 'USER_ID_EXISTS',\n    msgText: {\n      EN: {shortText: 'User ID: \\'%s\\' already exists!',\n        longText: ''}\n    }\n  },\n  { msgCat: 'USER',\n    msgName: 'AT_LEAST_ONE_EMAIL',\n    msgText: {\n      EN: {\n        shortText: 'At least one email needs to be maintained!',\n        longText: ''\n      }\n    }\n  },\n  { msgCat: 'USER',\n    msgName: 'USER_SAVED',\n    msgText: {\n      EN: {\n        shortText: 'User \\'%s\\' is saved!',\n        longText: ''\n      }\n    }\n  },\n  { msgCat: 'PERMISSION',\n    msgName: 'PERMISSION_EXISTS',\n    msgText: {\n      EN: {\n        shortText: 'The permission %s exists.',\n        longText: ''\n      }\n    }\n  },\n  { msgCat: 'PERMISSION',\n    msgName: 'INVALID',\n    msgText: {\n      EN: {\n        shortText: 'The permission contains invalid inputs, please check.',\n        longText: ''\n      }\n    }\n  },\n  { msgCat: 'PERMISSION',\n    msgName: 'SAVED',\n    msgText: {\n      EN: {\n        shortText: 'The permission is saved.',\n        longText: ''\n      }\n    }\n  },\n  { msgCat: 'APP',\n    msgName: 'APP_EXISTS',\n    msgText: {\n      EN: {\n        shortText: 'The App %s exists.',\n        longText: ''\n      }\n    }\n  },\n  { msgCat: 'APP',\n    msgName: 'INVALID',\n    msgText: {\n      EN: {\n        shortText: 'The App contains invalid inputs, please check.',\n        longText: ''\n      }\n    }\n  },\n  { msgCat: 'APP',\n    msgName: 'SAVED',\n    msgText: {\n      EN: {\n        shortText: 'The App is saved.',\n        longText: ''\n      }\n    }\n  },\n  { msgCat: 'AUTH_OBJECT',\n    msgName: 'AUTH_OBJECT_EXISTS',\n    msgText: {\n      EN: {\n        shortText: 'The authorization object %s exists.',\n        longText: ''\n      }\n    }\n  },\n  { msgCat: 'AUTH_OBJECT',\n    msgName: 'INVALID',\n    msgText: {\n      EN: {\n        shortText: 'The authorization object contains invalid inputs, please check.',\n        longText: ''\n      }\n    }\n  },\n  { msgCat: 'AUTH_OBJECT',\n    msgName: 'SAVED',\n    msgText: {\n      EN: {\n        shortText: 'The authorization object is saved.',\n        longText: ''\n      }\n    }\n  },\n  { msgCat: 'APP_CATEGORY',\n    msgName: 'APP_CATEGORY_EXISTS',\n    msgText: {\n      EN: {\n        shortText: 'The application category %s exists.',\n        longText: ''\n      }\n    }\n  },\n  { msgCat: 'APP_CATEGORY',\n    msgName: 'INVALID',\n    msgText: {\n      EN: {\n        shortText: 'The application category contains invalid inputs, please check.',\n        longText: ''\n      }\n    }\n  },\n  { msgCat: 'APP_CATEGORY',\n    msgName: 'SAVED',\n    msgText: {\n      EN: {\n        shortText: 'The application category is saved.',\n        longText: ''\n      }\n    }\n  },\n  { msgCat: 'AUTH_PROFILE',\n    msgName: 'AUTH_PROFILE_EXISTS',\n    msgText: {\n      EN: {\n        shortText: 'The authorization profile %s exists.',\n        longText: ''\n      }\n    }\n  },\n  { msgCat: 'AUTH_PROFILE',\n    msgName: 'INVALID',\n    msgText: {\n      EN: {\n        shortText: 'The authorization profile contains invalid inputs, please check.',\n        longText: ''\n      }\n    }\n  },\n  { msgCat: 'AUTH_PROFILE',\n    msgName: 'SAVED',\n    msgText: {\n      EN: {\n        shortText: 'The authorization profile is saved.',\n        longText: ''\n      }\n    }\n  }\n];\n","import {Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {AbstractControl, FormArray, FormBuilder, FormGroup} from '@angular/forms';\nimport {IdentityService} from '../../../identity.service';\nimport {Attribute, AttributeBase, AttributeControlService, EntityService, SearchHelpComponent} from 'jor-angular';\nimport {Message, MessageService} from 'ui-message-angular';\nimport {AuthValueComponent} from '../../../authorization/auth-value/auth-value.component';\nimport { v4 as uuid } from 'uuid';\n\n@Component({\n  selector: 'app-permission-detail-category',\n  templateUrl: './permission-detail-category.component.html',\n  styleUrls: ['./permission-detail-category.component.css']\n})\nexport class PermissionDetailCategoryComponent implements OnInit {\n  @Input() readonly: boolean;\n  @Input() mainForm: FormGroup;\n  categoryFormArray: FormArray;\n  newCategoryForm: FormGroup;\n  isCategoryModalShown = false;\n  selectAll = false;\n  categoryAttr: AttributeBase;\n\n  get displayCategoryModal() {return this.isCategoryModalShown ? 'block' : 'none'; }\n\n  constructor( private fb: FormBuilder,\n               private identityService: IdentityService,\n               private entityService: EntityService,\n               private messageService: MessageService,\n               private attributeControlService: AttributeControlService ) { }\n\n  @ViewChild(SearchHelpComponent, { static: true })\n  private searchHelpComponent: SearchHelpComponent;\n  @ViewChild(AuthValueComponent, { static: true})\n  private authValueComponent: AuthValueComponent;\n\n  ngOnInit() {\n    this.categoryFormArray = <FormArray>this.mainForm.get('categories');\n    this.categoryFormArray.controls.forEach( ctrl => {\n      if ( ctrl.get('ROW_TYPE').value === 'app') { ctrl.get('CHECKED').disable(); }\n    });\n  }\n\n  checkAll(): void {\n    this.categoryFormArray.controls.forEach( appCategoryCtrl => appCategoryCtrl.get('CHECKED').setValue(!this.selectAll));\n    this.selectAll = !this.selectAll;\n  }\n\n  checkCategory(idx: number): void {\n    const currentCategoryCtrl = this.categoryFormArray.at(idx);\n    this.categoryFormArray.controls.forEach( (categoryCtrl, index) => {\n      if (index <= idx) { return; }\n      if (categoryCtrl.get('category.ID').value === currentCategoryCtrl.get('category.ID').value) {\n        categoryCtrl.get('CHECKED').setValue(!currentCategoryCtrl.get('CHECKED').value);\n      }\n    });\n  }\n\n  add(): void {\n    this.newCategoryForm = this.fb.group({\n      CHECKED: '',\n      COLLAPSED: false,\n      ROW_TYPE: 'category',\n      RELATIONSHIP_INSTANCE_GUID: '',\n      app_category_INSTANCE_GUID: '',\n      auth_profile_INSTANCE_GUID: '',\n      ORDER: '',\n      category: this.fb.group({\n        ID: '',\n        NAME: '',\n        ICON: ''\n      })\n    });\n    if (!this.categoryAttr) {\n      this.entityService.getElementMeta('CATEGORY_ID')\n        .subscribe(elementMeta => {\n          const attribute = <Attribute>elementMeta;\n          attribute.ATTR_GUID = elementMeta.ELEMENT_ID;\n          attribute.ATTR_NAME = elementMeta.ELEMENT_ID;\n          attribute.DATA_ELEMENT = elementMeta.ELEMENT_ID;\n          this.categoryAttr = this.attributeControlService.toSingleAttributeControl(attribute);\n          this.categoryAttr.name = 'ID';\n        });\n    }\n    this.isCategoryModalShown = true;\n  }\n\n  closeCategoryModal(): void {\n    this.isCategoryModalShown = false;\n  }\n\n  confirm(): void {\n    const categoryID = this.newCategoryForm.get('category.ID').value;\n    this.identityService.getAppCategoryDetail(categoryID)\n      .subscribe( data => {\n        if ('ENTITY_ID' in data) {\n          this.newCategoryForm.get('app_category_INSTANCE_GUID').setValue(data['INSTANCE_GUID']);\n          this.newCategoryForm.get('category.ID').setValue(data['r_app_category'][0]['ID']);\n          this.newCategoryForm.get('category.NAME').setValue(data['r_app_category'][0]['NAME']);\n          this.newCategoryForm.get('category.ICON').setValue(data['r_app_category'][0]['ICON']);\n          this.newCategoryForm.markAsDirty();\n          this.categoryFormArray.push(this.newCategoryForm);\n          const appRelationship = data['relationships'].find(relationship => relationship.RELATIONSHIP_ID === 'rs_app_category');\n          const appGUIDs = [];\n          appRelationship.values.forEach( value => {\n            this.categoryFormArray.push(this.fb.group({\n              CHECKED: [{value: '', disabled: true}],\n              COLLAPSED: false,\n              ROW_TYPE: 'app',\n              RELATIONSHIP_INSTANCE_GUID: '',\n              app_category_INSTANCE_GUID: '',\n              auth_profile_INSTANCE_GUID: '',\n              ORDER: value['ORDER'],\n              category: this.fb.group({\n                ID: data['r_app_category'][0]['ID'],\n                NAME: value['PARTNER_INSTANCES'][0]['app'][0]['NAME'],\n                ICON: data['r_app_category'][0]['ICON']\n              }),\n              app: this.fb.group({\n                APP_ID: value['PARTNER_INSTANCES'][0]['app'][0]['APP_ID'],\n                NAME: value['PARTNER_INSTANCES'][0]['app'][0]['NAME']\n              })\n            }));\n            appGUIDs.push(value['PARTNER_INSTANCES'][0]['INSTANCE_GUID']);\n          });\n          this._generateProfile(appGUIDs);\n        } else {\n          const errorMessages = <Message[]>data;\n          errorMessages.forEach( msg => this.messageService.add(msg));\n          this.newCategoryForm.setErrors({message: 'Category contains errors'});\n        }\n        this.isCategoryModalShown = false;\n      });\n  }\n\n  _generateProfile(appGUIDs: Array<string>): void {\n    const profileCtrl = this.fb.group({\n      PROFILE_NAME: uuid().toUpperCase().replace(/-/g, ''),\n      DESC: this.mainForm.get('NAME').value + ` / ` + this.newCategoryForm.get('category.ID').value,\n      CHANGE_TIME: 'just now'\n    });\n    this.newCategoryForm.addControl('profile', profileCtrl);\n    const operations = appGUIDs.map( appGUID => {\n      return {\n        action: 'getInstancePieceByGUID',\n        instance: {INSTANCE_GUID: appGUID,\n          RELATIONSHIPS: [{ RELATIONSHIP_ID: 'rs_app_auth',\n            PARTNER_ENTITY_PIECES: {\n              RELATIONS: ['authObject'],\n              RELATIONSHIPS: [{RELATIONSHIP_ID: 'rs_auth_object_field',\n                PARTNER_ENTITY_PIECES: {RELATIONS: ['authField']}}]}}]}\n      };\n    });\n    this.identityService.orchestrate(operations).subscribe( data => {\n      let authorizations = [];\n      data.forEach( operation => {\n        if (operation.errs) {\n          const errorMessages = <Message[]>data;\n          errorMessages.forEach( msg => this.messageService.add(msg));\n          profileCtrl.setErrors({message: 'Profile contains errors'});\n        } else {\n          const rsAuthorization = operation.result.instance.relationships[0];\n          if (rsAuthorization) {\n            rsAuthorization.values.forEach( value => value.RELATIONSHIP_INSTANCE_GUID = '');\n            authorizations = authorizations.concat(\n              this.identityService.parseProfileAuthObject(rsAuthorization));\n          }\n        }\n      });\n      if (!profileCtrl.hasError('message')) {\n        const authFormArray = this.fb.array(authorizations.map(authorization => this.fb.group(authorization)));\n        authFormArray.controls.forEach( ctrl => ctrl.markAsDirty());\n        profileCtrl.addControl('authorizations', authFormArray);\n      }\n    });\n  }\n\n  delete(): void {\n    let index = this.categoryFormArray.controls.findIndex( appCategoryCtrl => appCategoryCtrl.get('CHECKED').value);\n    while ( index !== -1) {\n      this.categoryFormArray.removeAt(index);\n      this.categoryFormArray.markAsDirty();\n      index = this.categoryFormArray.controls.findIndex( appCategoryCtrl => appCategoryCtrl.get('CHECKED').value);\n    }\n  }\n\n  enterConfirm($event): void {\n    if ($event.keyCode === 13 ) {\n      this.confirm();\n    }\n  }\n  onSearchHelp(rowID: number, exportObject: AbstractControl): void {\n    const afterExportFn = function (context: any, rowIDx: number) {\n      return () => context.onChangeCategory(rowIDx);\n    }(this, rowID).bind(this);\n\n    this.searchHelpComponent.openSearchHelpModalByEntity('category', 'r_app_category',\n      exportObject, this.readonly, null, null, afterExportFn);\n  }\n\n  expendCollapse(idx: number): void {\n    const currentCtrl = this.categoryFormArray.at(idx);\n    const parentNode = currentCtrl.get('category.ID').value;\n    this.categoryFormArray.controls.forEach( categoryCtrl => {\n      if (categoryCtrl.get('category.ID').value === parentNode ) {\n        categoryCtrl.get('COLLAPSED').setValue(!categoryCtrl.get('COLLAPSED').value);\n      }\n    });\n  }\n}\n","<div class=\"dk-auth-main mx-3\">\n  <div class=\"btn-toolbar justify-content-end\" role=\"toolbar\">\n    <button type=\"button\" id=\"remove-object\" class=\"btn btn-light btn-sm\" (click)=\"delete()\" [disabled]=\"readonly\">\n      <span class=\"fas fa-minus\"></span> Remove</button>\n    <button type=\"button\" id=\"new\" class=\"btn btn-light btn-sm\" (click)=\"add()\" [disabled]=\"readonly\">\n      <span class=\"fas fa-plus\"></span> Add</button>\n  </div>\n  <table class=\"table table-bordered table-sm dk-table\" [formGroup]=\"mainForm\">\n    <thead class=\"thead-light\">\n    <tr>\n      <th class=\"dk-checkbox\"><input name=\"btSelectAll\" type=\"checkbox\" (click)=\"checkAll()\"></th>\n      <th class=\"dk-auth-object\">Category / App Name</th>\n      <th class=\"dk-auth-order\">Order</th>\n      <th class=\"dk-auth-value\">Description</th>\n    </tr>\n    </thead>\n\n    <tbody>\n    <tr *ngFor=\"let categoryForm of categoryFormArray.controls; let i = index\" class=\"treegrid-expanded\"\n        [class.collapsed]=\"categoryForm.get('ROW_TYPE').value === 'app' && categoryForm.get('COLLAPSED').value\">\n      <td class=\"dk-checkbox\" [formGroup]=\"categoryForm\">\n        <input class=\"form-control form-control-sm\" type=\"checkbox\" formControlName=\"CHECKED\" (click)=\"checkCategory(i)\">\n      </td>\n      <td *ngIf=\"categoryForm.get('ROW_TYPE').value === 'category'\" >\n      <span [ngClass]=\"{'treegrid-expander-expanded': !categoryForm.get('COLLAPSED').value,\n            'treegrid-expander-collapsed': categoryForm.get('COLLAPSED').value}\"\n            class=\"treegrid-expander\" (click)=\"expendCollapse(i)\">\n      </span>\n        <span [ngClass]=\"categoryForm.get('category.ICON').value\"></span>\n        {{categoryForm.get('category.ID').value}}\n      </td>\n      <td *ngIf=\"categoryForm.get('ROW_TYPE').value === 'app'\" >\n        <span class=\"treegrid-indent\"></span>\n        <span class=\"treegrid-expander\"></span>\n        {{categoryForm.get('app.APP_ID').value}}\n      </td>\n      <td [formGroup]=\"categoryForm\">\n        <input class=\"form-control form-control-sm\" type=\"number\" formControlName=\"ORDER\"\n               [readOnly]=\"categoryForm.get('ROW_TYPE').value === 'app' || readonly\">\n      </td>\n      <td *ngIf=\"categoryForm.get('ROW_TYPE').value === 'category'\" >{{categoryForm.get('category.NAME').value}}</td>\n      <td *ngIf=\"categoryForm.get('ROW_TYPE').value === 'app'\" >{{categoryForm.get('app.NAME').value}}</td>\n    </tr>\n    </tbody>\n  </table>\n</div>\n\n<div class=\"modal fade\" id=\"addAppCategory\" tabindex=\"-1\" role=\"dialog\"\n     [ngClass]=\"{'show': isCategoryModalShown}\"\n     [ngStyle]=\"{'display': displayCategoryModal}\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"addAuthObjectTitle\">Add App Category</h5>\n        <button type=\"button\" class=\"close\" (click)=\"closeCategoryModal()\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <dk-app-attribute-form2 *ngIf = \"newCategoryForm && categoryAttr\"\n                                [attributeControl]=\"categoryAttr\"\n                                [formGroup]=\"newCategoryForm.get('category')\"\n                                [isSmallSize] = \"true\"\n                                [readonly]=\"false\"\n                                (keyup)=\"enterConfirm($event)\">\n        </dk-app-attribute-form2>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"closeCategoryModal()\">Cancel</button>\n        <button type=\"button\" class=\"btn btn-sm btn-primary\" (click)=\"confirm()\">Confirm</button>\n      </div>\n    </div>\n  </div>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {AbstractControl, Form, FormArray, FormGroup} from '@angular/forms';\n\n@Component({\n  selector: 'app-permission-detail-profile',\n  templateUrl: './permission-detail-profile.component.html',\n  styleUrls: ['./permission-detail-profile.component.css']\n})\nexport class PermissionDetailProfileComponent implements OnInit {\n  @Input() readonly: boolean;\n  @Input() mainForm: FormGroup;\n  profileFormArray: FormArray;\n  currentProfileFormGroup: FormGroup;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.profileFormArray = <FormArray>this.mainForm.get('categories');\n    this.onSelect(this.profileFormArray.at(0));\n  }\n\n  onSelect(ctrl: AbstractControl): void {\n    this.currentProfileFormGroup = <FormGroup>ctrl;\n  }\n}\n","<div class=\"row ml-1\">\n  <div class=\"col-3\">\n    <div class=\"btn-toolbar justify-content-end mt-3\" role=\"toolbar\">\n      <button type=\"button\" id=\"remove-object\" class=\"btn btn-light btn-sm\"></button>\n    </div>\n    <div class=\"list-group\">\n      <div *ngFor=\"let profileCtrl of profileFormArray.controls\" >\n        <a *ngIf=\"profileCtrl.get('ROW_TYPE').value === 'category'\" (click)=\"onSelect(profileCtrl)\"\n         class=\"list-group-item list-group-item-action flex-column align-items-start\"\n         [class.active]=\"profileCtrl.get('profile.PROFILE_NAME').value === currentProfileFormGroup.get('profile.PROFILE_NAME').value\">\n        <div class=\"d-flex w-100 justify-content-between\">\n          <h5 class=\"mb-1 dk-text\">{{profileCtrl.get('profile.DESC').value}}</h5>\n        </div>\n        <p class=\"mb-1 dk-text\">{{profileCtrl.get('profile.PROFILE_NAME').value}}</p>\n        <small>changed at: {{profileCtrl.get('profile.CHANGE_TIME').value}}</small>\n      </a>\n      </div>\n    </div>\n  </div>\n  <div class=\"col-9\">\n    <app-authorization [mainForm]=\"currentProfileFormGroup?.get('profile')\" [ctrlName]=\"'authorizations'\"\n                       [readonly]=\"readonly\"></app-authorization>\n  </div>\n</div>\n","import {Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {AbstractControl, FormArray, FormGroup} from '@angular/forms';\nimport {SearchHelpComponent} from 'jor-angular';\n\n@Component({\n  selector: 'app-permission-detail-user',\n  templateUrl: './permission-detail-user.component.html',\n  styleUrls: ['./permission-detail-user.component.css']\n})\nexport class PermissionDetailUserComponent implements OnInit {\n  @Input() readonly: boolean;\n  @Input() mainForm: FormGroup;\n  userFormArray: FormArray;\n\n  constructor() { }\n\n  @ViewChild(SearchHelpComponent, { static: true })\n  private searchHelpComponent: SearchHelpComponent;\n\n  ngOnInit() {\n    this.userFormArray = this.mainForm.get('users') as FormArray;\n  }\n\n  onSearchHelp(rowID: number, exportObject: AbstractControl): void {\n    const afterExportFn = function (context: any, rowIDx: number) {\n      return () => context.onChangeKey(rowIDx);\n    }(this, rowID).bind(this);\n\n    this.searchHelpComponent.openSearchHelpModalByEntity('person', 'r_user',\n      exportObject, this.readonly, null, null, afterExportFn);\n  }\n}\n","<table class=\"table table-bordered table-sm dk-table ml-3 mt-4\" [formGroup]=\"mainForm\">\n  <thead class=\"thead-light\">\n  <tr>\n    <th class=\"dk-name\">User ID</th>\n    <th class=\"dk-name\">User Name</th>\n    <th class=\"dk-icon\">Synced</th>\n  </tr>\n  </thead>\n\n  <tbody formArrayName=\"users\" class=\"mb-4\">\n  <tr *ngFor=\"let userForm of userFormArray.controls; let i = index\" >\n    <td [formGroup]=\"userForm\">\n      <div class=\"input-group\">\n        <input class=\"form-control form-control-sm\" type=\"text\" formControlName=\"USER_ID\" readonly>\n        <div class=\"input-group-append\">\n          <button class=\"btn btn-sm btn-outline-secondary btn-light\" type=\"button\" id=\"searchPermission\"\n                  (click)=\"onSearchHelp(i, userForm)\">\n            <span class=\"fas fa-search\"></span>\n          </button>\n        </div>\n      </div>\n    </td>\n    <td [formGroup]=\"userForm\">\n      <input type=\"text\" formControlName=\"USER_NAME\" readonly class=\"form-control form-control-sm\">\n    </td>\n    <td [formGroup]=\"userForm\">\n      <input type=\"text\" formControlName=\"SYNCED\" readonly class=\"form-control form-control-sm\">\n    </td>\n  </tr>\n  </tbody>\n</table>\n\n<dk-app-search-help></dk-app-search-help>\n","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {AttributeBase, AttributeControlService, Entity, EntityService, RelationMeta, Relationship, UiMapperService} from 'jor-angular';\nimport {ActivatedRoute, ParamMap, Router} from '@angular/router';\nimport {IdentityService} from '../../identity.service';\nimport {Message, MessageService} from 'ui-message-angular';\nimport {switchMap} from 'rxjs/operators';\nimport {forkJoin, Observable, of} from 'rxjs';\nimport {DialogService} from '../../dialog.service';\nimport {existingPermissionValidator} from '../../async-validators';\n\n@Component({\n  selector: 'app-permission-detail',\n  templateUrl: './permission-detail.component.html',\n  styleUrls: ['./permission-detail.component.css']\n})\nexport class PermissionDetailComponent implements OnInit {\n  mainForm: FormGroup;\n  relationMetas: RelationMeta[];\n  attrCtrls: AttributeBase[];\n  readonly = true;\n  isNewMode = false;\n  action: string;\n  instanceGUID: string;\n  originalValue = {};\n  operations = [];\n  tabStrip = 1;\n\n  constructor(private fb: FormBuilder,\n              private route: ActivatedRoute,\n              private router: Router,\n              private dialogService: DialogService,\n              private identityService: IdentityService,\n              private attributeControlService: AttributeControlService,\n              private entityService: EntityService,\n              private uiMapperService: UiMapperService,\n              private messageService: MessageService) {\n  }\n\n  ngOnInit() {\n    this.route.paramMap.pipe(\n      switchMap((params: ParamMap) => {\n        this.action = params.get('action');\n        if (this.action === 'new') {\n          this.isNewMode = true;\n          return forkJoin([\n              this.entityService.getRelationMetaOfEntity('permission'),\n              this._createNewEntity()\n            ]);\n        } else {\n          this.isNewMode = false;\n          return forkJoin([\n            this.entityService.getRelationMetaOfEntity('permission'),\n            this.identityService.getPermissionDetail(params.get('permissionName'))\n          ]);\n        }\n      })\n    ).subscribe( data => {\n      this.relationMetas = data[0] as RelationMeta[];\n      this.attrCtrls = this.attributeControlService.toAttributeControl(\n        this.relationMetas.find( relationMeta => relationMeta.RELATION_ID === 'r_role').ATTRIBUTES);\n      if ('ENTITY_ID' in data[1]) {\n        this.instanceGUID = data[1]['INSTANCE_GUID'];\n        this._generateMainForm(<Entity>data[1]);\n        if (this.isNewMode || this.action === 'change') {\n          this._switch2EditMode();\n        } else {\n          this._switch2DisplayMode();\n        }\n      } else {\n        const errorMessages = <Message[]>data[1];\n        errorMessages.forEach( msg => this.messageService.add(msg));\n      }\n    });\n  }\n\n  getAttrCtrlFromID(fieldName: string): AttributeBase {\n    return this.attrCtrls.find( attrCtrl => attrCtrl.name === fieldName);\n  }\n\n  switchTabStrip(tabStripID: number): void {\n    this.tabStrip = tabStripID;\n  }\n\n  switchEditDisplay(): void {\n    if (this.readonly ) {\n      this._switch2EditMode();\n    } else {\n      if (this.mainForm.dirty) {\n        this.dialogService.confirm('Discard changes?').subscribe(confirm => {\n          if (confirm) {\n            this.mainForm.reset(this.originalValue);\n            this._switch2DisplayMode();\n          }\n        });\n      } else {\n        this._switch2DisplayMode();\n      }\n    }\n    this.messageService.clearMessages();\n  }\n\n  _switch2DisplayMode(): void {\n    this.readonly = true;\n\n    const permissionNameCtrl = this.mainForm.get('NAME') as FormControl;\n    permissionNameCtrl.clearAsyncValidators();\n\n    this.mainForm.markAsPristine();\n    // Replace the URL from change to display\n    window.history.replaceState({}, '', `/permissions/${permissionNameCtrl.value};action=display`);\n  }\n\n  _switch2EditMode(): void {\n    this.readonly = false;\n\n    const permissionNameCtrl = this.mainForm.get('NAME') as FormControl;\n    if (this.isNewMode) {\n      permissionNameCtrl.setAsyncValidators(\n        existingPermissionValidator(this.identityService, this.messageService));\n    }\n\n    // Replace the URL from to display\n    if (this.action === 'display') {this.action = 'change'; }\n    window.history.replaceState({}, '', `/permissions/${permissionNameCtrl.value};action=` + this.action);\n  }\n\n  _createNewEntity(): Observable<Entity> {\n    const permissionDetail = new Entity();\n    permissionDetail.ENTITY_ID = 'permission';\n    permissionDetail['permission'] = [\n      { DESCR: '', CREATED_BY: '', CREATE_TIME: '', CHANGED_BY: '', CHANGE_TIME: '' }\n    ];\n    permissionDetail['r_role'] = [\n      { NAME: '', DESCRIPTION: '' }\n    ];\n    permissionDetail['relationships'] = [];\n    return of(permissionDetail);\n  }\n\n  _generateMainForm(data: Entity): void {\n    this.mainForm = this.fb.group({\n      NAME: [data['r_role'][0]['NAME'], [Validators.required]],\n      DESCRIPTION: [data['r_role'][0]['DESCRIPTION']],\n      admin: this.fb.group({\n        CREATED_BY: [data['permission'][0]['CREATED_BY']],\n        CREATE_TIME: [data['permission'][0]['CREATE_TIME']],\n        CHANGED_BY: [data['permission'][0]['CHANGED_BY']],\n        CHANGE_TIME: [data['permission'][0]['CHANGE_TIME']]\n      })\n    });\n    const parsedRelationship = this._parseRelationships( data['relationships'] );\n    this.mainForm.addControl('categories', this.fb.array(\n      parsedRelationship.categories.map( category => {\n        const categoryCtrl =  this.fb.group({\n          CHECKED: category.CHECKED,\n          COLLAPSED: category.COLLAPSED,\n          ROW_TYPE: category.ROW_TYPE,\n          RELATIONSHIP_INSTANCE_GUID: category.RELATIONSHIP_INSTANCE_GUID,\n          app_category_INSTANCE_GUID: category.app_category_INSTANCE_GUID,\n          auth_profile_INSTANCE_GUID: category.auth_profile_INSTANCE_GUID,\n          ORDER: category.ORDER\n        });\n        if (category.category) {\n          categoryCtrl.addControl('category', this.fb.group({\n            ID: category.category.ID,\n            NAME: category.category.NAME,\n            ICON: category.category.ICON\n            }));\n        }\n        if (category.profile) {\n          categoryCtrl.addControl('profile', this.fb.group({\n            PROFILE_NAME: category.profile.PROFILE_NAME,\n            DESC: category.profile.DESC,\n            CHANGE_TIME: category.profile.CHANGE_TIME,\n            authorizations: this.fb.array(category.profile.authorizations.map( authorization => this.fb.group(authorization) ))\n          }));\n        }\n        if (category.app) {\n          categoryCtrl.addControl('app', this.fb.group({\n            APP_ID: category.app.APP_ID,\n            NAME: category.app.NAME\n          }));\n        }\n        return categoryCtrl;\n      })));\n    this.mainForm.addControl('users', this.fb.array(\n      parsedRelationship.users.map( user => this.fb.group(user))));\n    this.originalValue = this.mainForm.getRawValue();\n  }\n\n  _parseRelationships( relationships: Relationship[] ): any {\n    const parsedRelationship = {\n      users: [],\n      categories: []\n    };\n    if (!relationships) { return parsedRelationship; }\n    relationships.forEach( relationship => {\n      switch (relationship.RELATIONSHIP_ID) {\n        case 'rs_role_category_profile':\n          __parseRoleCategoryProfile(relationship, this);\n          break;\n        case 'rs_user_role':\n          __parseRoleUsers(relationship);\n          break;\n        default:\n        // Do nothing.\n      }\n    });\n    return parsedRelationship;\n\n    function __parseRoleCategoryProfile( relationship: Relationship, context: any): void {\n      relationship.values.forEach( value => {\n        const appCategoryInstance = value.PARTNER_INSTANCES.find(\n          partnerInstance => partnerInstance.ROLE_ID === 'app_category');\n        const authProfileInstance = value.PARTNER_INSTANCES.find(\n          partnerInstance => partnerInstance.ROLE_ID === 'auth_profile');\n        parsedRelationship.categories.push({\n          CHECKED: '',\n          COLLAPSED: false,\n          ROW_TYPE: 'category',\n          RELATIONSHIP_INSTANCE_GUID: value['RELATIONSHIP_INSTANCE_GUID'],\n          app_category_INSTANCE_GUID: appCategoryInstance.INSTANCE_GUID,\n          auth_profile_INSTANCE_GUID: authProfileInstance.INSTANCE_GUID,\n          ORDER: value['ORDER'],\n          category: {\n            ID: appCategoryInstance['r_app_category'][0]['ID'],\n            NAME: appCategoryInstance['r_app_category'][0]['NAME'],\n            ICON: appCategoryInstance['r_app_category'][0]['ICON']\n          },\n          profile: {\n            PROFILE_NAME: authProfileInstance['authProfile'][0]['PROFILE_NAME'],\n            DESC: authProfileInstance['authProfile'][0]['DESC'],\n            CHANGE_TIME: authProfileInstance['authProfile'][0]['CHANGE_TIME'],\n            authorizations: context.identityService.parseProfileAuthObject(authProfileInstance.relationships[0])\n          }\n        });\n        const rsAppCategory = appCategoryInstance['relationships'][0];\n        rsAppCategory.values.forEach( value2 => {\n          parsedRelationship.categories.push({\n            CHECKED: '',\n            COLLAPSED: false,\n            ROW_TYPE: 'app',\n            RELATIONSHIP_INSTANCE_GUID: value2['RELATIONSHIP_INSTANCE_GUID'],\n            app_category_INSTANCE_GUID: '',\n            auth_profile_INSTANCE_GUID: '',\n            ORDER: value2['ORDER'],\n            category: {\n              ID: appCategoryInstance['r_app_category'][0]['ID'],\n              NAME: appCategoryInstance['r_app_category'][0]['NAME'],\n              ICON: appCategoryInstance['r_app_category'][0]['ICON']\n            },\n            app: {\n              APP_ID: value2['PARTNER_INSTANCES'][0]['app'][0]['APP_ID'],\n              NAME: value2['PARTNER_INSTANCES'][0]['app'][0]['NAME'],\n            }\n          });\n        });\n      });\n    }\n\n    function __parseRoleUsers( relationship: Relationship): void {\n      relationship.values.forEach( value => {\n        parsedRelationship.users.push( {\n          RELATIONSHIP_INSTANCE_GUID: value['RELATIONSHIP_INSTANCE_GUID'],\n          SYNCED: value['SYNCED'],\n          INSTANCE_GUID: value['PARTNER_INSTANCES'][0]['INSTANCE_GUID'],\n          USER_ID: value['PARTNER_INSTANCES'][0]['r_user'][0]['USER_ID'],\n          USER_NAME: value['PARTNER_INSTANCES'][0]['r_user'][0]['USER_NAME']\n        });\n      });\n    }\n  }\n\n  _resetValue(data: Entity): void {\n    this.originalValue = {\n      NAME: data['r_role'][0]['NAME'],\n      DESCRIPTION: data['r_role'][0]['DESCRIPTION'],\n      admin: {\n        CREATED_BY: data['permission'][0]['CREATED_BY'],\n        CREATE_TIME: data['permission'][0]['CREATE_TIME'],\n        CHANGED_BY: data['permission'][0]['CHANGED_BY'],\n        CHANGE_TIME: data['permission'][0]['CHANGE_TIME']\n      }\n    };\n    const parsedRelationship = this._parseRelationships( data['relationships'] );\n    this.originalValue['categories'] = parsedRelationship.categories;\n    this.originalValue['users'] = parsedRelationship.users;\n    this.mainForm.reset(this.originalValue);\n  }\n\n  save() {\n    this.messageService.clearMessages();\n    if (this._composeChanges()) {\n      console.log(this.operations);\n      this.identityService.orchestrate(this.operations).subscribe( results => {\n        this.operations = [];\n        results.forEach( result => {\n          if (result.msgType) {\n            this.messageService.add(<Message>result);\n          } else if (result.instance && result.instance.ENTITY_ID === 'permission') {\n            this.instanceGUID = result.instance.INSTANCE_GUID;\n            this.isNewMode = false;\n            const permissionName = this.mainForm.get('NAME').value;\n            this.identityService.getPermissionDetail(permissionName).subscribe(instance => {\n              if ('ENTITY_ID' in instance) {\n                this._switch2DisplayMode();\n                this._resetValue(<Entity>instance);\n              } else {\n                const errorMessages = <Message[]>instance;\n                errorMessages.forEach( msg => this.messageService.add(msg));\n              }\n            });\n            this.messageService.reportMessage('PERMISSION', 'SAVED', 'S', permissionName);\n          }\n        });\n      });\n    }\n  }\n\n  _composeChanges() {\n    if (this.mainForm.invalid) {\n      this.messageService.reportMessage('PERMISSION', 'INVALID', 'E');\n      return false;\n    }\n\n    if (this.mainForm.dirty === false) {\n      this.messageService.reportMessage('GENERAL', 'NO_CHANGE', 'W');\n      return false;\n    }\n\n    const changedValue = {};\n    changedValue['ENTITY_ID'] = 'permission';\n    changedValue['INSTANCE_GUID'] = this.instanceGUID;\n    if (this.isNewMode) {\n      changedValue['permission'] = {\n        action: 'add', DESCR: this.mainForm.get('DESCRIPTION'),\n        CREATED_BY: this.identityService.Session.USER_ID, CREATE_TIME: this.identityService.CurrentTime,\n        CHANGED_BY: this.identityService.Session.USER_ID, CHANGE_TIME: this.identityService.CurrentTime};\n      changedValue['r_role'] = {\n        action: 'add', NAME: this.mainForm.get('NAME'),\n        DESCRIPTION: this.mainForm.get('DESCRIPTION')\n      };\n    }\n\n    changedValue['permission'] = {\n      action: 'update', CHANGED_BY: this.identityService.Session.USER_ID, CHANGE_TIME: this.identityService.CurrentTime};\n\n    if (this.mainForm.get('DESCRIPTION').dirty) {\n      changedValue['permission']['DESCR'] = this.mainForm.get('DESCRIPTION');\n      changedValue['r_role'] = {\n        action: 'update',  DESCRIPTION: this.mainForm.get('DESCRIPTION') };\n    }\n\n    const categoryFormArray = this.mainForm.get('categories') as FormArray;\n    categoryFormArray.controls.forEach( ctrl => {\n      if (ctrl.get('ROW_TYPE').value === 'category') {\n        if (ctrl.get('RELATIONSHIP_INSTANCE_GUID').value) { // Change an existing profile\n          if (ctrl.get('profile.authorizations').pristine) { return; }\n          const originalProfile = this.originalValue['categories'].find(\n            category => category.RELATIONSHIP_INSTANCE_GUID === ctrl.get('RELATIONSHIP_INSTANCE_GUID').value);\n          this.operations.push({\n            action: 'changeInstance', noCommit: true,\n            instance: {\n              ENTITY_ID: 'authProfile',\n              INSTANCE_GUID: ctrl.get('auth_profile_INSTANCE_GUID').value,\n              authProfile: {action: 'update', CHANGED_BY: this.identityService.Session.USER_ID,\n                CHANGE_TIME: this.identityService.CurrentTime},\n              relationships: [\n                this.identityService.composeAuthChanges(<FormArray>ctrl.get('profile.authorizations'),\n                  originalProfile.authorizations, 'rs_auth_profile_object')\n              ]}\n          });\n        } else { // Add a new profile\n          this.operations.push({\n            action: 'createInstance', noCommit: true,\n            instance: {\n              ENTITY_ID: 'authProfile',\n              INSTANCE_GUID: ctrl.get('auth_profile_INSTANCE_GUID').value,\n              authProfile: {action: 'add', PROFILE_NAME: ctrl.get('profile.PROFILE_NAME').value,\n                DESC: ctrl.get('profile.DESC').value,\n                CREATED_BY: this.identityService.Session.USER_ID, CREATE_TIME: this.identityService.CurrentTime,\n                CHANGED_BY: this.identityService.Session.USER_ID, CHANGE_TIME: this.identityService.CurrentTime},\n              relationships: [\n                this.identityService.composeAuthChanges(<FormArray>ctrl.get('profile.authorizations'),\n                  [], 'rs_auth_profile_object')\n              ]\n            }\n          });\n        }\n      } else { // ROW_TYPE = app\n        ctrl.markAsPristine({onlySelf: true});\n      }\n    });\n\n    changedValue['relationships'] = [];\n    const rsCategory = this.uiMapperService.composeChangedRelationship(\n      'rs_role_category_profile',\n      [\n        {ENTITY_ID: 'category', ROLE_ID: 'app_category'},\n        {ENTITY_ID: 'authProfile', ROLE_ID: 'auth_profile'}],\n      categoryFormArray,\n      this.originalValue['categories'].filter( category => category.ROW_TYPE === 'category'),\n      ['CHECKED', 'COLLAPSED', 'ROW_TYPE', 'category', 'profile', 'app']);\n    if (rsCategory) {\n      rsCategory['values'].forEach( value => {\n        if (value.PARTNER_INSTANCES) { value.PARTNER_INSTANCES[1].NO_EXISTING_CHECK = true; }\n      });\n      changedValue['relationships'].push(rsCategory);\n    }\n\n    const newProfilesIndex = [];\n    this.operations.forEach( (operation, index) => {\n      if (operation.action === 'createInstance') { newProfilesIndex.push(index); }\n    });\n    this.operations.push({\n      action: this.isNewMode ? 'createInstance' : 'changeInstance', noCommit: true,\n      replacements: newProfilesIndex.map( idx => {\n        return {\n          movePath: [idx, 'result', 'instance', 'INSTANCE_GUID'],\n            toPath: ['relationships', 0, 'values', idx, 'PARTNER_INSTANCES', 1, 'INSTANCE_GUID']\n        };\n      }),\n      instance: changedValue\n    });\n\n    // Find the deleted categories, and also trigger the deletion of the corresponding profiles\n    this.originalValue['categories'].forEach( category => {\n      if (category.ROW_TYPE === 'app') { return; }\n      const idx = categoryFormArray.controls.findIndex(\n        ctrl => ctrl.get('RELATIONSHIP_INSTANCE_GUID').value === category.RELATIONSHIP_INSTANCE_GUID);\n      if (idx === -1) {\n        this.operations.push({\n          action: 'softDeleteInstanceByGUID',\n          instance: {INSTANCE_GUID: category.auth_profile_INSTANCE_GUID}\n        });\n        this.operations.push({\n          action: 'hardDeleteByGUID',\n          instance: {INSTANCE_GUID: category.auth_profile_INSTANCE_GUID}\n        });\n      }\n    });\n\n    return true;\n  }\n\n  canDeactivate(): Observable<boolean> | boolean {\n    if (this.isNewMode || (this.mainForm && this.mainForm.dirty)) {\n      return this.dialogService.confirm('Discard changes?');\n    } else {\n      return true;\n    }\n  }\n}\n","<nav class=\"navbar dk-fixed-top navbar-light bg-light\">\n  <div>\n    <span class=\"font-weight-bold mb-0 mx-1\">{{isNewMode? 'New Permission' : readonly? 'Display Permission' : 'Change Permission'}}</span>\n  </div>\n\n  <div class=\"flex-row-reverse\">\n    <button class=\"btn btn-sm btn-outline-primary mr-2\" type=\"button\" title=\"Edit/Display\" id=\"editDisplay\" (click)=\"switchEditDisplay()\">\n      <span *ngIf=\"readonly\" class=\"fas fa-edit\"> Edit</span>\n      <span *ngIf=\"!readonly\" class=\"fas fa-glasses\"> Display</span>\n    </button>\n    <button class=\"btn btn-sm btn-outline-primary mr-2\" type=\"button\" title=\"Save\" id=\"save\" (click)=\"save()\" [disabled]=\"readonly\">\n      <span class=\"fas fa-save\"> Save</span>\n    </button>\n  </div>\n</nav>\n\n<div class=\"mt-2 mb-2\">\n  <dk-message></dk-message>\n</div>\n\n<div *ngIf=\"mainForm\" class=\"ml-2\">\n  <div class=\"mt-2 ml-1 row\">\n    <dk-app-attribute-form2 class=\"col-md-6 col-lg-4\"\n                            [attributeControl]=\"getAttrCtrlFromID('NAME')\"\n                            [formGroup]=\"mainForm\"\n                            [readonly]=\"!isNewMode\"\n                            [isSmallSize] = \"true\">\n    </dk-app-attribute-form2>\n    <dk-app-attribute-form2 class=\"col-md-6 col-lg-4\"\n                            [attributeControl]=\"getAttrCtrlFromID('DESCRIPTION')\"\n                            [formGroup]=\"mainForm\"\n                            [readonly]=\"!isNewMode\"\n                            [isSmallSize] = \"true\">\n    </dk-app-attribute-form2>\n  </div>\n\n  <ul class=\"nav nav-tabs mt-1\">\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [class.active]=\"tabStrip===1\" href=\"javascript:void(0);\" (click)=\"switchTabStrip(1)\">APP Category</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [class.active]=\"tabStrip===2\" href=\"javascript:void(0);\" (click)=\"switchTabStrip(2)\">Profile</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [class.active]=\"tabStrip===3\" href=\"javascript:void(0);\" (click)=\"switchTabStrip(3)\">User</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [class.active]=\"tabStrip===4\" href=\"javascript:void(0);\" (click)=\"switchTabStrip(4)\">Admin</a>\n    </li>\n  </ul>\n\n  <div class=\"mt-2\" [ngSwitch]=\"tabStrip\">\n    <app-permission-detail-category *ngSwitchCase=\"1\" [mainForm]=\"mainForm\" [readonly]=\"readonly\">\n    </app-permission-detail-category>\n    <app-permission-detail-profile *ngSwitchCase=\"2\" [mainForm]=\"mainForm\"  [readonly]=\"readonly\">\n    </app-permission-detail-profile>\n    <app-permission-detail-user *ngSwitchCase=\"3\" [mainForm]=\"mainForm\" [readonly]=\"readonly\">\n    </app-permission-detail-user>\n    <app-admin-info *ngSwitchCase=\"4\" [mainForm]=\"mainForm\" [relationMetas]=\"relationMetas\" [adminRelation]=\"'permission'\">\n    </app-admin-info>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {PermissionList} from '../../identity';\nimport {Message, MessageService, messageType} from 'ui-message-angular';\nimport {IdentityService} from '../../identity.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-permission-list',\n  templateUrl: './permission-list.component.html',\n  styleUrls: ['./permission-list.component.css']\n})\nexport class PermissionListComponent implements OnInit {\n  permissionName: string;\n  permissionDesc: string;\n  permissions: PermissionList[];\n  showDeletionConfirmation = false;\n  toBeDeletedInstance: string;\n\n  get displayDeletionConfirmation() {return this.showDeletionConfirmation ? 'block' : 'none'; }\n\n  constructor(private identityService: IdentityService,\n              private messageService: MessageService,\n              private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  search() {\n    this.messageService.clearMessages();\n    this.permissions = [];\n    this.permissionName = this.permissionName ? this.permissionName.trim() : '';\n    this.permissionDesc = this.permissionDesc ? this.permissionDesc.trim() : '';\n    this.identityService.searchPermissions(this.permissionName, this.permissionDesc).subscribe(\n      data => {\n        if (!data[0]) {\n          this.messageService.reportMessage('GENERAL', 'EMPTY_LIST', messageType.Warning);\n        } else if (data[0]['msgCat']) {\n          const messages = <Message[]>data;\n          messages.forEach( msg => this.messageService.add(msg));\n        } else {\n          this.permissions = <PermissionList[]>data;\n        }\n      }\n    );\n  }\n\n  enterSearch($event): void {\n    if ($event.keyCode === 13 ) {\n      this.search();\n    }\n  }\n\n  new(): void {\n    this.router.navigate(['permissions', '/', {action: 'new'}]);\n  }\n\n  display(permissionName: string): void {\n    this.router.navigate(['permissions', permissionName, {action: 'display'}]);\n  }\n\n  change(permissionName: string): void {\n    this.router.navigate(['permissions', permissionName, {action: 'change'}]);\n  }\n\n  delete(permissionName: string): void {\n    this.toBeDeletedInstance = permissionName;\n    this.showDeletionConfirmation = true;\n  }\n\n  cancelDeletion(): void {\n    this.showDeletionConfirmation = false;\n  }\n\n  confirmDeletion(): void {\n    const toBeDeletedPermissionGUID = this.permissions.find(\n      ele => ele.NAME === this.toBeDeletedInstance).INSTANCE_GUID;\n    this.identityService.delete(toBeDeletedPermissionGUID).subscribe( errorMsg => {\n      this.showDeletionConfirmation = false;\n      if (errorMsg) {\n        const messages = <Message[]>errorMsg;\n        messages.forEach( msg => this.messageService.add(msg));\n      } else {\n        this.search();\n      }\n    });\n  }\n\n}\n","<div class=\"card mb-3 pt-3\">\n  <div class=\"mt-2 pl-4 row\">\n    <div class=\"col-6 form-group row\">\n      <label for=\"permission_name\" class=\"col-sm-3 col-form-label\">Permission:</label>\n      <input id=\"permission_name\" name=\"user_id\" [(ngModel)]=\"permissionName\" type=\"text\"\n             class=\"col-sm-6 form-control form-control-sm\" (keyup)=\"enterSearch($event)\" autofocus>\n    </div>\n    <div class=\"col-6 form-group row\">\n      <label for=\"permission_desc\" class=\"col-sm-3 col-form-label\">Description:</label>\n      <input id=\"permission_desc\" name=\"user_name\" [(ngModel)]=\"permissionDesc\" type=\"text\"\n             class=\"col-sm-6 form-control form-control-sm\" (keyup)=\"enterSearch($event)\">\n    </div>\n  </div>\n\n  <div class=\"mb-4\">\n    <button type=\"button\" id=\"search\" class=\"btn btn-primary btn-sm float-right mr-4\" (click)=\"search()\">Search</button>\n  </div>\n</div>\n\n<div class=\"mt-2 mb-4 mx-4\">\n  <dk-message></dk-message>\n  <div class=\"btn-toolbar justify-content-end my-2\" role=\"toolbar\">\n    <button type=\"button\" id=\"new\" class=\"btn btn-light btn-sm\" (click)=\"new()\">\n      <span class=\"fas fa-plus\"></span> New</button>\n  </div>\n  <table class=\"table table-bordered table-sm\">\n    <thead class=\"thead-light\">\n    <tr>\n      <th scope=\"col\">Name</th>\n      <th scope=\"col\">Description</th>\n      <th scope=\"col\">Created By</th>\n      <th scope=\"col\">Created At</th>\n      <th scope=\"col\">Changed By</th>\n      <th scope=\"col\">Changed At</th>\n      <th scope=\"col\">Action</th>\n    </tr>\n    </thead>\n\n    <tbody>\n    <tr *ngFor=\"let permission of permissions\">\n      <td><a [routerLink]=\"['/permissions', permission.NAME, {action: 'display'}]\">{{permission.NAME}}</a></td>\n      <td>{{permission.DESCRIPTION}}</td>\n      <td>{{permission.CREATED_BY}}</td>\n      <td>{{permission.CREATE_TIME}}</td>\n      <td>{{permission.CHANGED_BY}}</td>\n      <td>{{permission.CHANGE_TIME}}</td>\n      <td class=\"dk-actions\">\n        <button title=\"Display\" id=\"display\" class=\"btn btn-sm\" type=\"button\" (click)=\"display(permission.NAME)\">\n          <span class=\"fas fa-search\"></span>\n        </button>\n        <button title=\"Change\" id=\"change\" class=\"btn btn-sm\" type=\"button\" (click)=\"change(permission.NAME)\">\n          <span class=\"fas fa-pen\"></span>\n        </button>\n        <button title=\"Delete\" id=\"delete\" class=\"btn btn-sm\" type=\"button\" (click)=\"delete(permission.NAME)\">\n          <span class=\"far fa-trash-alt\"></span>\n        </button>\n      </td>\n    </tr>\n    </tbody>\n  </table>\n\n  <div class=\"modal fade\" [class.show]=\"showDeletionConfirmation\"\n       [ngStyle]=\"{'display': displayDeletionConfirmation}\" id=\"deletionConfirmation\" tabindex=\"-1\" role=\"dialog\">\n    <div class=\"modal-dialog modal-sm modal-dialog-centered\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"confirmDeletion\">Confirm Deletion</h5>\n          <button type=\"button\" class=\"close\" (click)=\"cancelDeletion()\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          <p>Are you sure to delete the permission '{{toBeDeletedInstance}}'?</p>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" id=\"cancel\" class=\"btn btn-sm btn-secondary\" (click)=\"cancelDeletion()\">Cancel</button>\n          <button type=\"button\" id=\"confirm\" class=\"btn btn-sm btn-primary\" (click)=\"confirmDeletion()\">Confirm</button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport {FormArray, FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {AttributeBase, AttributeControlService, Entity, EntityService, RelationMeta, Relationship, UiMapperService} from 'jor-angular';\nimport {ActivatedRoute, ParamMap, Router} from '@angular/router';\nimport {DialogService} from '../../dialog.service';\nimport {IdentityService} from '../../identity.service';\nimport {Message, MessageService} from 'ui-message-angular';\nimport {switchMap} from 'rxjs/operators';\nimport {forkJoin, Observable, of} from 'rxjs';\nimport {existingProfileValidator} from '../../async-validators';\nimport {Authorization} from '../../identity';\n\n@Component({\n  selector: 'app-profile-detail',\n  templateUrl: './profile-detail.component.html',\n  styleUrls: ['./profile-detail.component.css']\n})\nexport class ProfileDetailComponent implements OnInit {\n  mainForm: FormGroup;\n  relationMetas: RelationMeta[];\n  attrCtrls: AttributeBase[];\n  readonly = true;\n  isNewMode = false;\n  action: string;\n  instanceGUID: string;\n  originalValue = {};\n  changedValue = {};\n  tabStrip = 1;\n\n  constructor(private fb: FormBuilder,\n              private route: ActivatedRoute,\n              private router: Router,\n              private dialogService: DialogService,\n              private identityService: IdentityService,\n              private attributeControlService: AttributeControlService,\n              private entityService: EntityService,\n              private uiMapperService: UiMapperService,\n              private messageService: MessageService) {\n  }\n\n  ngOnInit() {\n    this.route.paramMap.pipe(\n      switchMap((params: ParamMap) => {\n        this.action = params.get('action');\n        if (this.action === 'new') {\n          this.isNewMode = true;\n          return forkJoin([\n            this.entityService.getRelationMetaOfEntity('authProfile'),\n            this._createNewEntity()\n          ]);\n        } else {\n          this.isNewMode = false;\n          return forkJoin([\n            this.entityService.getRelationMetaOfEntity('authProfile'),\n            this.identityService.getAuthProfileDetail(params.get('profileName'))\n          ]);\n        }\n      })\n    ).subscribe( data => {\n      this.relationMetas = data[0] as RelationMeta[];\n      this.attrCtrls = this.attributeControlService.toAttributeControl(\n        this.relationMetas.find( relationMeta => relationMeta.RELATION_ID === 'authProfile').ATTRIBUTES);\n      if ('ENTITY_ID' in data[1]) {\n        this.instanceGUID = data[1]['INSTANCE_GUID'];\n        this._generateMainForm(<Entity>data[1]);\n        if (this.isNewMode || this.action === 'change') {\n          this._switch2EditMode();\n        } else {\n          this._switch2DisplayMode();\n        }\n      } else {\n        const errorMessages = <Message[]>data[1];\n        errorMessages.forEach( msg => this.messageService.add(msg));\n      }\n    });\n  }\n\n  getAttrCtrlFromID(fieldName: string): AttributeBase {\n    return this.attrCtrls.find( attrCtrl => attrCtrl.name === fieldName);\n  }\n\n  switchTabStrip(tabStripID: number): void {\n    this.tabStrip = tabStripID;\n  }\n\n  switchEditDisplay(): void {\n    if (this.readonly ) {\n      this._switch2EditMode();\n    } else {\n      if (this.mainForm.dirty) {\n        this.dialogService.confirm('Discard changes?').subscribe(confirm => {\n          if (confirm) {\n            this.mainForm.reset(this.originalValue);\n            this._switch2DisplayMode();\n          }\n        });\n      } else {\n        this._switch2DisplayMode();\n      }\n    }\n    this.messageService.clearMessages();\n  }\n\n  _switch2DisplayMode(): void {\n    this.readonly = true;\n\n    const profileNameCtrl = this.mainForm.get('PROFILE_NAME') as FormControl;\n    profileNameCtrl.clearAsyncValidators();\n\n    this.mainForm.markAsPristine();\n    // Replace the URL from change to display\n    window.history.replaceState({}, '', `/profiles/${profileNameCtrl.value};action=display`);\n  }\n\n  _switch2EditMode(): void {\n    this.readonly = false;\n\n    const profileNameCtrl = this.mainForm.get('PROFILE_NAME') as FormControl;\n    if (this.isNewMode) {\n      profileNameCtrl.setAsyncValidators(\n        existingProfileValidator(this.identityService, this.messageService));\n    }\n\n    // Replace the URL from to display\n    if (this.action === 'display') {this.action = 'change'; }\n    window.history.replaceState({}, '', `/profiles/${profileNameCtrl.value};action=` + this.action);\n  }\n\n  _createNewEntity(): Observable<Entity> {\n    const profileDetail = new Entity();\n    profileDetail.ENTITY_ID = 'authProfile';\n    profileDetail['authProfile'] = [\n      { PROFILE_NAME: '', DESC: '', CREATED_BY: '', CREATE_TIME: '', CHANGED_BY: '', CHANGE_TIME: '' }\n    ];\n    profileDetail['relationships'] = [];\n    return of(profileDetail);\n  }\n\n  _generateMainForm(data: Entity): void {\n    this.mainForm = this.fb.group({\n      PROFILE_NAME: [data['authProfile'][0]['PROFILE_NAME'], [Validators.required]],\n      DESC: [data['authProfile'][0]['DESC']],\n      admin: this.fb.group({\n        CREATED_BY: [data['authProfile'][0]['CREATED_BY']],\n        CREATE_TIME: [data['authProfile'][0]['CREATE_TIME']],\n        CHANGED_BY: [data['authProfile'][0]['CHANGED_BY']],\n        CHANGE_TIME: [data['authProfile'][0]['CHANGE_TIME']]\n      })\n    });\n    const parsedRelationship = this._parseRelationships( data['relationships'] );\n    this.mainForm.addControl('authObjects',\n      this.fb.array(parsedRelationship.authObjects.map( authObject => this.fb.group( authObject ))));\n    this.originalValue = this.mainForm.getRawValue();\n  }\n\n  _parseRelationships( relationships: Relationship[] ): any {\n    const parsedRelationship = {\n      authObjects : []\n    };\n    if (!relationships) { return parsedRelationship; }\n    relationships.forEach( relationship => {\n      switch (relationship.RELATIONSHIP_ID) {\n        case 'rs_auth_profile_object':\n          __parseAuthObjects(relationship);\n          break;\n        default:\n        // Do nothing.\n      }\n    });\n    return parsedRelationship;\n\n    function __parseAuthObjects(relationship: Relationship): void {\n      relationship.values.forEach(value => {\n        const authorization = value['AUTH_VALUE'] ? <Authorization>JSON.parse(value['AUTH_VALUE']) : null;\n        const status = authorization ?\n          Object.values(authorization.AuthFieldValue).findIndex(authValue => !authValue) !== -1 ?\n            'yellow' : 'green' : 'red';\n        parsedRelationship.authObjects.push({\n          CHECKED: '',\n          COLLAPSED: false,\n          NODE_ID: value['RELATIONSHIP_INSTANCE_GUID'],\n          STATUS: status,\n          RELATIONSHIP_INSTANCE_GUID: value['RELATIONSHIP_INSTANCE_GUID'],\n          auth_object_INSTANCE_GUID: value['PARTNER_INSTANCES'][0]['INSTANCE_GUID'],\n          AUTH_VALUE: value['AUTH_VALUE'],\n          OBJ_NAME: value['PARTNER_INSTANCES'][0]['authObject'][0]['OBJ_NAME'],\n          DESC: value['PARTNER_INSTANCES'][0]['authObject'][0]['DESC'],\n          ROW_TYPE: 'OBJECT',\n          FIELD_NAME: '',\n          DATA_ELEMENT: '',\n        });\n\n        const authObjectFields = value['PARTNER_INSTANCES'][0]['relationships'][0];\n        authObjectFields.values.forEach(value2 => {\n          const authFieldName = value2['PARTNER_INSTANCES'][0]['authField'][0]['FIELD_NAME'];\n          parsedRelationship.authObjects.push({\n            CHECKED: '',\n            COLLAPSED: false,\n            NODE_ID: value['RELATIONSHIP_INSTANCE_GUID'],\n            STATUS: authorization && authorization.AuthFieldValue && authorization.AuthFieldValue[authFieldName] ?\n              authorization.AuthFieldValue[authFieldName].length > 0 ? 'green' : 'red' : 'red',\n            RELATIONSHIP_INSTANCE_GUID: value['RELATIONSHIP_INSTANCE_GUID'],\n            auth_object_INSTANCE_GUID: '',\n            AUTH_VALUE: authorization && authorization.AuthFieldValue[authFieldName]\n              && JSON.stringify(authorization.AuthFieldValue[authFieldName], null, ' '),\n            OBJ_NAME: value['PARTNER_INSTANCES'][0]['authObject'][0]['OBJ_NAME'],\n            DESC: '',\n            ROW_TYPE: 'FIELD',\n            FIELD_NAME: authFieldName,\n            DATA_ELEMENT: value2['PARTNER_INSTANCES'][0]['authField'][0]['DATA_ELEMENT'],\n          });\n        });\n      });\n    }\n  }\n\n  _resetValue(data: Entity): void {\n    this.originalValue = {\n      PROFILE_NAME: data['authProfile'][0]['PROFILE_NAME'],\n      DESC: data['authProfile'][0]['DESC'],\n      admin: {\n        CREATED_BY: data['authProfile'][0]['CREATED_BY'],\n        CREATE_TIME: data['authProfile'][0]['CREATE_TIME'],\n        CHANGED_BY: data['authProfile'][0]['CHANGED_BY'],\n        CHANGE_TIME: data['authProfile'][0]['CHANGE_TIME']\n      }\n    };\n    const parsedRelationship = this._parseRelationships( data['relationships'] );\n    this.originalValue['authObjects'] = parsedRelationship.authObjects;\n    this.originalValue['roles'] = parsedRelationship.roles;\n    this.mainForm.reset(this.originalValue);\n  }\n\n  save() {\n    this.messageService.clearMessages();\n    if (this._composeChanges()) {\n      this.identityService.save(<Entity>this.changedValue).subscribe( data => {\n        this.changedValue = {};\n        if ('INSTANCE_GUID' in data) {\n          const profileName = data['authProfile'][0]['PROFILE_NAME'];\n          this.instanceGUID = data['INSTANCE_GUID'];\n          this.isNewMode = false;\n          this.identityService.getAuthProfileDetail(profileName).subscribe(instance => {\n            if ('ENTITY_ID' in instance) {\n              this._switch2DisplayMode();\n              this._resetValue(<Entity>instance);\n            } else {\n              const errorMessages = <Message[]>instance;\n              errorMessages.forEach( msg => this.messageService.add(msg));\n            }\n          });\n          this.messageService.reportMessage('AUTH_PROFILE', 'SAVED', 'S', profileName);\n        } else {\n          const errorMessages = <Message[]>data;\n          errorMessages.forEach( msg => this.messageService.add(msg));\n        }\n      });\n    }\n  }\n\n  _composeChanges() {\n    if (this.mainForm.invalid) {\n      this.messageService.reportMessage('AUTH_PROFILE', 'INVALID', 'E');\n      return false;\n    }\n\n    if (this.mainForm.dirty === false) {\n      this.messageService.reportMessage('GENERAL', 'NO_CHANGE', 'W');\n      return false;\n    }\n\n    this.changedValue['ENTITY_ID'] = 'authProfile';\n    this.changedValue['INSTANCE_GUID'] = this.instanceGUID;\n\n    if (this.isNewMode) {\n      this.changedValue['authProfile'] = {\n        action: 'add', PROFILE_NAME: this.mainForm.get('PROFILE_NAME').value,\n        CREATED_BY: this.identityService.Session.USER_ID, CREATE_TIME: this.identityService.CurrentTime,\n        CHANGED_BY: this.identityService.Session.USER_ID, CHANGE_TIME: this.identityService.CurrentTime};\n    } else {\n      this.changedValue['authProfile'] = {\n        action: 'update', CHANGED_BY: this.identityService.Session.USER_ID, CHANGE_TIME: this.identityService.CurrentTime};\n    }\n\n    if (this.mainForm.get('DESC').dirty) {\n      this.changedValue['authProfile']['DESC'] = this.mainForm.get('DESC').value;\n    }\n\n    const authObjectFormArray = this.mainForm.get('authObjects') as FormArray;\n    const relationship = this.identityService.composeAuthChanges(authObjectFormArray,\n      this.originalValue['appAuthObjects'], 'rs_auth_profile_object');\n    if (relationship) { this.changedValue['relationships'] = [relationship]; }\n\n    return true;\n  }\n\n  canDeactivate(): Observable<boolean> | boolean {\n    if (this.isNewMode || (this.mainForm && this.mainForm.dirty)) {\n      return this.dialogService.confirm('Discard changes?');\n    } else {\n      return true;\n    }\n  }\n}\n","<nav class=\"navbar dk-fixed-top navbar-light bg-light\">\n  <div>\n    <span class=\"font-weight-bold mb-0 mx-1\">{{isNewMode? 'New Profile' : readonly? 'Display Profile' : 'Change Profile'}}</span>\n  </div>\n\n  <div class=\"flex-row-reverse\">\n    <button class=\"btn btn-sm btn-outline-primary mr-2\" type=\"button\" title=\"Edit/Display\" id=\"editDisplay\" (click)=\"switchEditDisplay()\">\n      <span *ngIf=\"readonly\" class=\"fas fa-edit\"> Edit</span>\n      <span *ngIf=\"!readonly\" class=\"fas fa-glasses\"> Display</span>\n    </button>\n    <button class=\"btn btn-sm btn-outline-primary mr-2\" type=\"button\" title=\"Save\" id=\"save\" (click)=\"save()\" [disabled]=\"readonly\">\n      <span class=\"fas fa-save\"> Save</span>\n    </button>\n  </div>\n</nav>\n\n<div class=\"mt-2 mb-2\">\n  <dk-message></dk-message>\n</div>\n\n<div *ngIf=\"mainForm\" class=\"ml-2\">\n  <div class=\"mt-2 ml-1 row\">\n    <dk-app-attribute-form2 class=\"col-md-6 col-lg-4\"\n                            [attributeControl]=\"getAttrCtrlFromID('PROFILE_NAME')\"\n                            [formGroup]=\"mainForm\"\n                            [readonly]=\"!isNewMode\"\n                            [isSmallSize] = \"true\">\n    </dk-app-attribute-form2>\n    <dk-app-attribute-form2 class=\"col-md-6 col-lg-4\"\n                            [attributeControl]=\"getAttrCtrlFromID('DESC')\"\n                            [formGroup]=\"mainForm\"\n                            [readonly]=\"readonly\"\n                            [isSmallSize] = \"true\">\n    </dk-app-attribute-form2>\n  </div>\n\n  <ul class=\"nav nav-tabs mt-1\">\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [class.active]=\"tabStrip===1\" href=\"javascript:void(0);\" (click)=\"switchTabStrip(1)\">Authorization</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [class.active]=\"tabStrip===3\" href=\"javascript:void(0);\" (click)=\"switchTabStrip(3)\">Admin</a>\n    </li>\n  </ul>\n\n  <div class=\"mt-2\" [ngSwitch]=\"tabStrip\">\n    <app-authorization *ngSwitchCase=\"1\" [mainForm]=\"mainForm\" [ctrlName]=\"'authObjects'\"  [readonly]=\"readonly\"></app-authorization>\n    <app-admin-info *ngSwitchCase=\"3\" [mainForm]=\"mainForm\" [relationMetas]=\"relationMetas\" [adminRelation]=\"'authProfile'\"></app-admin-info>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {AuthProfileList} from '../../identity';\nimport {IdentityService} from '../../identity.service';\nimport {Message, MessageService, messageType} from 'ui-message-angular';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-profile-list',\n  templateUrl: './profile-list.component.html',\n  styleUrls: ['./profile-list.component.css']\n})\nexport class ProfileListComponent implements OnInit {\n  profileName: string;\n  profileDesc: string;\n  authProfiles: AuthProfileList[];\n  showDeletionConfirmation = false;\n  toBeDeletedInstance: string;\n\n  get displayDeletionConfirmation() {return this.showDeletionConfirmation ? 'block' : 'none'; }\n\n  constructor(private identityService: IdentityService,\n              private messageService: MessageService,\n              private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  search() {\n    this.messageService.clearMessages();\n    this.authProfiles = [];\n    this.profileName = this.profileName ? this.profileName.trim() : '';\n    this.profileDesc = this.profileDesc ? this.profileDesc.trim() : '';\n    this.identityService.searchAuthProfiles(this.profileName, this.profileDesc).subscribe(\n      data => {\n        if (!data[0]) {\n          this.messageService.reportMessage('GENERAL', 'EMPTY_LIST', messageType.Warning);\n        } else if (data[0]['msgCat']) {\n          const messages = <Message[]>data;\n          messages.forEach( msg => this.messageService.add(msg));\n        } else {\n          this.authProfiles = <AuthProfileList[]>data;\n        }\n      }\n    );\n  }\n\n  enterSearch($event): void {\n    if ($event.keyCode === 13 ) {\n      this.search();\n    }\n  }\n\n  new(): void {\n    this.router.navigate(['profiles', '/', {action: 'new'}]);\n  }\n\n  display(profileName: string): void {\n    this.router.navigate(['profiles', profileName, {action: 'display'}]);\n  }\n\n  change(profileName: string): void {\n    this.router.navigate(['profiles', profileName, {action: 'change'}]);\n  }\n\n  delete(profileName: string): void {\n    this.toBeDeletedInstance = profileName;\n    this.showDeletionConfirmation = true;\n  }\n\n  cancelDeletion(): void {\n    this.showDeletionConfirmation = false;\n  }\n\n  confirmDeletion(): void {\n    const toBeDeletedInstanceGUID = this.authProfiles.find(\n      ele => ele.PROFILE_NAME === this.toBeDeletedInstance).INSTANCE_GUID;\n    this.identityService.delete(toBeDeletedInstanceGUID).subscribe( errorMsg => {\n      this.showDeletionConfirmation = false;\n      if (errorMsg) {\n        const messages = <Message[]>errorMsg;\n        messages.forEach( msg => this.messageService.add(msg));\n      } else {\n        this.search();\n      }\n    });\n  }\n}\n","<div class=\"card mb-3 pt-3\">\n  <div class=\"mt-2 pl-4 row\">\n    <div class=\"col-6 form-group row\">\n      <label for=\"profile_name\" class=\"col-sm-3 col-form-label\">Profile Name:</label>\n      <input id=\"profile_name\" name=\"profile_name\" [(ngModel)]=\"profileName\" type=\"text\"\n             class=\"col-sm-6 form-control form-control-sm\" (keyup)=\"enterSearch($event)\" autofocus>\n    </div>\n    <div class=\"col-6 form-group row\">\n      <label for=\"profile_desc\" class=\"col-sm-3 col-form-label\">Description:</label>\n      <input id=\"profile_desc\" name=\"profile_desc\" [(ngModel)]=\"profileDesc\" type=\"text\"\n             class=\"col-sm-6 form-control form-control-sm\" (keyup)=\"enterSearch($event)\">\n    </div>\n  </div>\n\n  <div class=\"mb-4\">\n    <button type=\"button\" id=\"search\" class=\"btn btn-primary btn-sm float-right mr-4\" (click)=\"search()\">Search</button>\n  </div>\n</div>\n\n<div class=\"mt-2 mb-4 mx-4\">\n  <dk-message></dk-message>\n  <div class=\"btn-toolbar justify-content-end my-2\" role=\"toolbar\">\n    <button type=\"button\" id=\"new\" class=\"btn btn-light btn-sm\" (click)=\"new()\">\n      <span class=\"fas fa-plus\"></span> New</button>\n  </div>\n  <table class=\"table table-bordered table-sm\">\n    <thead class=\"thead-light\">\n    <tr>\n      <th scope=\"col\">Name</th>\n      <th scope=\"col\">Description</th>\n      <th scope=\"col\">Changed By</th>\n      <th scope=\"col\">Changed At</th>\n      <th scope=\"col\">Action</th>\n    </tr>\n    </thead>\n\n    <tbody>\n    <tr *ngFor=\"let authProfile of authProfiles\">\n      <td><a [routerLink]=\"['/profiles', authProfile.PROFILE_NAME, {action: 'display'}]\">{{authProfile.PROFILE_NAME}}</a></td>\n      <td>{{authProfile.DESC}}</td>\n      <td>{{authProfile.CHANGED_BY}}</td>\n      <td>{{authProfile.CHANGE_TIME}}</td>\n      <td class=\"dk-actions\">\n        <button title=\"Display\" id=\"display\" class=\"btn btn-sm\" type=\"button\" (click)=\"display(authProfile.PROFILE_NAME)\">\n          <span class=\"fas fa-search\"></span>\n        </button>\n        <button title=\"Change\" id=\"change\" class=\"btn btn-sm\" type=\"button\" (click)=\"change(authProfile.PROFILE_NAME)\">\n          <span class=\"fas fa-pen\"></span>\n        </button>\n        <button title=\"Delete\" id=\"delete\" class=\"btn btn-sm\" type=\"button\" (click)=\"delete(authProfile.PROFILE_NAME)\">\n          <span class=\"far fa-trash-alt\"></span>\n        </button>\n      </td>\n    </tr>\n    </tbody>\n  </table>\n\n  <div class=\"modal fade\" [class.show]=\"showDeletionConfirmation\"\n       [ngStyle]=\"{'display': displayDeletionConfirmation}\" id=\"deletionConfirmation\" tabindex=\"-1\" role=\"dialog\">\n    <div class=\"modal-dialog modal-sm modal-dialog-centered\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"confirmDeletion\">Confirm Deletion</h5>\n          <button type=\"button\" class=\"close\" (click)=\"cancelDeletion()\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          <p>Are you sure to delete the profile '{{toBeDeletedInstance}}'?</p>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" id=\"cancel\" class=\"btn btn-sm btn-secondary\" (click)=\"cancelDeletion()\">Cancel</button>\n          <button type=\"button\" id=\"confirm\" class=\"btn btn-sm btn-primary\" (click)=\"confirmDeletion()\">Confirm</button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {FormArray, FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {AttributeBase, AttributeControlService, RelationMeta} from \"jor-angular\";\n\n@Component({\n  selector: 'app-user-address',\n  templateUrl: './user-address.component.html',\n  styleUrls: ['./user-address.component.css']\n})\nexport class UserAddressComponent implements OnInit {\n  @Input() readonly: boolean;\n  @Input() userForm: FormGroup;\n  @Input() relationMetas: RelationMeta[];\n  private attrCtrls: AttributeBase[];\n  userAddressFormArray: FormArray;\n\n  constructor(private fb: FormBuilder,\n              private attributeControlService: AttributeControlService) { }\n\n  ngOnInit() {\n    this.userAddressFormArray = this.userForm.get('addresses') as FormArray;\n    this.attrCtrls = this.attributeControlService.toAttributeControl(\n      this.relationMetas.find( relationMeta => relationMeta.RELATION_ID === 'r_address').ATTRIBUTES);\n  }\n\n  getAttrCtrlFromID(fieldName: string): AttributeBase {\n    return this.attrCtrls.find( attrCtrl => attrCtrl.name === fieldName);\n  }\n\n  addAddress() {\n    const addressFormGroup = this.fb.group({\n      ADDRESS_ID: [''],\n      TYPE: ['', [Validators.required]],\n      ADDRESS_VALUE: ['', [Validators.required]],\n      POSTCODE: [''],\n      CITY: [''],\n      COUNTRY: [''],\n      PRIMARY: []\n    });\n    if (this.userAddressFormArray.length === 0) {\n      addressFormGroup.get('PRIMARY').setValue(1);\n      addressFormGroup.get('PRIMARY').markAsDirty();\n    }\n    this.userAddressFormArray.push(addressFormGroup);\n  }\n\n  deleteAddress(index: number) {\n    if (this.userAddressFormArray.length > 1 &&\n        this.userAddressFormArray.at(index).value['PRIMARY']) {\n      const newPrimaryIndex = index === 0 ? 1 : 0;\n      this.userAddressFormArray.at(newPrimaryIndex).get('PRIMARY').setValue(1);\n      this.userAddressFormArray.at(newPrimaryIndex).get('PRIMARY').markAsDirty();\n    }\n    this.userAddressFormArray.removeAt(index);\n    this.userAddressFormArray.markAsDirty();\n  }\n}\n","<div class=\"card mt-4\">\n  <div class=\"card-body\">\n    <div *ngFor=\"let userAddressForm of userAddressFormArray.controls; let i = index\" class=\"card mb-4\">\n      <button type=\"button\" id=\"remove\" class=\"close d-flex justify-content-end mr-2\" aria-label=\"Close\"\n              (click)=\"deleteAddress(i)\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n      <div class=\"card-body row\" [formGroup]=\"userAddressForm\">\n        <dk-app-attribute-form2 class=\"col-3\"\n                                [attributeControl]=\"getAttrCtrlFromID('TYPE')\"\n                                [formGroup]=\"userAddressForm\"\n                                [readonly]=\"readonly\"\n                                [isSmallSize]=\"true\">\n        </dk-app-attribute-form2>\n        <dk-app-attribute-form2 class=\"col-6\"\n                                [attributeControl]=\"getAttrCtrlFromID('ADDRESS_VALUE')\"\n                                [formGroup]=\"userAddressForm\"\n                                [readonly]=\"readonly\"\n                                [isSmallSize]=\"true\">\n        </dk-app-attribute-form2>\n        <div class=\"col-1 row form-group mr-2\">\n          <label for=\"primaryAddress\" class=\"col-form-label col-form-label-sm\">Primary</label>\n          <input type=\"radio\" class=\"form-control form-control-sm\" id=\"primaryAddress\" [value]=\"1\"\n                 name=\"PRIMARY\" formControlName=\"PRIMARY\">\n        </div>\n        <dk-app-attribute-form2 class=\"col-md-3\"\n                                [attributeControl]=\"getAttrCtrlFromID('POSTCODE')\"\n                                [formGroup]=\"userAddressForm\"\n                                [readonly]=\"readonly\"\n                                [isSmallSize]=\"true\">\n        </dk-app-attribute-form2>\n        <dk-app-attribute-form2 class=\"col-md-3\"\n                                [attributeControl]=\"getAttrCtrlFromID('CITY')\"\n                                [formGroup]=\"userAddressForm\"\n                                [readonly]=\"readonly\"\n                                [isSmallSize]=\"true\">\n        </dk-app-attribute-form2>\n        <dk-app-attribute-form2 class=\"col-md-3\"\n                                [attributeControl]=\"getAttrCtrlFromID('COUNTRY')\"\n                                [formGroup]=\"userAddressForm\"\n                                [readonly]=\"readonly\"\n                                [isSmallSize]=\"true\">\n        </dk-app-attribute-form2>\n      </div>\n    </div>\n    <button type=\"button\" id=\"add\" class=\"btn btn-sm btn-primary float-right\" [disabled]=\"readonly\" (click)=\"addAddress()\">Add</button>\n  </div>\n</div>\n","import {Component, Input, OnInit } from '@angular/core';\nimport {FormGroup} from \"@angular/forms\";\nimport {AttributeBase, AttributeControlService, RelationMeta} from \"jor-angular\";\n\n@Component({\n  selector: 'app-user-basic',\n  templateUrl: './user-basic.component.html',\n  styleUrls: ['./user-basic.component.css']\n})\nexport class UserBasicComponent implements OnInit {\n  @Input() readonly: boolean;\n  @Input() userForm: FormGroup;\n  @Input() relationMetas: RelationMeta[];\n  private attrCtrls: AttributeBase[];\n  userBasicNamesForm: FormGroup;\n  userBasicEmployeeForm: FormGroup;\n\n  constructor(private attributeControlService: AttributeControlService) { }\n\n  ngOnInit() {\n    this.userBasicNamesForm = this.userForm.get('userBasic.names') as FormGroup;\n    this.userBasicEmployeeForm = this.userForm.get('userBasic.employee') as FormGroup;\n    this.attrCtrls = this.attributeControlService.toAttributeControl(\n      this.relationMetas.find( relationMeta => relationMeta.RELATION_ID === 'r_employee').ATTRIBUTES);\n    this.attrCtrls = this.attrCtrls.concat(this.attributeControlService.toAttributeControl(\n      this.relationMetas.find( relationMeta => relationMeta.RELATION_ID === 'r_user').ATTRIBUTES));\n  }\n\n  getAttrCtrlFromID(fieldName: string): AttributeBase {\n    return this.attrCtrls.find( attrCtrl => attrCtrl.name === fieldName);\n  }\n}\n","<div class=\"card mt-4\">\n  <div class=\"card-header\">Name</div>\n  <div class=\"card-body\">\n    <form class=\"mt-2 row\">\n      <dk-app-attribute-form2 class=\"col-md-6 col-lg-4\"\n                              [attributeControl]=\"getAttrCtrlFromID('USER_NAME')\"\n                              [formGroup]=\"userBasicNamesForm\"\n                              [readonly]=\"readonly\"\n                              [isSmallSize]=\"true\">\n      </dk-app-attribute-form2>\n      <dk-app-attribute-form2 class=\"col-md-6 col-lg-4\"\n                              [attributeControl]=\"getAttrCtrlFromID('DISPLAY_NAME')\"\n                              [formGroup]=\"userBasicNamesForm\"\n                              [readonly]=\"readonly\"\n                              [isSmallSize]=\"true\">\n      </dk-app-attribute-form2>\n      <div class=\"col-md-4\"></div>\n      <dk-app-attribute-form2 class=\"col-md-6 col-lg-4\"\n                              [attributeControl]=\"getAttrCtrlFromID('GIVEN_NAME')\"\n                              [formGroup]=\"userBasicNamesForm\"\n                              [readonly]=\"readonly\"\n                              [isSmallSize]=\"true\">\n      </dk-app-attribute-form2>\n      <dk-app-attribute-form2 class=\"col-md-6 col-lg-4\"\n                              [attributeControl]=\"getAttrCtrlFromID('MIDDLE_NAME')\"\n                              [formGroup]=\"userBasicNamesForm\"\n                              [readonly]=\"readonly\"\n                              [isSmallSize]=\"true\">\n      </dk-app-attribute-form2>\n      <dk-app-attribute-form2 class=\"col-md-6 col-lg-4\"\n                              [attributeControl]=\"getAttrCtrlFromID('FAMILY_NAME')\"\n                              [formGroup]=\"userBasicNamesForm\"\n                              [readonly]=\"readonly\"\n                              [isSmallSize]=\"true\">\n      </dk-app-attribute-form2>\n    </form>\n  </div>\n</div>\n\n<div class=\"card mt-4\">\n  <div class=\"card-header\">Employee</div>\n  <div class=\"card-body\">\n    <form class=\"mt-2 row\">\n      <dk-app-attribute-form2 class=\"col-md-6 col-lg-4\"\n                              [attributeControl]=\"getAttrCtrlFromID('COMPANY_ID')\"\n                              [formGroup]=\"userBasicEmployeeForm\"\n                              [readonly]=\"readonly\"\n                              [isSmallSize]=\"true\">\n      </dk-app-attribute-form2>\n      <dk-app-attribute-form2 class=\"col-md-6 col-lg-4\"\n                              [attributeControl]=\"getAttrCtrlFromID('DEPARTMENT_ID')\"\n                              [formGroup]=\"userBasicEmployeeForm\"\n                              [readonly]=\"readonly\"\n                              [isSmallSize]=\"true\">\n      </dk-app-attribute-form2>\n      <dk-app-attribute-form2 class=\"col-md-6 col-lg-4\"\n                              [attributeControl]=\"getAttrCtrlFromID('TITLE')\"\n                              [formGroup]=\"userBasicEmployeeForm\"\n                              [readonly]=\"readonly\"\n                              [isSmallSize]=\"true\">\n      </dk-app-attribute-form2>\n      <dk-app-attribute-form2 class=\"col-md-6 col-lg-4\"\n                              [attributeControl]=\"getAttrCtrlFromID('GENDER')\"\n                              [formGroup]=\"userBasicEmployeeForm\"\n                              [readonly]=\"readonly\"\n                              [isSmallSize]=\"true\">\n      </dk-app-attribute-form2>\n    </form>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {FormArray, FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {ActivatedRoute, ParamMap, Router} from '@angular/router';\nimport {Message, MessageService} from 'ui-message-angular';\nimport {msgStore} from '../../msgStore';\nimport {switchMap} from 'rxjs/operators';\nimport {IdentityService} from '../../identity.service';\nimport {forkJoin, Observable, of} from 'rxjs';\nimport {\n  AttributeBase,\n  AttributeControlService,\n  Entity,\n  EntityService,\n  RelationMeta,\n  UiMapperService\n} from 'jor-angular';\nimport {existingUserIDValidator, existingUserNameValidator} from '../../async-validators';\nimport {DialogService} from '../../dialog.service';\n\n@Component({\n  selector: 'app-user-detail',\n  templateUrl: './user-detail.component.html',\n  styleUrls: ['./user-detail.component.css']\n})\nexport class UserDetailComponent implements OnInit {\n  userForm: FormGroup;\n  relationMetas: RelationMeta[];\n  attrCtrls: AttributeBase[];\n  readonly = true;\n  isNewMode = false;\n  action: string;\n  instanceGUID: string;\n  originalUserValue = {};\n  changedUser = {};\n  tabStrip = 1;\n\n  get pwdStatus(): string {\n    switch (this.userForm.get('PWD_STATUS').value) {\n      case '':\n        return 'Initial';\n      case 1:\n        return 'Active';\n      case 3:\n        return 'Need Change';\n      default:\n        return 'Initial';\n    }\n  }\n\n  constructor(private fb: FormBuilder,\n              private route: ActivatedRoute,\n              private router: Router,\n              private dialogService: DialogService,\n              private identityService: IdentityService,\n              private attributeControlService: AttributeControlService,\n              private entityService: EntityService,\n              private uiMapperService: UiMapperService,\n              private messageService: MessageService) {\n  }\n\n  ngOnInit() {\n    this.route.paramMap.pipe(\n      switchMap((params: ParamMap) => {\n        this.action = params.get('action');\n        if (this.action === 'new') {\n          this.isNewMode = true;\n          return forkJoin(\n            [this.entityService.getRelationMetaOfEntity('person'), this._createNewUser()]);\n        } else {\n          this.isNewMode = false;\n          return forkJoin(\n            [this.entityService.getRelationMetaOfEntity('person'),\n            this.identityService.getUserDetail(params.get('userID'))]);\n        }\n      })\n    ).subscribe( data => {\n      this.relationMetas = data[0] as RelationMeta[];\n      this.attrCtrls = this.attributeControlService.toAttributeControl(\n        this.relationMetas.find( relationMeta => relationMeta.RELATION_ID === 'r_user').ATTRIBUTES);\n      if ('ENTITY_ID' in data[1]) {\n        this.instanceGUID = data[1]['INSTANCE_GUID'];\n        this._generateUserForm(<Entity>data[1]);\n        if (this.isNewMode || this.action === 'change') {\n          this._switch2EditMode();\n        } else {\n          this._switch2DisplayMode();\n        }\n      } else {\n        const errorMessages = <Message[]>data[1];\n        errorMessages.forEach( msg => this.messageService.add(msg));\n      }\n    });\n  }\n\n  getAttrCtrlFromID(fieldName: string): AttributeBase {\n    return this.attrCtrls.find( attrCtrl => attrCtrl.name === fieldName);\n  }\n\n  switchTabStrip(tabStripID: number): void {\n    this.tabStrip = tabStripID;\n  }\n\n  switchEditDisplay(): void {\n    if (this.readonly ) {\n      this._switch2EditMode();\n    } else {\n      if (this.userForm.dirty) {\n        this.dialogService.confirm('Discard changes?').subscribe(confirm => {\n          if (confirm) {\n            this.userForm.reset(this.originalUserValue);\n            this._switch2DisplayMode();\n          }\n        });\n      } else {\n        this._switch2DisplayMode();\n      }\n    }\n    this.messageService.clearMessages();\n  }\n\n  _switch2DisplayMode(): void {\n    this.readonly = true;\n    this._setCheckBoxState();\n\n    const userIDCtrl = this.userForm.get('USER_ID') as FormControl;\n    userIDCtrl.clearAsyncValidators();\n    const userNameCtrl = this.userForm.get('userBasic.names.USER_NAME') as FormControl;\n    userNameCtrl.clearAsyncValidators();\n\n    const emailArray = this.userForm.get('emails') as FormArray;\n    let lastIndex = emailArray.length - 1;\n    while (lastIndex >= 0) {\n      const emailFormGroup = emailArray.at(lastIndex);\n      if (emailFormGroup.invalid || !emailFormGroup.value.EMAIL) {\n        emailArray.removeAt(lastIndex);\n      }\n      lastIndex--;\n    }\n\n    const addressArray = this.userForm.get('addresses') as FormArray;\n    lastIndex = addressArray.length - 1;\n    while (lastIndex >= 0) {\n      const addressFormGroup = addressArray.at(lastIndex);\n      if (addressFormGroup.invalid || !addressFormGroup.value.ADDRESS_VALUE) {\n        addressArray.removeAt(lastIndex);\n      }\n      lastIndex--;\n    }\n\n    const roleArray = this.userForm.get('userRole') as FormArray;\n    lastIndex = roleArray.length - 1;\n    while (lastIndex >= 0) {\n      const roleFormGroup = roleArray.at(lastIndex);\n      if (roleFormGroup.invalid || !roleFormGroup.value.NAME) {\n        roleArray.removeAt(lastIndex);\n      }\n      lastIndex--;\n    }\n\n    this.userForm.markAsPristine();\n    // Replace the URL from change to display\n    window.history.replaceState({}, '', `/users/${userIDCtrl.value};action=display`);\n  }\n\n  _switch2EditMode(): void {\n    this.readonly = false;\n    this._setCheckBoxState();\n\n    const userIDCtrl = this.userForm.get('USER_ID') as FormControl;\n    if (this.isNewMode) {\n      userIDCtrl.setAsyncValidators(\n        existingUserIDValidator(this.identityService, this.messageService));\n    }\n\n    const userNameCtrl = this.userForm.get('userBasic.names.USER_NAME') as FormControl;\n    userNameCtrl.setAsyncValidators(\n      existingUserNameValidator(this.identityService, this.messageService, this.userForm.get('USER_ID').value));\n\n    const roleArray = this.userForm.get('userRole') as FormArray;\n    roleArray.push( this.fb.group({\n      NAME: [''],\n      DESCRIPTION: [''],\n      system_role_INSTANCE_GUID: [''],\n      RELATIONSHIP_INSTANCE_GUID: [''],\n    }));\n\n    // Replace the URL from to display\n    if (this.action === 'display') {this.action = 'change'; }\n    window.history.replaceState({}, '', `/users/${userIDCtrl.value};action=` + this.action);\n  }\n\n  _createNewUser(): Observable<Entity> {\n    const userDetail = new Entity();\n    userDetail['ENTITY_ID'] = 'person';\n    userDetail['r_user'] = [\n      { USER_ID: '', LOCK: 0, PWD_STATUS: '', USER_NAME: '', DISPLAY_NAME: '',\n        GIVEN_NAME: '', MIDDLE_NAME: '', FAMILY_NAME: ''}\n    ];\n    userDetail['r_employee'] = [\n      {TITLE: '', DEPARTMENT_ID: '', COMPANY_ID: '', GENDER: ''}\n    ];\n    userDetail['r_email'] = [];\n    userDetail['r_personalization'] = [\n      {USER_ID: '', LANGUAGE: '', TIMEZONE: '', DECIMAL_FORMAT: '', DATE_FORMAT: ''}\n    ];\n    userDetail['relationships'] = [];\n    return of(userDetail);\n  }\n\n  _generateUserForm(data: Entity): void {\n    this.userForm = this.fb.group({\n      USER_ID: [data['r_user'][0]['USER_ID'], [Validators.required]],\n      LOCK: [data['r_user'][0]['LOCK']],\n      PWD_STATUS: [data['r_user'][0]['PWD_STATUS']],\n      userBasic: this.fb.group({\n        names: this.fb.group({\n          USER_NAME: [data['r_user'][0]['USER_NAME'], [Validators.required]],\n          DISPLAY_NAME: [data['r_user'][0]['DISPLAY_NAME'], [Validators.required]],\n          GIVEN_NAME: [data['r_user'][0]['GIVEN_NAME']],\n          MIDDLE_NAME: [data['r_user'][0]['MIDDLE_NAME']],\n          FAMILY_NAME: [data['r_user'][0]['FAMILY_NAME']]\n        }),\n        employee: this.fb.group({\n          TITLE: [data['r_employee'][0]['TITLE']],\n          DEPARTMENT_ID: [data['r_employee'][0]['DEPARTMENT_ID']],\n          COMPANY_ID: [data['r_employee'][0]['COMPANY_ID'], [Validators.required]],\n          GENDER: [data['r_employee'][0]['GENDER']]\n        })\n      }),\n      emails:  this.fb.array([]),\n      addresses: this.fb.array([]),\n      userPersonalization: this.fb.group({\n        USER_ID: [data['r_personalization'] ? data['r_personalization'][0]['USER_ID'] : ''],\n        LANGUAGE: [data['r_personalization'] ? data['r_personalization'][0]['LANGUAGE'] : ''],\n        TIMEZONE: [data['r_personalization'] ? data['r_personalization'][0]['TIMEZONE'] : ''],\n        DECIMAL_FORMAT: [data['r_personalization'] ? data['r_personalization'][0]['DECIMAL_FORMAT'] : ''],\n        DATE_FORMAT: [data['r_personalization'] ? data['r_personalization'][0]['DATE_FORMAT'] : '']\n      }),\n      userRole: this.fb.array([])\n    });\n\n    const emailArray = this.userForm.get('emails') as FormArray;\n    data['r_email'].forEach( email => {\n      emailArray.push(\n        this.fb.group({\n          EMAIL: [email['EMAIL'], [Validators.required]],\n          TYPE: [email['TYPE'], [Validators.required]],\n          PRIMARY: [email['PRIMARY']]\n        })\n      );\n    });\n\n    const addressArray = this.userForm.get('addresses') as FormArray;\n    if (data['r_address']) {\n      data['r_address'].forEach( address => {\n        addressArray.push(\n          this.fb.group({\n            ADDRESS_ID: [address['ADDRESS_ID']],\n            TYPE: [address['TYPE'], [Validators.required]],\n            ADDRESS_VALUE: [address['ADDRESS_VALUE'], [Validators.required]],\n            POSTCODE: [address['POSTCODE']],\n            CITY: [address['CITY']],\n            COUNTRY: [address['COUNTRY']],\n            PRIMARY: [address['PRIMARY']]\n          })\n        );\n      });\n    }\n\n    const roleArray = this.userForm.get('userRole') as FormArray;\n    const userRoleRelationship = data['relationships'][0];\n    if (userRoleRelationship) {\n      userRoleRelationship.values.forEach( value => {\n        const roleInstance = value.PARTNER_INSTANCES[0];\n        roleArray.push(\n          this.fb.group({\n            NAME: [roleInstance['r_role'][0]['NAME']],\n            DESCRIPTION: [roleInstance['r_role'][0]['DESCRIPTION']],\n            system_role_INSTANCE_GUID: [roleInstance['INSTANCE_GUID']],\n            RELATIONSHIP_INSTANCE_GUID: [value['RELATIONSHIP_INSTANCE_GUID']]\n          })\n        );\n      });\n    }\n\n    this.originalUserValue = this.userForm.getRawValue();\n  }\n\n  _resetUserValue(data: Entity): void {\n    this.originalUserValue = {\n      USER_ID: data['r_user'][0]['USER_ID'],\n      LOCK: data['r_user'][0]['LOCK'],\n      PWD_STATUS: data['r_user'][0]['PWD_STATUS'],\n      userBasic: {\n        names: {\n          USER_NAME: data['r_user'][0]['USER_NAME'],\n          DISPLAY_NAME: data['r_user'][0]['DISPLAY_NAME'],\n          GIVEN_NAME: data['r_user'][0]['GIVEN_NAME'],\n          MIDDLE_NAME: data['r_user'][0]['MIDDLE_NAME'],\n          FAMILY_NAME: data['r_user'][0]['FAMILY_NAME']\n        },\n        employee: {\n          TITLE: data['r_employee'][0]['TITLE'],\n          DEPARTMENT_ID: data['r_employee'][0]['DEPARTMENT_ID'],\n          COMPANY_ID: data['r_employee'][0]['COMPANY_ID'],\n          GENDER: data['r_employee'][0]['GENDER']\n        }\n      },\n      emails: [],\n      addresses: [],\n      userPersonalization: {\n        USER_ID: data['r_personalization'] ? data['r_personalization'][0]['USER_ID'] : '',\n        LANGUAGE: data['r_personalization'] ? data['r_personalization'][0]['LANGUAGE'] : '',\n        TIMEZONE: data['r_personalization'] ? data['r_personalization'][0]['TIMEZONE'] : '',\n        DECIMAL_FORMAT: data['r_personalization'] ? data['r_personalization'][0]['DECIMAL_FORMAT'] : '',\n        DATE_FORMAT: data['r_personalization'] ? data['r_personalization'][0]['DATE_FORMAT'] : ''\n      },\n      userRole: []\n    };\n\n    data['r_email'].forEach( email => {\n      this.originalUserValue['emails'].push(\n        {\n          EMAIL: email['EMAIL'],\n          TYPE: email['TYPE'],\n          PRIMARY: email['PRIMARY']\n        }\n      );\n    });\n\n    if (data['r_address']) {\n      data['r_address'].forEach( address => {\n        this.originalUserValue['addresses'].push(\n          {\n            ADDRESS_ID: address['ADDRESS_ID'],\n            TYPE: address['TYPE'],\n            ADDRESS_VALUE: address['ADDRESS_VALUE'],\n            POSTCODE: address['POSTCODE'],\n            CITY: address['CITY'],\n            COUNTRY: address['COUNTRY'],\n            PRIMARY: address['PRIMARY']\n          }\n        );\n      });\n    }\n\n    const userRoleRelationship = data['relationships'][0];\n    if (userRoleRelationship) {\n      userRoleRelationship.values.forEach( value => {\n        const roleInstance = value.PARTNER_INSTANCES[0];\n        this.originalUserValue['userRole'].push(\n          {\n            NAME: [roleInstance['r_role'][0]['NAME']],\n            DESCRIPTION: [roleInstance['r_role'][0]['DESCRIPTION']],\n            system_role_INSTANCE_GUID: [roleInstance['INSTANCE_GUID']],\n            RELATIONSHIP_INSTANCE_GUID: [value['RELATIONSHIP_INSTANCE_GUID']]\n          }\n        );\n      });\n    }\n\n    this.userForm.reset(this.originalUserValue);\n  }\n\n  _setCheckBoxState() {\n    const userEmailFormArray = this.userForm.get('emails') as FormArray;\n    const userAddressFormArray = this.userForm.get('addresses') as FormArray;\n    const userEmployeeForm = this.userForm.get('userBasic').get('employee') as FormGroup;\n    const userPersonalizationForm = this.userForm.get('userPersonalization') as FormGroup;\n    if (this.readonly) {\n      userEmailFormArray.controls.forEach( userEmailForm => {\n        userEmailForm.get('PRIMARY').disable();\n        userEmailForm.get('TYPE').disable();\n      });\n      userAddressFormArray.controls.forEach( userAddressForm => {\n        userAddressForm.get('PRIMARY').disable();\n        userAddressForm.get('TYPE').disable();\n      });\n      userEmployeeForm.get('GENDER').disable();\n      userPersonalizationForm.get('LANGUAGE').disable();\n      userPersonalizationForm.get('TIMEZONE').disable();\n      userPersonalizationForm.get('DECIMAL_FORMAT').disable();\n      userPersonalizationForm.get('DATE_FORMAT').disable();\n    } else {\n      userEmailFormArray.controls.forEach( userEmailForm => {\n        userEmailForm.get('PRIMARY').enable();\n        userEmailForm.get('TYPE').enable();\n      });\n      userAddressFormArray.controls.forEach( userAddressForm => {\n        userAddressForm.get('PRIMARY').enable();\n        userAddressForm.get('TYPE').enable();\n      });\n      userEmployeeForm.get('GENDER').enable();\n      userPersonalizationForm.get('LANGUAGE').enable();\n      userPersonalizationForm.get('TIMEZONE').enable();\n      userPersonalizationForm.get('DECIMAL_FORMAT').enable();\n      userPersonalizationForm.get('DATE_FORMAT').enable();\n    }\n  }\n\n  save() {\n    this.messageService.clearMessages();\n    if (this._composeChangesToUser()) {\n      this.identityService.save(<Entity>this.changedUser).subscribe( data => {\n        this.changedUser = {};\n        if ('INSTANCE_GUID' in data) {\n          const userID = data['r_user'][0]['USER_ID'];\n          this.instanceGUID = data['INSTANCE_GUID'];\n          this.isNewMode = false;\n          this.identityService.getUserDetail(userID).subscribe(userData => {\n            if ('ENTITY_ID' in userData) {\n              this._switch2DisplayMode();\n              this._resetUserValue(<Entity>userData);\n            } else {\n              const errorMessages = <Message[]>userData;\n              errorMessages.forEach( msg => this.messageService.add(msg));\n            }\n          });\n          this.messageService.reportMessage('USER', 'USER_SAVED', 'S', userID);\n        } else {\n          const errorMessages = <Message[]>data;\n          errorMessages.forEach( msg => this.messageService.add(msg));\n        }\n      });\n    }\n  }\n\n  _composeChangesToUser() {\n    if (this.userForm.invalid) {\n      this.messageService.reportMessage('USER', 'INVALID', 'E');\n      return false;\n    }\n\n    if (this.userForm.dirty === false) {\n      this.messageService.reportMessage('GENERAL', 'NO_CHANGE', 'W');\n      return false;\n    }\n\n    this.changedUser['ENTITY_ID'] = 'person';\n    this.changedUser['INSTANCE_GUID'] = this.instanceGUID;\n    if (this.isNewMode) {\n      this.changedUser['person'] = {action: 'add', TYPE: 'employee', SYSTEM_ACCESS: 'PORTAL'};\n    }\n\n    const userBasicFormGroup = this.userForm.get('userBasic');\n    const userID = this.userForm.get('USER_ID').value;\n    if (userBasicFormGroup.dirty) {\n      const userBasicNamesFormGroup = userBasicFormGroup.get('names') as FormGroup;\n      this.changedUser['r_user'] = this.uiMapperService.composeChangedRelation(\n        userBasicNamesFormGroup, {USER_ID: userID}, this.isNewMode);\n\n      const userBasicEmployeeFormGroup = userBasicFormGroup.get('employee') as FormGroup;\n      this.changedUser['r_employee'] = this.uiMapperService.composeChangedRelation(\n        userBasicEmployeeFormGroup, {USER_ID: userID}, this.isNewMode);\n    }\n\n    const userEmailFormArray = this.userForm.get('emails') as FormArray;\n    this.changedUser['r_email'] = this.uiMapperService.composeChangedRelationArray(\n      userEmailFormArray, this.originalUserValue['emails'], {EMAIL: null});\n\n    const userAddressFormArray = this.userForm.get('addresses') as FormArray;\n    this.changedUser['r_address'] = this.uiMapperService.composeChangedRelationArray(\n      userAddressFormArray, this.originalUserValue['addresses'], {ADDRESS_ID: null});\n\n    const userPersonalizationFormGroup = this.userForm.get('userPersonalization') as FormGroup;\n    this.changedUser['r_personalization'] = this.uiMapperService.composeChangedRelation(\n      userPersonalizationFormGroup, {USER_ID: userID}, !userPersonalizationFormGroup.get('USER_ID').value);\n\n    const userRoleFormArray = this.userForm.get('userRole') as FormArray;\n    const relationship = this.uiMapperService.composeChangedRelationship(\n      'rs_user_role',\n      [{ENTITY_ID: 'permission', ROLE_ID: 'system_role'}],\n      userRoleFormArray, this.originalUserValue['userRole'], ['NAME', 'DESCRIPTION']);\n    if (relationship) {this.changedUser['relationships'] = [relationship]; }\n\n    return true;\n  }\n\n  canDeactivate(): Observable<boolean> | boolean {\n    if (this.isNewMode || (this.userForm && this.userForm.dirty)) {\n      return this.dialogService.confirm('Discard changes?');\n    } else {\n      return true;\n    }\n  }\n}\n\n","<nav class=\"navbar dk-fixed-top navbar-light bg-light\">\n  <div>\n    <span class=\"font-weight-bold mb-0 mx-1\">{{isNewMode? 'New User' : readonly? 'Display User' : 'Change User'}}</span>\n  </div>\n\n  <div class=\"flex-row-reverse\">\n    <button class=\"btn btn-sm btn-outline-primary mr-2\" type=\"button\" title=\"Edit/Display\" id=\"editDisplay\" (click)=\"switchEditDisplay()\">\n      <span *ngIf=\"readonly\" class=\"fas fa-edit\"> Edit</span>\n      <span *ngIf=\"!readonly\" class=\"fas fa-glasses\"> Display</span>\n    </button>\n    <button class=\"btn btn-sm btn-outline-primary mr-2\" type=\"button\" title=\"Save\" id=\"save\" (click)=\"save()\" [disabled]=\"readonly\">\n      <span class=\"fas fa-save\"> Save</span>\n    </button>\n  </div>\n</nav>\n\n<div class=\"mt-2 mb-2\">\n  <dk-message></dk-message>\n</div>\n\n<div *ngIf=\"userForm\" class=\"ml-2\">\n  <div class=\"mt-2 ml-1 row\">\n    <dk-app-attribute-form2 class=\"col-md-6 col-lg-4\"\n                            [attributeControl]=\"getAttrCtrlFromID('USER_ID')\"\n                            [formGroup]=\"userForm\"\n                            [readonly]=\"!isNewMode\"\n                            [isSmallSize]=\"true\">\n    </dk-app-attribute-form2>\n    <div class=\"col-md-6 col-lg-4 row form-group mr-2\" [formGroup]=\"userForm\">\n      <label for=\"lockStatus\" class=\"col-form-label col-form-label-sm\">Lock Status:</label>\n      <div id=\"lockStatus\" class=\"form-control dk-icon\">\n        <span *ngIf=\"userForm.get('LOCK').value\" class=\"fas fa-lock\" > Locked</span>\n        <span *ngIf=\"!userForm.get('LOCK').value\" class=\"fas fa-lock-open\"> Unlocked</span>\n      </div>\n    </div>\n    <div class=\"col-md-6 col-lg-4 row form-group mr-2\" [formGroup]=\"userForm\">\n      <label for=\"passwordStatus\" class=\"col-form-label col-form-label-sm\">Password Status:</label>\n      <div id=\"passwordStatus\" class=\"form-control dk-icon\" [ngSwitch]=\"userForm.get('PWD_STATUS').value\">\n        <div *ngSwitchCase=\"\">\n          <span class=\"badge badge-primary\">Initial</span>\n        </div>\n        <div *ngSwitchCase=\"1\">\n          <span class=\"badge badge-success\">Active</span>\n        </div>\n        <div *ngSwitchCase=\"2\">\n          <span class=\"badge badge-warning\">Renew</span>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <ul class=\"nav nav-tabs mt-1\">\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [class.active]=\"tabStrip===1\" href=\"javascript:void(0);\" (click)=\"switchTabStrip(1)\">Basic</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [class.active]=\"tabStrip===2\" href=\"javascript:void(0);\" (click)=\"switchTabStrip(2)\">Email</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [class.active]=\"tabStrip===3\" href=\"javascript:void(0);\" (click)=\"switchTabStrip(3)\">Address</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [class.active]=\"tabStrip===4\" href=\"javascript:void(0);\" (click)=\"switchTabStrip(4)\">Personalization</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [class.active]=\"tabStrip===5\" href=\"javascript:void(0);\" (click)=\"switchTabStrip(5)\">Role</a>\n    </li>\n  </ul>\n\n  <div class=\"mt-2\" [ngSwitch]=\"tabStrip\">\n    <app-user-basic *ngSwitchCase=\"1\" [userForm]=\"userForm\" [relationMetas]=\"relationMetas\" [readonly]=\"readonly\"></app-user-basic>\n    <app-user-email *ngSwitchCase=\"2\" [userForm]=\"userForm\" [relationMetas]=\"relationMetas\" [readonly]=\"readonly\"></app-user-email>\n    <app-user-address *ngSwitchCase=\"3\" [userForm]=\"userForm\" [relationMetas]=\"relationMetas\"  [readonly]=\"readonly\"></app-user-address>\n    <app-user-personalization *ngSwitchCase=\"4\" [userForm]=\"userForm\" [relationMetas]=\"relationMetas\" [readonly]=\"readonly\"></app-user-personalization>\n    <app-user-role *ngSwitchCase=\"5\" [userForm]=\"userForm\" [readonly]=\"readonly\"></app-user-role>\n  </div>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {FormArray, FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {MessageService} from \"ui-message-angular\";\nimport {AttributeBase, AttributeControlService, RelationMeta} from \"jor-angular\";\n\n@Component({\n  selector: 'app-user-email',\n  templateUrl: './user-email.component.html',\n  styleUrls: ['./user-email.component.css']\n})\nexport class UserEmailComponent implements OnInit {\n  @Input() readonly: boolean;\n  @Input() userForm: FormGroup;\n  @Input() relationMetas: RelationMeta[];\n  private attrCtrls: AttributeBase[];\n  userEmailFormArray: FormArray;\n\n  constructor(private fb: FormBuilder,\n              private messageService: MessageService,\n              private attributeControlService: AttributeControlService) { }\n\n  ngOnInit() {\n    this.userEmailFormArray = this.userForm.get('emails') as FormArray;\n    this.attrCtrls = this.attributeControlService.toAttributeControl(\n      this.relationMetas.find( relationMeta => relationMeta.RELATION_ID === 'r_email').ATTRIBUTES);\n    if (!this.readonly && this.userEmailFormArray.length === 0) {\n      this.addEmail();\n    }\n  }\n\n  getAttrCtrlFromID(fieldName: string): AttributeBase {\n    return this.attrCtrls.find( attrCtrl => attrCtrl.name === fieldName);\n  }\n\n  addEmail() {\n    const emailFormGroup = this.fb.group({\n      EMAIL: ['', [Validators.required]],\n      TYPE: ['', [Validators.required]],\n      PRIMARY: ['']\n    });\n    if (this.userEmailFormArray.length === 0) {\n      emailFormGroup.get('PRIMARY').setValue(1);\n      emailFormGroup.get('PRIMARY').markAsDirty();\n    }\n    this.userEmailFormArray.push(emailFormGroup);\n  }\n\n  deleteEmail(index: number) {\n    if (this.userEmailFormArray.length === 1) {\n      this.messageService.reportMessage('USER', 'AT_LEAST_ONE_EMAIL', 'E');\n    } else {\n      if (this.userEmailFormArray.at(index).value['PRIMARY']) {\n        const newPrimaryIndex = index === 0 ? 1 : 0;\n        this.userEmailFormArray.at(newPrimaryIndex).get('PRIMARY').setValue(1);\n        this.userEmailFormArray.at(newPrimaryIndex).get('PRIMARY').markAsDirty();\n      }\n      this.userEmailFormArray.removeAt(index);\n      this.userEmailFormArray.markAsDirty();\n    }\n  }\n}\n","<div class=\"card mt-4\">\n  <div class=\"card-body\">\n    <div *ngFor=\"let userEmailForm of userEmailFormArray.controls; let i = index\" class=\"card mb-4\">\n      <button type=\"button\" id=\"remove\" class=\"close d-flex justify-content-end mr-2\" aria-label=\"Close\" (click)=\"deleteEmail(i)\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n      <div class=\"card-body row\" [formGroup]=\"userEmailForm\">\n        <dk-app-attribute-form2 class=\"col-md-6 col-lg-4\"\n                                [attributeControl]=\"getAttrCtrlFromID('TYPE')\"\n                                [formGroup]=\"userEmailForm\"\n                                [readonly]=\"readonly\"\n                                [isSmallSize]=\"true\">\n        </dk-app-attribute-form2>\n        <dk-app-attribute-form2 class=\"col-md-6 col-lg-4\"\n                                [attributeControl]=\"getAttrCtrlFromID('EMAIL')\"\n                                [formGroup]=\"userEmailForm\"\n                                [readonly]=\"readonly\"\n                                [isSmallSize]=\"true\">\n        </dk-app-attribute-form2>\n        <div class=\"col-1 row form-group mr-2\">\n          <label for=\"primaryEmail\" class=\"col-form-label col-form-label\">Primary</label>\n          <input type=\"radio\" class=\"form-control form-control-sm\" id=\"primaryEmail\" [value]=\"1\" name=\"PRIMARY\" formControlName=\"PRIMARY\">\n        </div>\n      </div>\n    </div>\n    <button type=\"button\" id=\"add\" class=\"btn btn-sm btn-primary float-right\" [disabled]=\"readonly\" (click)=\"addEmail()\">Add</button>\n  </div>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {FormGroup} from \"@angular/forms\";\nimport {AttributeBase, AttributeControlService, RelationMeta} from \"jor-angular\";\n\n@Component({\n  selector: 'app-user-personalization',\n  templateUrl: './user-personalization.component.html',\n  styleUrls: ['./user-personalization.component.css']\n})\nexport class UserPersonalizationComponent implements OnInit {\n  @Input() readonly: boolean;\n  @Input() userForm: FormGroup;\n  @Input() relationMetas: RelationMeta[];\n  private attrCtrls: AttributeBase[];\n  userPersonalizationForm: FormGroup;\n\n  constructor(private attributeControlService: AttributeControlService) { }\n\n  ngOnInit() {\n    this.userPersonalizationForm = this.userForm.get('userPersonalization') as FormGroup;\n    this.attrCtrls = this.attributeControlService.toAttributeControl(\n      this.relationMetas.find( relationMeta => relationMeta.RELATION_ID === 'r_personalization').ATTRIBUTES);\n  }\n\n  getAttrCtrlFromID(fieldName: string): AttributeBase {\n    return this.attrCtrls.find( attrCtrl => attrCtrl.name === fieldName);\n  }\n}\n","<form class=\"mt-4 ml-2 row\">\n  <dk-app-attribute-form2 class=\"col-md-6 col-lg-4\"\n                          [attributeControl]=\"getAttrCtrlFromID('LANGUAGE')\"\n                          [formGroup]=\"userPersonalizationForm\"\n                          [readonly]=\"readonly\"\n                          [isSmallSize]=\"true\">\n  </dk-app-attribute-form2>\n  <dk-app-attribute-form2 class=\"col-md-6 col-lg-4\"\n                          [attributeControl]=\"getAttrCtrlFromID('TIMEZONE')\"\n                          [formGroup]=\"userPersonalizationForm\"\n                          [readonly]=\"readonly\"\n                          [isSmallSize]=\"true\">\n  </dk-app-attribute-form2>\n  <dk-app-attribute-form2 class=\"col-md-6 col-lg-4\"\n                          [attributeControl]=\"getAttrCtrlFromID('DECIMAL_FORMAT')\"\n                          [formGroup]=\"userPersonalizationForm\"\n                          [readonly]=\"readonly\"\n                          [isSmallSize]=\"true\">\n  </dk-app-attribute-form2>\n  <dk-app-attribute-form2 class=\"col-md-6 col-lg-4\"\n                          [attributeControl]=\"getAttrCtrlFromID('DATE_FORMAT')\"\n                          [formGroup]=\"userPersonalizationForm\"\n                          [readonly]=\"readonly\"\n                          [isSmallSize]=\"true\">\n  </dk-app-attribute-form2>\n</form>\n","import {Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {AbstractControl, FormArray, FormBuilder, FormGroup} from \"@angular/forms\";\nimport {IdentityService} from \"../../../identity.service\";\nimport {SearchHelpComponent} from \"jor-angular\";\n\n@Component({\n  selector: 'app-user-role',\n  templateUrl: './user-role.component.html',\n  styleUrls: ['./user-role.component.css']\n})\nexport class UserRoleComponent implements OnInit {\n  @Input() readonly: boolean;\n  @Input() userForm: FormGroup;\n  userRoleFormArray: FormArray;\n\n  constructor(private fb: FormBuilder,\n              private identityService: IdentityService) { }\n\n  @ViewChild(SearchHelpComponent, { static: true })\n  private searchHelpComponent: SearchHelpComponent;\n\n  ngOnInit() {\n    this.userRoleFormArray = this.userForm.get('userRole') as FormArray;\n    // Recheck each role since every time the template is initialized, Angular clears the error status.\n    if (!this.readonly) {\n      this.userRoleFormArray.controls.forEach( (ctrl, index) => {\n        this.onChangeRoleID(index);\n      });\n    }\n  }\n\n  deleteRole(index: number): void {\n    if (index !== this.userRoleFormArray.length - 1) {\n      this.userRoleFormArray.removeAt(index);\n      this.userRoleFormArray.markAsDirty();\n    }\n  }\n\n  onChangeRoleID(index: number): void {\n    const currentRole = this.userRoleFormArray.at(index);\n    if (this.oldRole(currentRole)) {\n      currentRole.get('NAME').setErrors({message: 'Duplicate Role'});\n      return;\n    }\n\n    if (index === this.userRoleFormArray.length - 1 && currentRole.value.NAME.trim() !== '') {\n      // Only work if the last line is not new and empty\n      this.userRoleFormArray.push(\n        this.fb.group({\n          NAME: [''],\n          DESCRIPTION: [''],\n          system_role_INSTANCE_GUID: [''],\n          RELATIONSHIP_INSTANCE_GUID: ['']\n        })\n      );\n    }\n\n    if (currentRole.value.NAME) {\n      this.identityService.getRoleDesc(currentRole.value.NAME).subscribe(data => {\n        if (data['msgCat']) {\n          currentRole.get('NAME').setErrors({message: data['msgShortText']});\n        } else {\n          currentRole.get('DESCRIPTION').setValue(data['DESCRIPTION']);\n          currentRole.get('system_role_INSTANCE_GUID').setValue(data['INSTANCE_GUID']);\n        }\n      });\n    }\n  }\n\n  oldRole(userRoleForm: AbstractControl): boolean {\n    const existIndex = this.userRoleFormArray.controls.findIndex(\n      role => role.value.NAME === userRoleForm.value.NAME && role.pristine && role.value.NAME !== '');\n    return existIndex !== -1 ;\n  }\n\n  onSearchHelp(rowID: number, exportObject: AbstractControl): void {\n    const afterExportFn = function (context: any, ruleIdx: number) {\n      return () => context.onChangeRoleID(ruleIdx);\n    }(this, rowID).bind(this);\n\n    this.searchHelpComponent.openSearchHelpModalByEntity('permission', 'r_role',\n      exportObject, this.readonly, null, null, afterExportFn);\n  }\n\n}\n","<table class=\"table table-sm table-bordered dk-table ml-3 mt-4\" [formGroup]=\"userForm\">\n  <thead class=\"thead-light dk-form-label\">\n    <tr>\n      <th class=\"dk-name\">Role</th>\n      <th class=\"dk-description\">Description</th>\n      <th class=\"dk-actions\">Action</th>\n    </tr>\n  </thead>\n\n  <tbody formArrayName=\"userRole\" class=\"mb-4\">\n    <tr *ngFor=\"let userRoleForm of userRoleFormArray.controls; let i = index\">\n      <td [formGroup]=\"userRoleForm\">\n        <div class=\"input-group\">\n          <input class=\"form-control form-control-sm\" type=\"text\" formControlName=\"NAME\" name=\"roleName\"\n               [readonly]=\"readonly || oldRole(userRoleForm) && userRoleForm.valid\" (change)=\"onChangeRoleID(i)\">\n          <div class=\"invalid-tooltip\">\n            {{userRoleForm.get('NAME').errors?.message}}\n          </div>\n          <div class=\"input-group-append\">\n            <button class=\"btn btn-sm btn-outline-secondary btn-light\" type=\"button\" id=\"searchPermission\"\n            (click)=\"onSearchHelp(i, userRoleForm)\">\n              <span class=\"fas fa-search\"></span>\n            </button>\n          </div>\n        </div>\n      </td>\n      <td [formGroup]=\"userRoleForm\" >\n        <input type=\"text\" formControlName=\"DESCRIPTION\" readonly class=\"form-control form-control-sm\">\n      </td>\n      <td>\n        <button class=\"btn btn-sm\" type=\"button\" id=\"delete\" [disabled]=\"readonly\" (click)=\"deleteRole(i)\" title=\"Delete\">\n          <span class=\"far fa-trash-alt\"></span>\n        </button>\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n<dk-app-search-help></dk-app-search-help>\n","import { Component, OnInit } from '@angular/core';\nimport {Message, MessageService, messageType} from 'ui-message-angular';\nimport {Router} from '@angular/router';\nimport {IdentityService} from '../../identity.service';\nimport {UserList} from '../../identity';\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css']\n})\nexport class UserListComponent implements OnInit {\n  userID: string;\n  userName: string;\n  users: UserList[];\n  showDeletionConfirmation = false;\n  toBeDeletedUser: string;\n\n  get displayDeletionConfirmation() {return this.showDeletionConfirmation ? 'block' : 'none'; }\n\n  constructor(private identityService: IdentityService,\n              private messageService: MessageService,\n              private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  search() {\n    this.messageService.clearMessages();\n    this.users = [];\n    this.userID = this.userID ? this.userID.trim() : '';\n    this.userName = this.userName ? this.userName.trim() : '';\n    this.identityService.searchUsers(this.userID, this.userName).subscribe(\n      data => {\n        if (!data[0]) {\n          this.messageService.reportMessage('GENERAL', 'EMPTY_LIST', messageType.Warning);\n        } else if (data[0]['msgCat']) {\n          const messages = <Message[]>data;\n          messages.forEach( msg => this.messageService.add(msg));\n        } else {\n          this.users = <UserList[]>data;\n        }\n      }\n    );\n  }\n\n  enterSearch($event): void {\n    if ($event.keyCode === 13 ) {\n       this.search();\n    }\n  }\n\n  newUser(): void {\n    this.router.navigate(['users', '/', {action: 'new'}]);\n  }\n\n  displayUser(userID: string): void {\n    this.router.navigate(['users', userID, {action: 'display'}]);\n  }\n\n  changeUser(userID: string): void {\n    this.router.navigate(['users', userID, {action: 'change'}]);\n  }\n\n  deleteUser(userID: string): void {\n    this.toBeDeletedUser = userID;\n    this.showDeletionConfirmation = true;\n  }\n\n  cancelDeletion(): void {\n    this.showDeletionConfirmation = false;\n  }\n\n  confirmDeletion(): void {\n    const toBeDeletedUserGUID = this.users.find( ele => ele.USER_ID === this.toBeDeletedUser).INSTANCE_GUID;\n    this.identityService.delete(toBeDeletedUserGUID).subscribe( errorMsg => {\n      this.showDeletionConfirmation = false;\n      if (errorMsg) {\n        const messages = <Message[]>errorMsg;\n        messages.forEach( msg => this.messageService.add(msg));\n      } else {\n        this.search();\n      }\n    });\n  }\n\n}\n","<div class=\"card mb-3 pt-3\">\n  <div class=\"mt-2 pl-4 row\">\n    <div class=\"col-6 form-group row\">\n      <label for=\"user_id\" class=\"col-sm-3 col-form-label col-form-label-sm\">User ID:</label>\n      <input id=\"user_id\" name=\"user_id\" [(ngModel)]=\"userID\" type=\"text\"\n             class=\"col-sm-6 form-control form-control-sm\" (keyup)=\"enterSearch($event)\" autofocus>\n    </div>\n    <div class=\"col-6 form-group row\">\n      <label for=\"user_name\" class=\"col-sm-3 col-form-label col-form-label-sm\">User Name:</label>\n      <input id=\"user_name\" name=\"user_name\" [(ngModel)]=\"userName\" type=\"text\"\n             class=\"col-sm-6 form-control form-control-sm\" (keyup)=\"enterSearch($event)\">\n    </div>\n  </div>\n\n  <div class=\"mb-4\">\n    <button type=\"button\" id=\"search\" class=\"btn btn-sm btn-primary float-right mr-4\" (click)=\"search()\">Search</button>\n  </div>\n</div>\n\n<div class=\"mt-2 mb-4 mx-4\">\n  <dk-message></dk-message>\n  <div class=\"btn-toolbar justify-content-end my-2\" role=\"toolbar\">\n    <button type=\"button\" id=\"new\" class=\"btn btn-light btn-sm\" (click)=\"newUser()\"><span class=\"fas fa-plus\"></span> New</button>\n  </div>\n  <table class=\"table table-bordered table-sm\">\n    <thead class=\"thead-light\">\n    <tr>\n      <th>User ID</th>\n      <th>User Name</th>\n      <th>Display Name</th>\n      <th class=\"dk-lock\">Locked?</th>\n      <th class=\"dk-password-state\" >Password State</th>\n      <th class=\"dk-actions\">Action</th>\n    </tr>\n    </thead>\n\n    <tbody>\n    <tr *ngFor=\"let user of users\">\n      <td><a [routerLink]=\"['/users', user.USER_ID, {action: 'display'}]\">{{user.USER_ID}}</a></td>\n      <td>{{user.USER_NAME}}</td>\n      <td>{{user.DISPLAY_NAME}}</td>\n      <td >\n        <span *ngIf=\"user.LOCK\" class=\"fas fa-lock\" title=\"Locked\"></span>\n        <span *ngIf=\"!user.LOCK\" class=\"fas fa-lock-open\" title=\"Unlocked\"></span>\n      </td>\n      <td [ngSwitch]=\"user.PWD_STATE\">\n        <div *ngSwitchCase=\"\">\n          <span class=\"badge badge-primary\">Initial</span>\n        </div>\n        <div *ngSwitchCase=\"1\">\n          <span class=\"badge badge-success\">Active</span>\n        </div>\n        <div *ngSwitchCase=\"2\">\n          <span class=\"badge badge-warning\">Renew</span>\n        </div>\n      </td>\n      <td>\n        <button title=\"Display\" id=\"display\" class=\"btn btn-sm\" type=\"button\" (click)=\"displayUser(user.USER_ID)\">\n          <span class=\"fas fa-search\"></span>\n        </button>\n        <button title=\"Change\" id=\"change\" class=\"btn btn-sm\" type=\"button\" (click)=\"changeUser(user.USER_ID)\">\n          <span class=\"fas fa-pen\"></span>\n        </button>\n        <button title=\"Delete\" id=\"delete\" class=\"btn btn-sm\" type=\"button\" (click)=\"deleteUser(user.USER_ID)\">\n          <span class=\"far fa-trash-alt\"></span>\n        </button>\n      </td>\n    </tr>\n    </tbody>\n  </table>\n\n  <div class=\"modal\" [class.show]=\"showDeletionConfirmation\"\n       [ngStyle]=\"{'display': displayDeletionConfirmation}\" id=\"deletionConfirmation\" tabindex=\"-1\" role=\"dialog\">\n    <div class=\"modal-dialog modal-sm modal-dialog-centered\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"confirmDeletion\">Confirm Deletion</h5>\n          <button type=\"button\" class=\"close\" (click)=\"cancelDeletion()\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          <p>Are you sure to delete the user '{{toBeDeletedUser}}'?</p>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" id=\"cancel\" class=\"btn btn-sm btn-secondary\" (click)=\"cancelDeletion()\">Cancel</button>\n          <button type=\"button\" id=\"confirm\" class=\"btn btn-sm btn-primary\" (click)=\"confirmDeletion()\">Confirm</button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n</div>\n","import { Injectable } from '@angular/core';\nimport {ActivatedRouteSnapshot, CanDeactivate, RouterStateSnapshot} from '@angular/router';\nimport { Observable } from 'rxjs';\n\nexport interface CanComponentDeactivate {\n  canDeactivate: () => Observable<boolean> | Promise<boolean> | boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WorkProtectionGuard implements CanDeactivate<CanComponentDeactivate>  {\n\n  canDeactivate(component: CanComponentDeactivate,\n                currentRoute: ActivatedRouteSnapshot,\n                currentState: RouterStateSnapshot,\n                nextState?: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    return component.canDeactivate ? component.canDeactivate() : true;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  redirectPath: '',\n  redirectUrl: '/portal/external-app/PERMISSION',\n  originalHost: 'http://localhost:3000'\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"]}